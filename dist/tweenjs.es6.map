{"version":3,"names":[],"mappings":"","sources":["tweenjs.es6.js"],"sourcesContent":["/**\n * @license tweenjs\n * Visit http://createjs.com for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/*\n* @license Event\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * A collection of classes that are shared across the CreateJS libraries.\n * Classes required by a library are compiled with that library.\n *\n * @module CreateJS\n * @main CreateJS\n */\n\n/**\n * Contains properties and methods shared by all events for use with {{#crossLink \"EventDispatcher\"}}{{/crossLink}}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @class Event\n * @module CreateJS\n */\nclass Event {\n\n// constructor:\n\t/**\n\t * @param {String} type The event type.\n\t * @param {Boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n\t * @param {Boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n\t * @constructor\n\t */\n\tconstructor (type, bubbles = false, cancelable = false) {\n\t\t/**\n\t\t * The type of event.\n\t\t * @property type\n\t\t * @type String\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t * @property target\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t * @property currentTarget\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:<OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t * @property eventPhase\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t * @property bubbles\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.bubbles = bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via\n\t\t * {{#crossLink \"Event/preventDefault\"}}{{/crossLink}}. This is set via the Event constructor.\n\t\t * @property cancelable\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.cancelable = cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t * @property timeStamp\n\t\t * @type Number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.timeStamp = new Date().getTime();\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/preventDefault\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property defaultPrevented\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopPropagation\"}}{{/crossLink}} or\n\t\t * {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called on this event.\n\t\t * @property propagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/stopImmediatePropagation\"}}{{/crossLink}} has been called\n\t\t * on this event.\n\t\t * @property immediatePropagationStopped\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {{#crossLink \"Event/remove\"}}{{/crossLink}} has been called on this event.\n\t\t * @property removed\n\t\t * @type Boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.removed = false;\n\t}\n\n// public methods:\n\t/**\n\t * Sets {{#crossLink \"Event/defaultPrevented\"}}{{/crossLink}} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @method preventDefault\n\t */\n\tpreventDefault () {\n\t\tthis.defaultPrevented = this.cancelable;\n\t}\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopPropagation\n\t */\n\tstopPropagation () {\n\t\tthis.propagationStopped = true;\n\t}\n\n\t/**\n\t * Sets {{#crossLink \"Event/propagationStopped\"}}{{/crossLink}} and\n\t * {{#crossLink \"Event/immediatePropagationStopped\"}}{{/crossLink}} to true.\n\t * Mirrors the DOM event standard.\n\t * @method stopImmediatePropagation\n\t */\n\tstopImmediatePropagation () {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t}\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t *\n\t * \t\tmyBtn.addEventListener(\"click\", function(evt) {\n\t * \t\t\t// do stuff...\n\t * \t\t\tevt.remove(); // removes this listener.\n\t * \t\t});\n\t *\n\t * @method remove\n\t */\n\tremove () {\n\t\tthis.removed = true;\n\t}\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t * @method clone\n\t * @return {Event} a clone of the Event instance.\n\t */\n\tclone () {\n\t\tlet event = new Event(this.type, this.bubbles, this.cancelable);\n\t\tfor (let n in this) {\n\t\t\tif (this.hasOwnProperty(n)) {\n\t\t\t\tevent[n] = this[n];\n\t\t\t}\n\t\t}\n\n\t\treturn event;\n\t}\n\n\t/**\n\t * Provides a chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @method set\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {Event} Returns the instance the method is called on (useful for chaining calls.)\n\t * @chainable\n\t */\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type})]`;\n\t}\n\n}\n\n/*\r\n* @license EventDispatcher\r\n* Visit http://createjs.com/ for documentation, updates and examples.\r\n*\r\n* Copyright (c) 2017 gskinner.com, inc.\r\n*\r\n* Permission is hereby granted, free of charge, to any person\r\n* obtaining a copy of this software and associated documentation\r\n* files (the \"Software\"), to deal in the Software without\r\n* restriction, including without limitation the rights to use,\r\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n* copies of the Software, and to permit persons to whom the\r\n* Software is furnished to do so, subject to the following\r\n* conditions:\r\n*\r\n* The above copyright notice and this permission notice shall be\r\n* included in all copies or substantial portions of the Software.\r\n*\r\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n* OTHER DEALINGS IN THE SOFTWARE.\r\n*/\r\n\r\n/**\r\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\r\n *\r\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\r\n * EventDispatcher {{#crossLink \"EventDispatcher/initialize\"}}{{/crossLink}} method.\r\n *\r\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\r\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\r\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\r\n *\r\n * EventDispatcher also exposes a {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} method, which makes it easier\r\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\r\n * {{#crossLink \"EventDispatcher/off\"}}{{/crossLink}} method is merely an alias to\r\n * {{#crossLink \"EventDispatcher/removeEventListener\"}}{{/crossLink}}.\r\n *\r\n * Another addition to the DOM Level 2 model is the {{#crossLink \"EventDispatcher/removeAllEventListeners\"}}{{/crossLink}}\r\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\r\n * includes a {{#crossLink \"Event/remove\"}}{{/crossLink}} method which removes the active listener.\r\n *\r\n * <h4>Example</h4>\r\n * Add EventDispatcher capabilities to the \"MyClass\" class.\r\n *\r\n *      EventDispatcher.initialize(MyClass.prototype);\r\n *\r\n * Add an event (see {{#crossLink \"EventDispatcher/addEventListener\"}}{{/crossLink}}).\r\n *\r\n *      instance.addEventListener(\"eventName\", handlerMethod);\r\n *      function handlerMethod(event) {\r\n\t *          console.log(event.target + \" Was Clicked\");\r\n\t *      }\r\n *\r\n * <b>Maintaining proper scope</b><br />\r\n * Scope (ie. \"this\") can be be a challenge with events. Using the {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}}\r\n * method to subscribe to events simplifies this.\r\n *\r\n *      instance.addEventListener(\"click\", function(event) {\r\n\t *          console.log(instance == this); // false, scope is ambiguous.\r\n\t *      });\r\n *\r\n *      instance.on(\"click\", function(event) {\r\n\t *          console.log(instance == this); // true, \"on\" uses dispatcher scope by default.\r\n\t *      });\r\n *\r\n * If you want to use addEventListener instead, you may want to use function.bind() or a similar proxy to manage scope.\r\n *\r\n *\r\n * @class EventDispatcher\r\n * @module CreateJS\r\n */\r\nclass EventDispatcher {\r\n\r\n// static methods:\r\n\t/**\r\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\r\n\t *\r\n\t * \t\tEventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\r\n\t * \t\tEventDispatcher.initialize(myObject); // add to a specific instance\r\n\t *\r\n\t * @method initialize\r\n\t * @static\r\n\t * @param {Object} target The target object to inject EventDispatcher methods into. This can be an instance or a\r\n\t * prototype.\r\n\t */\r\n\tstatic initialize (target) {\r\n\t\tconst p = EventDispatcher.prototype;\r\n\t\ttarget.addEventListener = p.addEventListener;\r\n\t\ttarget.on = p.on;\r\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\r\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\r\n\t\ttarget.hasEventListener = p.hasEventListener;\r\n\t\ttarget.dispatchEvent = p.dispatchEvent;\r\n\t\ttarget._dispatchEvent = p._dispatchEvent;\r\n\t\ttarget.willTrigger = p.willTrigger;\r\n\t}\r\n\r\n// constructor:\r\n\t/**\r\n\t * @constructor\r\n\t */\r\n\tconstructor () {\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _listeners\r\n\t\t * @type Object\r\n\t\t */\r\n\t\tthis._listeners = null;\r\n\r\n\t\t/**\r\n\t\t * @protected\r\n\t\t * @property _captureListeners\r\n\t\t * @type Object\r\n\t\t */\r\n\t\tthis._captureListeners = null;\r\n\t}\r\n\r\n// public methods:\r\n\t/**\r\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\r\n\t * multiple callbacks getting fired.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.addEventListener(\"click\", handleClick);\r\n\t *      function handleClick(event) {\r\n\t *         // Click happened.\r\n\t *      }\r\n\t *\r\n\t * @method addEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function | Object} Returns the listener for chaining or assignment.\r\n\t */\r\n\taddEventListener (type, listener, useCapture) {\r\n\t\tlet listeners;\r\n\t\tif (useCapture) {\r\n\t\t\tlisteners = this._captureListeners = this._captureListeners||{};\r\n\t\t} else {\r\n\t\t\tlisteners = this._listeners = this._listeners||{};\r\n\t\t}\r\n\t\tlet arr = listeners[type];\r\n\t\tif (arr) { this.removeEventListener(type, listener, useCapture); }\r\n\t\tarr = listeners[type]; // remove may have deleted the array\r\n\t\tif (!arr) { listeners[type] = [listener];  }\r\n\t\telse { arr.push(listener); }\r\n\t\treturn listener;\r\n\t}\r\n\r\n\t/**\r\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\r\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\r\n\t *\r\n\t * This method works by creating an anonymous wrapper function and subscribing it with addEventListener.\r\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\r\n\t *\r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\r\n\t * {{#crossLink \"Event/remove\"}}{{/crossLink}}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\r\n\t * to `on` with the same params will create multiple listeners.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t * \t\tvar listener = myBtn.on(\"click\", handleClick, null, false, {count:3});\r\n\t * \t\tfunction handleClick(evt, data) {\r\n\t * \t\t\tdata.count -= 1;\r\n\t * \t\t\tconsole.log(this == myBtn); // true - scope defaults to the dispatcher\r\n\t * \t\t\tif (data.count == 0) {\r\n\t * \t\t\t\talert(\"clicked 3 times!\");\r\n\t * \t\t\t\tmyBtn.off(\"click\", listener);\r\n\t * \t\t\t\t// alternately: evt.remove();\r\n\t * \t\t\t}\r\n\t * \t\t}\r\n\t *\r\n\t * @method on\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener An object with a handleEvent method, or a function that will be called when\r\n\t * the event is dispatched.\r\n\t * @param {Object} [scope] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\r\n\t * @param {Boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\r\n\t * @param {*} [data] Arbitrary data that will be included as the second parameter when the listener is called.\r\n\t * @param {Boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\r\n\t */\r\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\r\n\t\tif (listener.handleEvent) {\r\n\t\t\tscope = scope||listener;\r\n\t\t\tlistener = listener.handleEvent;\r\n\t\t}\r\n\t\tscope = scope||this;\r\n\t\treturn this.addEventListener(type, function(evt) {\r\n\t\t\tlistener.call(scope, evt, data);\r\n\t\t\tonce&&evt.remove();\r\n\t\t}, useCapture);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes the specified event listener.\r\n\t *\r\n\t * <b>Important Note:</b> that you must pass the exact function reference used when the event was added. If a proxy\r\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\r\n\t * closure will not work.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      displayObject.removeEventListener(\"click\", handleClick);\r\n\t *\r\n\t * @method removeEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t */\r\n\tremoveEventListener (type, listener, useCapture) {\r\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\r\n\t\tif (!listeners) { return; }\r\n\t\tconst arr = listeners[type];\r\n\t\tif (!arr) { return; }\r\n\t\tconst l = arr.length;\r\n\t\tfor (let i=0; i<l; i++) {\r\n\t\t\tif (arr[i] == listener) {\r\n\t\t\t\tif (l==1) { delete(listeners[type]); } // allows for faster checks.\r\n\t\t\t\telse { arr.splice(i,1); }\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\r\n\t * .on method.\r\n\t *\r\n\t * <b>IMPORTANT:</b> To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\r\n\t * {{#crossLink \"EventDispatcher/on\"}}{{/crossLink}} for an example.\r\n\t *\r\n\t * @method off\r\n\t * @param {String} type The string type of the event.\r\n\t * @param {Function | Object} listener The listener function or object.\r\n\t * @param {Boolean} [useCapture] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\r\n\t */\r\n\toff (type, listener, useCapture) {\r\n\t\tthis.removeEventListener(type, listener, useCapture);\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all listeners for the specified type, or all listeners of all types.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Remove all listeners\r\n\t *      displayObject.removeAllEventListeners();\r\n\t *\r\n\t *      // Remove all click listeners\r\n\t *      displayObject.removeAllEventListeners(\"click\");\r\n\t *\r\n\t * @method removeAllEventListeners\r\n\t * @param {String} [type] The string type of the event. If omitted, all listeners for all types will be removed.\r\n\t */\r\n\tremoveAllEventListeners (type) {\r\n\t\tif (!type) { this._listeners = this._captureListeners = null; }\r\n\t\telse {\r\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\r\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches the specified event to all listeners.\r\n\t *\r\n\t * <h4>Example</h4>\r\n\t *\r\n\t *      // Use a string event\r\n\t *      this.dispatchEvent(\"complete\");\r\n\t *\r\n\t *      // Use an Event instance\r\n\t *      var event = new createjs.Event(\"progress\");\r\n\t *      this.dispatchEvent(event);\r\n\t *\r\n\t * @method dispatchEvent\r\n\t * @param {Object | String | Event} eventObj An object with a \"type\" property, or a string type.\r\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\r\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\r\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\r\n\t * @param {Boolean} [bubbles] Specifies the `bubbles` value when a string was passed to eventObj.\r\n\t * @param {Boolean} [cancelable] Specifies the `cancelable` value when a string was passed to eventObj.\r\n\t * @return {Boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\r\n\t */\r\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\r\n\t\tif (typeof eventObj == \"string\") {\r\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\r\n\t\t\tconst listeners = this._listeners;\r\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\r\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\r\n\t\t} else if (eventObj.target && eventObj.clone) {\r\n\t\t\t// redispatching an active event object, so clone it:\r\n\t\t\teventObj = eventObj.clone();\r\n\t\t}\r\n\r\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\r\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\r\n\r\n\t\tif (!eventObj.bubbles || !this.parent) {\r\n\t\t\tthis._dispatchEvent(eventObj, 2);\r\n\t\t} else {\r\n\t\t\tlet top = this, i;\r\n\t\t\tconst list = [top];\r\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\r\n\t\t\tconst l = list.length;\r\n\r\n\t\t\t// capture & atTarget\r\n\t\t\tfor (i=l-1; i>=0 && !eventObj.propagationStopped; i--) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\r\n\t\t\t}\r\n\t\t\t// bubbling\r\n\t\t\tfor (i=1; i<l && !eventObj.propagationStopped; i++) {\r\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn !eventObj.defaultPrevented;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type.\r\n\t * @method hasEventListener\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns true if there is at least one listener for the specified event.\r\n\t */\r\n\thasEventListener (type) {\r\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\r\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\r\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\r\n\t * specified type is dispatched from this object, it will trigger at least one listener.\r\n\t *\r\n\t * This is similar to {{#crossLink \"EventDispatcher/hasEventListener\"}}{{/crossLink}}, but it searches the entire\r\n\t * event flow for a listener, not just this object.\r\n\t * @method willTrigger\r\n\t * @param {String} type The string type of the event.\r\n\t * @return {Boolean} Returns `true` if there is at least one listener for the specified event.\r\n\t */\r\n\twillTrigger (type) {\r\n\t\tlet o = this;\r\n\t\twhile (o) {\r\n\t\t\tif (o.hasEventListener(type)) { return true; }\r\n\t\t\to = o.parent;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * @method toString\r\n\t * @return {String} a string representation of the instance.\r\n\t */\r\n\ttoString () {\r\n\t\treturn \"[EventDispatcher]\";\r\n\t}\r\n\r\n\t// private methods:\r\n\t/**\r\n\t * @method _dispatchEvent\r\n\t * @param {Object | String | Event} eventObj\r\n\t * @param {Object} eventPhase\r\n\t * @protected\r\n\t */\r\n\t_dispatchEvent (eventObj, eventPhase) {\r\n\t\tconst listeners = (eventPhase==1) ? this._captureListeners : this._listeners;\r\n\t\tlet l;\r\n\t\tif (eventObj && listeners) {\r\n\t\t\tlet arr = listeners[eventObj.type];\r\n\t\t\tif (!arr||!(l=arr.length)) { return; }\r\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\r\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\r\n\t\t\teventObj.removed = false;\r\n\r\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\r\n\t\t\tfor (let i=0; i<l && !eventObj.immediatePropagationStopped; i++) {\r\n\t\t\t\tlet o = arr[i];\r\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\r\n\t\t\t\telse { o(eventObj); }\r\n\t\t\t\tif (eventObj.removed) {\r\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase==1);\r\n\t\t\t\t\teventObj.removed = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\n\n/*\n* @license Ticker\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2017 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n * event to be notified when a set time interval has elapsed.\n *\n * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n * can not be instantiated.\n *\n * <h4>Example</h4>\n *\n *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n *      function handleTick(event) {\n *          // Actions carried out each tick (aka frame)\n *          if (!event.paused) {\n *              // Actions carried out when the Ticker is not paused.\n *          }\n *      }\n *\n * @class TickerAPI\n * @extends EventDispatcher\n * @module CreateJS\n */\nclass TickerAPI extends EventDispatcher {\n\n// constructor:\n\t/**\n\t * @param name {String} The name assigned to this instance.\n\t * @constructor\n\t * TODO-ES6: Pass timingMode, maxDelta, paused values as instantiation arguments?\n\t */\n\tconstructor (name) {\n\t\tsuper();\n\n// public properties:\n\t\t/**\n\t\t * The name of this instance.\n\t\t * @property name\n\t\t * @type {String}\n\t\t */\n\t\tthis.name = name;\n\t\t/**\n\t\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use. See\n\t\t * {{#crossLink \"Ticker/TIMEOUT\"}}{{/crossLink}}, {{#crossLink \"Ticker/RAF\"}}{{/crossLink}}, and\n\t\t * {{#crossLink \"Ticker/RAF_SYNCHED\"}}{{/crossLink}} for mode details.\n\t\t * @property timingMode\n\t\t * @type {String}\n\t\t * @default Ticker.TIMEOUT\n\t\t */\n\t\tthis.timingMode = TickerAPI.TIMEOUT;\n\n\t\t/**\n\t\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t\t * (ex. maxDelta=50 when running at 40fps).\n\t\t *\n\t\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t\t * when using both delta and other values.\n\t\t *\n\t\t * If 0, there is no maximum.\n\t\t * @property maxDelta\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.maxDelta = 0;\n\n\t\t/**\n\t\t * When the ticker is paused, all listeners will still receive a tick event, but the <code>paused</code> property\n\t\t * of the event will be `true`. Also, while paused the `runTime` will not increase. See {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}},\n\t\t * {{#crossLink \"Ticker/getTime\"}}{{/crossLink}}, and {{#crossLink \"Ticker/getEventTime\"}}{{/crossLink}} for more\n\t\t * info.\n\t\t *\n\t\t * <h4>Example</h4>\n\t\t *\n\t\t *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n\t\t *      createjs.Ticker.paused = true;\n\t\t *      function handleTick(event) {\n\t\t *          console.log(event.paused,\n\t\t *          \tcreatejs.Ticker.getTime(false),\n\t\t *          \tcreatejs.Ticker.getTime(true));\n\t\t *      }\n\t\t *\n\t\t * @property paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = false;\n\n// private properties:\n\t\t/**\n\t\t * @property _inited\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._inited = false;\n\n\t\t/**\n\t\t * @property _startTime\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._startTime = 0;\n\n\t\t/**\n\t\t * @property _pausedTime\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._pausedTime = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed\n\t\t * @property _ticks\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._ticks = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed while Ticker has been paused\n\t\t * @property _pausedTicks\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._pausedTicks = 0;\n\n\t\t/**\n\t\t * @property _interval\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._interval = 50;\n\n\t\t/**\n\t\t * @property _lastTime\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._lastTime = 0;\n\n\t\t/**\n\t\t * @property _times\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._times = null;\n\n\t\t/**\n\t\t * @property _tickTimes\n\t\t * @type {Array}\n\t\t * @protected\n\t\t */\n\t\tthis._tickTimes = null;\n\n\t\t/**\n\t\t * Stores the timeout or requestAnimationFrame id.\n\t\t * @property _timerId\n\t\t * @type {Number}\n\t\t * @protected\n\t\t */\n\t\tthis._timerId = null;\n\n\t\t/**\n\t\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t\t * if that property changed and a tick hasn't fired.\n\t\t * @property _raf\n\t\t * @type {Boolean}\n\t\t * @protected\n\t\t */\n\t\tthis._raf = true;\n\t}\n\n// accessor properties:\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t * @property interval\n\t * @static\n\t * @type {Number}\n\t */\n\tget interval () {\n\t\treturn this._interval;\n\t}\n\n\tset interval (interval) {\n\t\tthis._interval = interval;\n\t\tif (!this._inited) { return; }\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t * @property framerate\n\t * @static\n\t * @type {Number}\n\t */\n\tget framerate () {\n\t\treturn 1000/this._interval;\n\t}\n\n\tset framerate (fps) {\n\t\tthis.interval = 1000/fps;\n\t}\n\n// public methods:\n\t/**\n\t * Call createjs.Ticker.create() to get a new TickerAPI instance.\n\t * It is not initalized by default and its ticks are not synched with any other instance.\n\t *\n\t * @param name {String} The name given to the new instance.\n\t * @method create\n\t * @return {TickerAPI} A new TickerAPI instance.\n\t */\n\tcreate (name) {\n\t\treturn new TickerAPI(name);\n\t}\n\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t * @method init\n\t */\n\tinit () {\n\t\tif (this._inited) { return; }\n\t\tthis._inited = true;\n\t\tthis._times = [];\n\t\tthis._tickTimes = [];\n\t\tthis._startTime = this._getTime();\n\t\tthis._times.push(this._lastTime = 0);\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t * @method reset\n\t */\n\treset () {\n\t\tif (this._raf) {\n\t\t\tlet f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf&&f(this._timerId);\n\t\t} else {\n\t\t\tclearTimeout(this._timerId);\n\t\t}\n\t\tthis.removeAllEventListeners(\"tick\");\n\t\tthis._timerId = this._times = this._tickTimes = null;\n\t\tthis._startTime = this._lastTime = this._ticks = 0;\n\t\tthis._inited = false;\n\t}\n\n\t/**\n\t * Init the Ticker instance if it hasn't been already.\n\t * Docced in superclass.\n\t */\n\taddEventListener (type, listener, useCapture) {\n\t\t!this._inited && this.init();\n\t\treturn super.addEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack.\n\t *\n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between\n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that\n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t * @method getMeasuredTickTime\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {Number} The average time spent in a tick in milliseconds.\n\t */\n\tgetMeasuredTickTime (ticks) {\n\t\tlet times=this._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks||(this.framerate|0));\n\t\tlet ttl = times.reduce((a, b) => a + b, 0);\n\t\treturn ttl/ticks;\n\t}\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t * @method getMeasuredFPS\n\t * @param {Number} [ticks] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {Number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t */\n\tgetMeasuredFPS (ticks) {\n\t\tlet times = this._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length-1, ticks||(this.framerate|0));\n\t\treturn 1000/((times[0]-times[ticks])/ticks);\n\t}\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {{#crossLink \"Ticker/init\"}}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t * @method getTime\n\t * @param {Boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {Number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t */\n\tgetTime (runTime = false) {\n\t\treturn this._startTime ? this._getTime() - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Similar to the {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} method, but returns the time on the most recent {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n\t * event object.\n\t * @method getEventTime\n\t * @param runTime {Boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tgetEventTime (runTime = false) {\n\t\treturn this._startTime ? (this._lastTime || this._startTime) - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t * @method getTicks\n\t * @param {Boolean} [pauseable=false] Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value.\n\t * @return {Number} of ticks that have been broadcast.\n\t */\n\tgetTicks (pauseable = false) {\n\t\treturn this._ticks - (pauseable ? this._pausedTicks : 0);\n\t}\n\n\n// private methods:\n\t/**\n\t * @method _handleSynch\n\t * @protected\n\t */\n\t_handleSynch () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (this._getTime() - this._lastTime >= (this._interval-1)*0.97) {\n\t\t\tthis._tick();\n\t\t}\n\t}\n\n\t/**\n\t * @method _handleRAF\n\t * @protected\n\t */\n\t_handleRAF () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @method _handleTimeout\n\t * @protected\n\t */\n\t_handleTimeout () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @method _setupTick\n\t * @protected\n\t */\n\t_setupTick () {\n\t\tif (this._timerId != null) { return; } // avoid duplicates\n\n\t\tlet mode = this.timingMode || (this._raf && TickerAPI.RAF); // TODO-ES6: Verify that this is desired, since Ticker.useRAF was removed.\n\t\tif (mode == TickerAPI.RAF_SYNCHED || mode == TickerAPI.RAF) {\n\t\t\tlet f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tthis._timerId = f(mode == TickerAPI.RAF ? this._handleRAF.bind(this) : this._handleSynch.bind(this));\n\t\t\t\tthis._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._raf = false;\n\t\tthis._timerId = setTimeout(this._handleTimeout.bind(this), this._interval);\n\t}\n\n\t/**\n\t * @method _tick\n\t * @protected\n\t */\n\t_tick () {\n\t\tlet paused = this.paused;\n\t\tlet time = this._getTime();\n\t\tlet elapsedTime = time-this._lastTime;\n\t\tthis._lastTime = time;\n\t\tthis._ticks++;\n\n\t\tif (paused) {\n\t\t\tthis._pausedTicks++;\n\t\t\tthis._pausedTime += elapsedTime;\n\t\t}\n\n\t\tif (this.hasEventListener(\"tick\")) {\n\t\t\tlet event = new Event(\"tick\");\n\t\t\tlet maxDelta = this.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time-this._pausedTime;\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\t\tthis._tickTimes.unshift(this._getTime()-time);\n\t\twhile (this._tickTimes.length > 100) { this._tickTimes.pop(); }\n\n\t\tthis._times.unshift(time);\n\t\twhile (this._times.length > 100) { this._times.pop(); }\n\t}\n\n\t/**\n\t * @method _getTime\n\t * @protected\n\t */\n\t_getTime () {\n\t\tlet now = window.performance.now;\n\t\treturn ((now&&now.call(performance))||(new Date().getTime())) - this._startTime;\n\t}\n\n}\n\n// constants:\n/**\n * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n * dispatches the tick when the time is within a certain threshold.\n *\n * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n * gaining the benefits of that API (screen synch, background throttling).\n *\n * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n * framerates of 10, 12, 15, 20, and 30 work well.\n *\n * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n * supported.\n * @property RAF_SYNCHED\n * @static\n * @type {String}\n * @default \"synched\"\n * @readonly\n */\nTickerAPI.RAF_SYNCHED = \"synched\";\n\n/**\n * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n * You can leverage {{#crossLink \"Ticker/getTime\"}}{{/crossLink}} and the {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}}\n * event object's \"delta\" properties to make this easier.\n *\n * Falls back on {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n * supported.\n * @property RAF\n * @static\n * @type {String}\n * @default \"raf\"\n * @readonly\n */\nTickerAPI.RAF = \"raf\";\n\n/**\n * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n * @property TIMEOUT\n * @static\n * @type {String}\n * @default \"timeout\"\n * @readonly\n */\nTickerAPI.TIMEOUT = \"timeout\";\n\n// events:\n/**\n * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused using\n * {{#crossLink \"Ticker/setPaused\"}}{{/crossLink}}.\n *\n * <h4>Example</h4>\n *\n *      createjs.Ticker.addEventListener(\"tick\", handleTick);\n *      function handleTick(event) {\n *          console.log(\"Paused:\", event.paused, event.delta);\n *      }\n *\n * @event tick\n * @param {Object} target The object that dispatched the event.\n * @param {String} type The event type.\n * @param {Boolean} paused Indicates whether the ticker is currently paused.\n * @param {Number} delta The time elapsed in ms since the last tick.\n * @param {Number} time The total time in ms since Ticker was initialized.\n * @param {Number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n * \tyou could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n * @since 0.6.0\n */\n\n/**\n * The Ticker object is a singleton instance of the TickerAPI class.\n * See the {{#crossLink \"TickerAPI\"}}{{/crossLink}} documentation for its usage.\n * @class Ticker\n * @static\n * @module CreateJS\n */\nconst Ticker = new TickerAPI(\"createjs.global\");\n\n/*\n* Tween\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Tweens properties for a single target. Methods can be chained to create complex animation sequences:\n *\n * <h4>Example</h4>\n *\n *\tcreatejs.Tween.get(target)\n *\t\t.wait(500)\n *\t\t.to({alpha:0, visible:false}, 1000)\n *\t\t.call(handleComplete);\n *\n * Multiple tweens can share a target, however if they affect the same properties there could be unexpected\n * behaviour. To stop all tweens on an object, use {{#crossLink \"Tween/removeTweens\"}}{{/crossLink}} or pass `override:true`\n * in the props argument.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100});\n *\n * Subscribe to the {{#crossLink \"Tween/change:event\"}}{{/crossLink}} event to be notified when the tween position changes.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n * \tfunction handleChange(event) {\n * \t\t// The tween changed.\n * \t}\n *\n * See the {{#crossLink \"Tween/get\"}}{{/crossLink}} method also.\n * @class Tween\n * @extends AbstractTween\n * @module TweenJS\n */\nclass Tween extends AbstractTween {\n\n// constructor:\n\t/**\n\t * @constructor\n\t * @param {Object} target The target object that will have its properties tweened.\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n\t * Supported props are listed below. These props are set on the corresponding instance properties except where\n\t * specified.<UL>\n\t *    <LI> `useTicks`</LI>\n\t *    <LI> `ignoreGlobalPause`</LI>\n\t *    <LI> `loop`</LI>\n\t *    <LI> `reversed`</LI>\n\t *    <LI> `bounce`</LI>\n\t *    <LI> `timeScale`</LI>\n\t *    <LI> `pluginData`</LI>\n\t *    <LI> `paused`: indicates whether to start the tween paused.</LI>\n\t *    <LI> `position`: indicates the initial position for this tween.</LI>\n\t *    <LI> `onChange`: adds the specified function as a listener to the `change` event</LI>\n\t *    <LI> `onComplete`: adds the specified function as a listener to the `complete` event</LI>\n\t *    <LI> `override`: if true, removes all existing tweens for the target</LI>\n\t * </UL>\n\t */\n\tconstructor (target, props) {\n\t\tsuper(props);\n\n\t// public properties:\n\t\t/**\n\t\t * Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\n\t\t * you specify data by assigning it to a property of `pluginData` with the same name as the plugin.\n\t\t * Note that in many cases, this data is used as soon as the plugin initializes itself for the tween.\n\t\t * As such, this data should be set before the first `to` call in most cases.\n\t\t * @example\n\t\t *\tmyTween.pluginData.SmartRotation = data;\n\t\t *\n\t\t * Most plugins also support a property to disable them for a specific tween. This is typically the plugin name followed by \"_disabled\".\n\t\t * @example\n\t\t *\tmyTween.pluginData.SmartRotation_disabled = true;\n\t\t *\n\t\t * Some plugins also store working data in this object, usually in a property named `_PluginClassName`.\n\t\t * See the documentation for individual plugins for more details.\n\t\t * @property pluginData\n\t\t * @type {Object}\n\t\t */\n\t\tthis.pluginData = null;\n\n\t\t/**\n\t\t * The target of this tween. This is the object on which the tweened properties will be changed.\n\t\t * @property target\n\t\t * @type {Object}\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * Indicates the tween's current position is within a passive wait.\n\t\t * @property passive\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.passive = false;\n\n\t// private properties:\n\t\t/**\n\t\t * @property _stepHead\n\t\t * @type {TweenStep}\n\t\t * @protected\n\t\t */\n\t\tthis._stepHead = new TweenStep(null, 0, 0, {}, null, true);\n\n\t\t/**\n\t\t * @property _stepTail\n\t\t * @type {TweenStep}\n\t\t * @protected\n\t\t */\n\t\tthis._stepTail = this._stepHead;\n\n\t\t/**\n\t\t * The position within the current step. Used by MovieClip.\n\t\t * @property _stepPosition\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @protected\n\t\t */\n\t\tthis._stepPosition = 0;\n\n\t\t/**\n\t\t * @property _actionHead\n\t\t * @type {TweenAction}\n\t\t * @protected\n\t\t */\n\t\tthis._actionHead = null;\n\n\t\t/**\n\t\t * @property _actionTail\n\t\t * @type {TweenAction}\n\t\t * @protected\n\t\t */\n\t\tthis._actionTail = null;\n\n\t\t/**\n\t\t * Plugins added to this tween instance.\n\t\t * @property _plugins\n\t\t * @type Array[Object]\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._plugins = null;\n\n\t\t/**\n\t\t * Used by plugins to inject new properties.\n\t\t * @property _injected\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._injected = null;\n\n\t\tif (props) {\n\t\t\tthis.pluginData = props.pluginData;\n\t\t\tif (props.override) { Tween.removeTweens(target); }\n\t\t}\n\t\tif (!this.pluginData) { this.pluginData = {}; }\n\n\t\tthis._init(props);\n\t}\n\n// static methods:\n\t/**\n\t * Returns a new tween instance. This is functionally identical to using `new Tween(...)`, but may look cleaner\n\t * with the chained syntax of TweenJS.\n\t * <h4>Example</h4>\n\t *\n\t *\tvar tween = createjs.Tween.get(target).to({x:100}, 500);\n\t *\t// equivalent to:\n\t *\tvar tween = new createjs.Tween(target).to({x:100}, 500);\n\t *\n\t * @method get\n\t * @param {Object} target The target object that will have its properties tweened.\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n\t * Supported props are listed below. These props are set on the corresponding instance properties except where\n\t * specified.<UL>\n\t *    <LI> `useTicks`</LI>\n\t *    <LI> `ignoreGlobalPause`</LI>\n\t *    <LI> `loop`</LI>\n\t *    <LI> `reversed`</LI>\n\t *    <LI> `bounce`</LI>\n\t *    <LI> `timeScale`</LI>\n\t *    <LI> `pluginData`</LI>\n\t *    <LI> `paused`: indicates whether to start the tween paused.</LI>\n\t *    <LI> `position`: indicates the initial position for this tween.</LI>\n\t *    <LI> `onChange`: adds the specified function as a listener to the `change` event</LI>\n\t *    <LI> `onComplete`: adds the specified function as a listener to the `complete` event</LI>\n\t *    <LI> `override`: if true, removes all existing tweens for the target</LI>\n\t * </UL>\n\t * @return {Tween} A reference to the created tween.\n\t * @static\n\t */\n\tstatic get (target, props) {\n\t\treturn new Tween(target, props);\n\t}\n\n\t/**\n\t * Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\n\t * manually if you prefer to use your own \"heartbeat\" implementation.\n\t * @method tick\n\t * @param {Number} delta The change in time in milliseconds since the last tick. Required unless all tweens have\n\t * `useTicks` set to true.\n\t * @param {Boolean} paused Indicates whether a global pause is in effect. Tweens with {{#crossLink \"Tween/ignoreGlobalPause:property\"}}{{/crossLink}}\n\t * will ignore this, but all others will pause if this is `true`.\n\t * @static\n\t */\n\tstatic tick (delta, paused) {\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next; // in case it completes and wipes its _next property\n\t\t\tif ((paused && !tween.ignoreGlobalPause) || tween._paused) { /* paused */ }\n\t\t\telse { tween.advance(tween.useTicks ? 1: delta); }\n\t\t\ttween = next;\n\t\t}\n\t}\n\n\t/**\n\t * Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n\t * {{#crossLink \"Ticker/tick:event\"}}{{/crossLink}} events from the createjs {{#crossLink \"Ticker\"}}{{/crossLink}}.\n\t * No other events are handled in Tween.\n\t * @method handleEvent\n\t * @param {Object} event An event object passed in by the {{#crossLink \"EventDispatcher\"}}{{/crossLink}}. Will\n\t * usually be of type \"tick\".\n\t * @private\n\t * @static\n\t * @since 0.4.2\n\t */\n\tstatic handleEvent (event) {\n\t\tif (event.type === \"tick\") {\n\t\t\tthis.tick(event.delta, event.paused);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\n\t * property is `true`.\n\t * @method removeTweens\n\t * @param {Object} target The target object to remove existing tweens from.\n\t * @static\n\t */\n\tstatic removeTweens (target) {\n\t\tif (!target.tweenjs_count) { return; }\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next;\n\t\t\tif (tween.target === target) { Tween._register(tween, true); }\n\t\t\ttween = next;\n\t\t}\n\t\ttarget.tweenjs_count = 0;\n\t}\n\n\t/**\n\t * Stop and remove all existing tweens.\n\t * @method removeAllTweens\n\t * @static\n\t * @since 0.4.1\n\t */\n\tstatic removeAllTweens () {\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next;\n\t\t\ttween._paused = true;\n\t\t\ttween.target && (tween.target.tweenjs_count = 0);\n\t\t\ttween._next = tween._prev = null;\n\t\t\ttween = next;\n\t\t}\n\t\tTween._tweenHead = Tween._tweenTail = null;\n\t}\n\n\t/**\n\t * Indicates whether there are any active tweens on the target object (if specified) or in general.\n\t * @method hasActiveTweens\n\t * @param {Object} [target] The target to check for active tweens. If not specified, the return value will indicate\n\t * if there are any active tweens on any target.\n\t * @return {Boolean} Indicates if there are active tweens.\n\t * @static\n\t */\n\tstatic hasActiveTweens (target) {\n\t\tif (target) { return !!target.tweenjs_count; }\n\t\treturn !!Tween._tweenHead;\n\t}\n\n\t/**\n\t * Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}\n\t * for an example of how to write TweenJS plugins. Plugins should generally be installed via their own `install` method, in order to provide\n\t * the plugin with an opportunity to configure itself.\n\t * @method _installPlugin\n\t * @param {Object} plugin The plugin to install\n\t * @static\n\t * @protected\n\t */\n\tstatic _installPlugin (plugin) {\n\t\tlet priority = plugin.priority, arr = Tween._plugins;\n\t\tif (priority == null) { plugin.priority = priority = 0; }\n\t\tif (!arr) { arr = Tween._plugins = []; }\n\t\tfor (let i = 0, l = arr.length; i < l; i++) {\n\t\t\tif (priority < arr[i].priority) { break; }\n\t\t}\n\t\tarr.splice(i, 0, plugin);\n\t}\n\n\t/**\n\t * Registers or unregisters a tween with the ticking system.\n\t * @method _register\n\t * @param {Tween} tween The tween instance to register or unregister.\n\t * @param {Boolean} paused If `false`, the tween is registered. If `true` the tween is unregistered.\n\t * @static\n\t * @protected\n\t */\n\tstatic _register (tween, paused) {\n\t\tlet target = tween.target;\n\t\tif (!paused && tween._paused) {\n\t\t\t// TODO: this approach might fail if a dev is using sealed objects in ES5\n\t\t\tif (target) { target.tweenjs_count = target.tweenjs_count ? target.tweenjs_count + 1 : 1; }\n\t\t\tlet tail = Tween._tweenTail;\n\t\t\tif (!tail) { Tween._tweenHead = Tween._tweenTail = tween; }\n\t\t\telse {\n\t\t\t\tTween._tweenTail = tail._next = tween;\n\t\t\t\ttween._prev = tail;\n\t\t\t}\n\t\t\tif (!Tween._inited) { Ticker.addEventListener(\"tick\", Tween); Tween._inited = true; }\n\t\t} else if (paused && !tween._paused) {\n\t\t\tif (target) { target.tweenjs_count--; }\n\t\t\tlet next = tween._next, prev = tween._prev;\n\n\t\t\tif (next) { next._prev = prev; }\n\t\t\telse { Tween._tweenTail = prev; } // was tail\n\t\t\tif (prev) { prev._next = next; }\n\t\t\telse { Tween._tweenHead = next; } // was head.\n\n\t\t\ttween._next = tween._prev = null;\n\t\t}\n\t\ttween._paused = paused;\n\t}\n\n// public methods:\n\t/**\n\t * Adds a wait (essentially an empty tween).\n\t * <h4>Example</h4>\n\t *\n\t *\t//This tween will wait 1s before alpha is faded to 0.\n\t *\tcreatejs.Tween.get(target).wait(1000).to({alpha:0}, 1000);\n\t *\n\t * @method wait\n\t * @param {Number} duration The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {Boolean} [passive=false] Tween properties will not be updated during a passive wait. This\n\t * is mostly useful for use with {{#crossLink \"Timeline\"}}{{/crossLink}} instances that contain multiple tweens\n\t * affecting the same target at different times.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t * @chainable\n\t */\n\twait (duration, passive = false) {\n\t\tif (duration > 0) { this._addStep(duration, this._stepTail.props, null, passive); }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a tween from the current values to the specified properties. Set duration to 0 to jump to these value.\n\t * Numeric properties will be tweened from their current value in the tween to the target value. Non-numeric\n\t * properties will be set at the end of the specified duration.\n\t * <h4>Example</h4>\n\t *\n\t *\tcreatejs.Tween.get(target).to({alpha:0, visible:false}, 1000);\n\t *\n\t * @method to\n\t * @param {Object} props An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\n\t * property of the target to 300).\n\t * @param {Number} [duration=0] The duration of the tween in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {Function} [ease=\"linear\"] The easing function to use for this tween. See the {{#crossLink \"Ease\"}}{{/crossLink}}\n\t * class for a list of built-in ease functions.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t * @chainable\n\t */\n\tto (props, duration = 0, ease = \"linear\") {\n\t\tif (duration < 0) { duration = 0; }\n\t\tlet step = this._addStep(duration, null, ease);\n\t\tthis._appendProps(props, step);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a label that can be used with {{#crossLink \"Tween/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Tween/gotoAndStop\"}}{{/crossLink}}\n\t * at the current point in the tween. For example:\n\t *\n\t * \tvar tween = createjs.Tween.get(foo)\n\t * \t\t\t\t\t.to({x:100}, 1000)\n\t * \t\t\t\t\t.label(\"myLabel\")\n\t * \t\t\t\t\t.to({x:200}, 1000);\n\t * // ...\n\t * tween.gotoAndPlay(\"myLabel\"); // would play from 1000ms in.\n\t *\n\t * @method addLabel\n\t * @param {String} label The label name.\n\t * @param {Number} position The position this label represents.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t * @chainable\n\t */\n\tlabel (name) {\n\t\tthis.addLabel(name, this.duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an action to call the specified function.\n\t * <h4>Example</h4>\n\t *\n\t * \t//would call myFunction() after 1 second.\n\t * \tcreatejs.Tween.get().wait(1000).call(myFunction);\n\t *\n\t * @method call\n\t * @param {Function} callback The function to call.\n\t * @param {Array} [params]. The parameters to call the function with. If this is omitted, then the function\n\t * will be called with a single param pointing to this tween.\n\t * @param {Object} [scope]. The scope to call the function in. If omitted, it will be called in the target's scope.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t * @chainable\n\t */\n\tcall (callback, params, scope) {\n\t\treturn this._addAction(scope || this.target, callback, params || [ this ]);\n\t}\n\n\t/**\n\t * Adds an action to set the specified props on the specified target. If `target` is null, it will use this tween's\n\t * target. Note that for properties on the target object, you should consider using a zero duration {{#crossLink \"Tween/to\"}}{{/crossLink}}\n\t * operation instead so the values are registered as tweened props.\n\t * <h4>Example</h4>\n\t *\n\t *\tmyTween.wait(1000).set({visible:false}, foo);\n\t *\n\t * @method set\n\t * @param {Object} props The properties to set (ex. `{visible:false}`).\n\t * @param {Object} [target] The target to set the properties on. If omitted, they will be set on the tween's target.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t * @chainable\n\t */\n\tset (props, target) {\n\t\treturn this._addAction(target || this.target, this._set, [ props ]);\n\t}\n\n\t/**\n\t * Adds an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n\t * <h4>Example</h4>\n\t *\n\t *\tmyTween.to({x:100}, 500).play(otherTween);\n\t *\n\t * @method play\n\t * @param {Tween} tween The tween to play.\n\t * @return {Tween} This tween instance (for chaining calls).\n\t * @chainable\n\t */\n\tplay (tween) {\n\t\treturn this.call(this.setPaused, [ false ], tween || this);\n\t}\n\n\t/**\n\t * Adds an action to pause the specified tween.\n\t *\n\t * \tmyTween.pause(otherTween).to({alpha:1}, 1000).play(otherTween);\n\t *\n\t * @method pause\n\t * @param {Tween} tween The tween to pause. If null, it pauses this tween.\n\t * @return {Tween} This tween instance (for chaining calls)\n\t * @chainable\n\t */\n\tpause (tween) {\n\t\treturn this.call(this.setPaused, [ true ], tween || this);\n\t}\n\n\t/**\n\t * @method clone\n\t * @protected\n\t */\n\tclone () {\n\t\tthrow(\"Tween can not be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * Adds a plugin to this tween.\n\t * @method _addPlugin\n\t * @param {Object} plugin\n\t * @protected\n\t */\n\t_addPlugin (plugin) {\n\t\tlet plugins = this._plugins, priority = plugin.priority, added = false;\n\t\tif (!plugins) { plugins = this._plugins = []; }\n\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\tif (plugins[i] === plugin) {\n\t\t\t\tif (!added) { return; }\n\t\t\t\telse { plugins.splice(i, 1); }\n\t\t\t} else if (!added && priority < plugins[i].priority) {\n\t\t\t\tplugins.splice(i, 0, plugin);\n\t\t\t\tadded = true;\n\t\t\t}\n\t\t}\n\t\tif (!added) { plugins.push(plugin); }\n\t};\n\n\t/**\n   * @method _updatePosition\n   * @override\n   */\n\t_updatePosition (jump, end) {\n\t\tlet step = this._stepHead.next, t = this.position, d = this.duration;\n\t\tif (this.target && step) {\n\t\t\t// find our new step index:\n\t\t\tlet stepNext = step.next;\n\t\t\twhile (stepNext && stepNext.t <= t) { step = step.next; stepNext = step.next; }\n\t\t\tlet ratio = end ? t / d : (t - step.t) / step.d; // TODO: revisit this.\n\t\t\tthis._updateTargetProps(step, ratio, end);\n\t\t}\n\t\tthis._stepPosition = step ? t - step.t : 0;\n\t}\n\n\t/**\n\t * @method _updateTargetProps\n\t * @param {Object} step\n\t * @param {Number} ratio\n\t * @param {Boolean} end Indicates to plugins that the full tween has ended.\n\t * @protected\n\t */\n\t_updateTargetProps (step, ratio, end) {\n\t\tif (this.passive = !!step.passive) { return; } // don't update props.\n\n\t\tlet v, v0, v1, ease;\n\t\tlet p0 = step.prev.props;\n\t\tlet p1 = step.props;\n\t\tif (ease = step.ease) { ratio = ease(ratio,0,1,1); }\n\n\t\tlet plugins = this._plugins;\n\t\tfor (let n in p0) {\n\t\t\tv = v0 = p0[n];\n\t\t\tv1 = p1[n];\n\n\t\t\t// values are different & it is numeric then interpolate:\n\t\t\tif (v0 !== v1 && (typeof(v0) === \"number\")) {\n\t\t\t\tv = v0 + (v1 - v0) * ratio;\n\t\t\t}\n\n\t\t\tif (plugins) {\n\t\t\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\t\t\tlet value = plugins[i].tween(this, step, n, v, ratio, end);\n\t\t\t\t\tif (v === Tween.IGNORE) { return; }\n\t\t\t\t\tif (value !== undefined) { v = value; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.target[n] = v;\n\t\t}\n\n\t}\n\n\t/**\n\t * @method _runActionsRange\n\t * @param {Number} startPos\n\t * @param {Number} endPos\n\t * @param {Boolean} includeStart\n\t * @protected\n\t * @override\n\t */\n\t_runActionsRange (startPos, endPos, jump, includeStart) {\n\t\t//console.log(\"\trange\", startPos, endPos, jump, includeStart);\n\t\tlet rev = startPos > endPos;\n\t\tlet action = rev ? this._actionTail : this._actionHead;\n\t\tlet ePos = endPos, sPos = startPos;\n\t\tif (rev) { ePos = startPos; sPos = endPos; }\n\t\tlet t = this.position;\n\t\twhile (action) {\n\t\t\tlet pos = action.t;\n\t\t\tif (pos === endPos || (pos > sPos && pos < ePos) || (includeStart && pos === startPos)) {\n\t\t\t\t//console.log(pos, \"start\", sPos, startPos, \"end\", ePos, endPos);\n\t\t\t\taction.funct.apply(action.scope, action.params);\n\t\t\t\tif (t !== this.position) { return true; }\n\t\t\t}\n\t\t\taction = rev ? action.prev : action.next;\n\t\t}\n\t}\n\n\t/**\n\t * @method _appendProps\n\t * @param {Object} props\n\t * @protected\n\t */\n\t_appendProps (props, step) {\n\t\tlet initProps = this._stepHead.props, target = this.target, plugins = Tween._plugins;\n\t\tlet inject, ignored;\n\n\t\tlet oldStep = step.prev, oldProps = oldStep.props;\n\t\tlet stepProps = step.props = this._cloneProps(oldProps);\n\n\t\tfor (let n in props) {\n\t\t\tstepProps[n] = props[n];\n\n\t\t\tif (initProps[n] !== undefined) { continue; }\n\n\t\t\tlet oldValue = undefined; // accessing missing properties on DOMElements when using CSSPlugin is INSANELY expensive.\n\t\t\tif (plugins) {\n\t\t\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\t\t\tlet value = plugins[i].init(this, n, oldValue);\n\t\t\t\t\tif (value !== undefined) { oldValue = value; }\n\t\t\t\t\tif (oldValue === Tween.IGNORE) {\n\t\t\t\t\t\t(ignored = ignored || {})[n] = true;\n\t\t\t\t\t\tdelete(stepProps[n]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oldValue !== Tween.IGNORE) {\n\t\t\t\tif (oldValue === undefined) { oldValue = target[n]; }\n\t\t\t\toldProps[n] = (oldValue === undefined) ? null : oldValue;\n\t\t\t}\n\t\t}\n\n\t\tplugins = this._plugins;\n\t\tfor (let n in props) {\n\t\t\tif (ignored && ignored[n]) { continue; }\n\t\t\tlet value = props[n];\n\n\t\t\t// propagate old value to previous steps:\n\t\t\tlet o, prev = oldStep;\n\t\t\twhile ((o = prev) && (prev = o.prev)) {\n\t\t\t\tif (prev.props === o.props) { continue; } // wait step\n\t\t\t\tif (prev.props[n] !== undefined) { break; } // already has a value, we're done.\n\t\t\t\tprev.props[n] = oldProps[n];\n\t\t\t}\n\n\t\t\tif (plugins) {\n\t\t\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\t\t\tlet value = plugins[i].step(this, step, n, value);\n\t\t\t\t\tif (value !== undefined) { step.props[n] = value; }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (inject = this._injected) {\n\t\t\tthis._injected = null;\n\t\t\tthis._appendProps(inject, step);\n\t\t}\n\t}\n\n\t/**\n\t * Used by plugins to inject properties. Called from within `Plugin.step` calls.\n\t * @method _injectProps\n\t * @param {Object} props\n\t * @protected\n\t */\n\t_injectProps (props) {\n\t\tlet o = this._injected;\n\t\tif (!this._injected) { o = this._injected = {}; }\n\t\tfor (let n in props) { o[n] = props[n]; }\n\t}\n\n\t/**\n\t * @method _addStep\n\t * @param {Number} duration\n\t * @param {Object} props\n\t * @param {Function} ease\n\t * @param {Boolean} [passive=false]\n\t * @protected\n\t */\n\t_addStep (duration, props, ease, passive = false) {\n\t\tlet step = new TweenStep(this._stepTail, this.duration, duration, props, ease, passive);\n\t\tthis.duration += duration;\n\t\treturn this._stepTail = (this._stepTail.next = step);\n\t}\n\n\t/**\n\t * @method _addAction\n\t * @param {Object} scope\n\t * @param {Function} funct\n\t * @param {Array} params\n\t * @protected\n\t */\n\t_addAction (scope, funct, params) {\n\t\tlet action = new TweenAction(this._actionTail, this.duration, scope, funct, params);\n\t\tif (this._actionTail) { this._actionTail.next = action; }\n\t\telse { this._actionHead = action; }\n\t\tthis._actionTail = action;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @method _set\n\t * @param {Object} props\n\t * @protected\n\t */\n\t_set (props) {\n\t\tfor (let n in props) {\n\t\t\tthis[n] = props[n];\n\t\t}\n\t}\n\n\t/**\n\t * @method _cloneProps\n\t * @param {Object} props\n\t * @protected\n\t */\n\t_cloneProps (props) {\n\t\tlet o = {};\n\t\tfor (let n in props) { o[n] = props[n]; }\n\t\treturn o;\n\t}\n\n}\n\n// tiny api (primarily for tool output):\n{\n\tlet p = Tween.prototype;\n\tp.w = p.wait;\n\tp.t = p.to;\n\tp.c = p.call;\n\tp.s = p.set;\n}\n\n// static properties\n/**\n * Constant returned by plugins to tell the tween not to use default assignment.\n * @property IGNORE\n * @type Object\n * @static\n */\nTween.IGNORE = {};\n\n/**\n * @property _listeners\n * @type Array[Tween]\n * @static\n * @protected\n */\nTween._tweens = [];\n\n/**\n * @property _plugins\n * @type Object\n * @static\n * @protected\n */\nTween._plugins = null;\n\n/**\n * @property _tweenHead\n * @type Tween\n * @static\n * @protected\n */\nTween._tweenHead = null;\n\n/**\n * @property _tweenTail\n * @type Tween\n * @static\n * @protected\n */\nTween._tweenTail = null;\n\n// helpers:\n\nclass TweenStep {\n\n\tconstructor (prev, t, d, props, ease, passive) {\n\t\tthis.next = null;\n\t\tthis.prev = prev;\n\t\tthis.t = t;\n\t\tthis.d = d;\n\t\tthis.props = props;\n\t\tthis.ease = ease;\n\t\tthis.passive = passive;\n\t\tthis.index = prev ? prev.index + 1 : 0;\n\t}\n\n}\n\nclass TweenAction {\n\n\tconstructor (prev, t, scope, funct, params) {\n\t\tthis.next = null;\n\t\tthis.d = 0;\n\t\tthis.prev = prev;\n\t\tthis.t = t;\n\t\tthis.scope = scope;\n\t\tthis.funct = funct;\n\t\tthis.params = params;\n\t}\n\n}\n\n/*\n* TweenJS\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * Base class that both {{#crossLink \"Tween\"}}{{/crossLink}} and {{#crossLink \"Timeline\"}}{{/crossLink}} extend. Should not be instantiated directly.\n * @class AbstractTween\n * @param {Object} [props]\n * @extends EventDispatcher\n * @module TweenJS\n * @constructor\n */\nclass AbstractTween extends EventDispatcher {\n\n// constructor:\n  /**\n   * @constructor\n   * @param {Object} [props]\n   */\n  constructor (props) {\n    super();\n\n  // public properties:\n\t\t/**\n\t\t * Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using {{#crossLink \"Ticker\"}}{{/crossLink}},\n\t\t * then setting this to false (the default) will cause this tween to be paused when `Ticker.setPaused(true)`\n\t\t * is called. See the {{#crossLink \"Tween/tick\"}}{{/crossLink}} method for more info. Can be set via the `props`\n\t\t * parameter.\n\t\t * @property ignoreGlobalPause\n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tthis.ignoreGlobalPause = false;\n\n\t\t/**\n\t\t * Indicates the number of times to loop. If set to -1, the tween will loop continuously.\n\t\t * @property loop\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis.loop = 0;\n\n\t\t/**\n\t\t * Uses ticks for all durations instead of milliseconds. This also changes the behaviour of some actions (such as `call`).\n\t\t * Changing this value on a running tween could have unexpected results.\n\t\t * @property useTicks\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.useTicks = false;\n\n\t\t/**\n\t\t * Causes the tween to play in reverse.\n\t\t * @property reversed\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.reversed = false;\n\n\t\t/**\n\t\t * Causes the tween to reverse direction at the end of each loop.\n\t\t * @property bounce\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.bounce = false;\n\n\t\t/**\n\t\t * Changes the rate at which the tween advances. For example, a `timeScale` value of `2` will double the\n\t\t * playback speed, a value of `0.5` would halve it.\n\t\t * @property timeScale\n\t\t * @type {Number}\n\t\t * @default 1\n\t\t */\n\t\tthis.timeScale = 1;\n\n\t\t/**\n\t\t * Indicates the duration of this tween in milliseconds (or ticks if `useTicks` is true), irrespective of `loops`.\n\t\t * This value is automatically updated as you modify the tween. Changing it directly could result in unexpected\n\t\t * behaviour.\n\t\t * @property duration\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.duration = 0;\n\n\t\t/**\n\t\t * The current normalized position of the tween. This will always be a value between 0 and `duration`.\n\t\t * Changing this property directly will have unexpected results, use {{#crossLink \"Tween/setPosition\"}}{{/crossLink}}.\n\t\t * @property position\n\t\t * @type {Object}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.position = 0;\n\n\t\t/**\n\t\t * The raw tween position. This value will be between `0` and `loops * duration` while the tween is active, or -1 before it activates.\n\t\t * @property rawPosition\n\t\t * @type {Number}\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.rawPosition = -1;\n\n\n\t// private properties:\n\t\t/**\n\t\t * @property _paused\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @protected\n\t\t */\n\t\tthis._paused = true;\n\n\t\t/**\n\t\t * @property _next\n\t\t * @type {Tween}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._next = null;\n\n\t\t/**\n\t\t * @property _prev\n\t\t * @type {Tween}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._prev = null;\n\n\t\t/**\n\t\t * @property _parent\n\t\t * @type {Object}\n\t\t * @default null\n\t\t * @protected\n\t\t */\n\t\tthis._parent = null;\n\n\t\t/**\n\t\t * @property _labels\n\t\t * @type Object\n\t\t * @protected\n\t\t */\n\t\tthis._labels = null;\n\n\t\t/**\n\t\t * @property _labelList\n\t\t * @type Array[Object]\n\t\t * @protected\n\t\t */\n\t\tthis._labelList = null;\n\n\t\tif (props) {\n\t\t\tthis.useTicks = !!props.useTicks;\n\t\t\tthis.ignoreGlobalPause = !!props.ignoreGlobalPause;\n\t\t\tthis.loop = props.loop === true ? -1 : (props.loop||0);\n\t\t\tthis.reversed = !!props.reversed;\n\t\t\tthis.bounce = !!props.bounce;\n\t\t\tthis.timeScale = props.timeScale||1;\n\t\t\tprops.onChange && this.addEventListener(\"change\", props.onChange);\n\t\t\tprops.onComplete && this.addEventListener(\"complete\", props.onComplete);\n\t\t}\n\n\t\t// while `position` is shared, it needs to happen after ALL props are set, so it's handled in _init()\n  }\n\n// accessor properties:\n\t/**\n\t * Returns a list of the labels defined on this tween sorted by position.\n\t * @property labels\n\t * @return {Array[Object]} A sorted array of objects with label and position properties.\n\t */\n\tget labels () {\n\t\tlet list = this._labelList;\n\t\tif (!list) {\n\t\t\tlist = this._labelList = [];\n\t\t\tlet labels = this._labels;\n\t\t\tfor (let label in labels) {\n\t\t\t\tlist.push({ label, position: labels[label] });\n\t\t\t}\n\t\t\tlist.sort((a, b) => a.position - b.position);\n\t\t}\n\t\treturn list;\n\t}\n\n  /**\n\t * Defines labels for use with gotoAndPlay/Stop. Overwrites any previously set labels.\n\t * @param {Object} labels An object defining labels for using {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}\n\t * in the form `{myLabelName:time}` where time is in milliseconds (or ticks if `useTicks` is `true`).\n\t */\n\tset labels (labels) {\n\t\tthis._labels = labels;\n\t\tthis._labelList = null;\n\t}\n\n// public methods:\n\t/**\n\t * Advances the tween by a specified amount.\n\t * @method advance\n\t * @param {Number} delta The amount to advance in milliseconds (or ticks if useTicks is true). Negative values are supported.\n\t * @param {Boolean} [ignoreActions=false] If true, actions will not be executed due to this change in position.\n\t */\n\tadvance (delta, ignoreActions = false) {\n\t\tthis.setPosition(this.rawPosition+delta*this.timeScale, ignoreActions);\n\t}\n\n\t/**\n\t * Advances the tween to a specified position.\n\t * @method setPosition\n\t * @param {Number} rawPosition The raw position to seek to in milliseconds (or ticks if useTicks is true).\n\t * @param {Boolean} [ignoreActions=false] If true, do not run any actions that would be triggered by this operation.\n\t * @param {Boolean} [jump=false] If true, only actions at the new position will be run. If false, actions between the old and new position are run.\n\t * @param {Function} [callback] Primarily for use with MovieClip, this callback is called after properties are updated, but before actions are run.\n\t */\n\tsetPosition (rawPosition, ignoreActions = false, jump = false, callback) {\n\t\tlet d = this.duration, loopCount = this.loop, prevRawPos = this.rawPosition;\n\t\tlet loop = 0, t = 0, end = false;\n\n\t\t// normalize position:\n\t\tif (rawPosition < 0) { rawPosition = 0; }\n\n\t\tif (d === 0) {\n\t\t\t// deal with 0 length tweens.\n\t\t\tend = true;\n\t\t\tif (prevRawPos !== -1) { return end; } // we can avoid doing anything else if we're already at 0.\n\t\t} else {\n\t\t\tloop = rawPosition / d | 0;\n\t\t\tt = rawPosition - loop * d;\n\n\t\t\tend = (loopCount !== -1 && rawPosition >= loopCount * d + d);\n\t\t\tif (end) { rawPosition = (t = d) * (loop = loopCount) + d; }\n\t\t\tif (rawPosition === prevRawPos) { return end; } // no need to update\n\n\t\t\tlet rev = !this.reversed !== !(this.bounce && loop % 2); // current loop is reversed\n\t\t\tif (rev) { t = d - t; }\n\t\t}\n\n\t\t// set this in advance in case an action modifies position:\n\t\tthis.position = t;\n\t\tthis.rawPosition = rawPosition;\n\n\t\tthis._updatePosition(jump, end);\n\t\tif (end) { this.setPaused(true); }\n\n\t\tcallback && callback(this);\n\n\t\tif (!ignoreActions) { this._runActions(prevRawPos, rawPosition, jump, !jump && prevRawPos === -1); }\n\n\t\tthis.dispatchEvent(\"change\");\n\t\tif (end) { this.dispatchEvent(\"complete\"); }\n\t}\n\n\t/**\n\t * Calculates a normalized position based on a raw position. For example, given a tween with a duration of 3000ms set to loop:\n\t * \tconsole.log(myTween.calculatePosition(3700); // 700\n\t * @method calculatePosition\n\t * @param {Number} rawPosition A raw position.\n\t */\n\tcalculatePosition (rawPosition) {\n\t\t// largely duplicated from setPosition, but necessary to avoid having to instantiate generic objects to pass values (end, loop, position) back.\n\t\tlet d = this.duration, loopCount = this.loop, loop = 0, t = 0;\n\n\t\tif (d === 0) { return 0; }\n\t\tif (loopCount !== -1 && rawPosition >= loopCount * d + d) { t = d; loop = loopCount; } // end\n\t\telse if (rawPosition < 0) { t = 0; }\n\t\telse { loop = rawPosition /d | 0; t = rawPosition - loop * d; }\n\n\t\tlet rev = !this.reversed !== !(this.bounce && loop % 2); // current loop is reversed\n\t\treturn rev ? d - t : t;\n\t}\n\n\t/**\n\t * Adds a label that can be used with {{#crossLink \"Timeline/gotoAndPlay\"}}{{/crossLink}}/{{#crossLink \"Timeline/gotoAndStop\"}}{{/crossLink}}.\n\t * @method addLabel\n\t * @param {String} label The label name.\n\t * @param {Number} position The position this label represents.\n\t */\n\taddLabel (label, position) {\n\t\tif (!this._labels) { this._labels = {}; }\n\t\tthis._labels[label] = position;\n\t\tlet list = this._labelList;\n\t\tif (list) {\n\t\t\tfor (let i = 0, l = list.length; i < l; i++) { if (position < list[i].position) { break; } }\n\t\t\tlist.splice(i, 0, { label, position });\n\t\t}\n\t}\n\n\t/**\n\t * Returns the name of the label on or immediately before the current position. For example, given a tween with\n\t * two labels, \"first\" on frame index 4, and \"second\" on frame 8, getCurrentLabel would return:\n\t * <UL>\n\t * \t\t<LI>null if the current position is 2.</LI>\n\t * \t\t<LI>\"first\" if the current position is 4.</LI>\n\t * \t\t<LI>\"first\" if the current position is 7.</LI>\n\t * \t\t<LI>\"second\" if the current position is 15.</LI>\n\t * </UL>\n\t * @method getCurrentLabel\n\t * @return {String} The name of the current label or null if there is no label\n\t */\n\tgetCurrentLabel (pos) {\n\t\tlet labels = this.labels;\n\t\tif (pos == null) { pos = this.position; }\n\t\tfor (let i = 0, l = labels.length; i < l; i++) { if (pos < labels[i].position) { break; } }\n\t\treturn i === 0 ? null : labels[i - 1].label;\n\t}\n\n\t/**\n\t * Unpauses this timeline and jumps to the specified position or label.\n\t * @method gotoAndPlay\n\t * @param {String|Number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`)\n\t * or label to jump to.\n\t */\n\tgotoAndPlay (positionOrLabel) {\n\t\tthis.setPaused(false);\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Pauses this timeline and jumps to the specified position or label.\n\t * @method gotoAndStop\n\t * @param {String|Number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`) or label\n\t * to jump to.\n\t */\n\tgotoAndStop (positionOrLabel) {\n\t\tthis.setPaused(true);\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\n\t * corresponding frame label will be returned, or `null` if a matching label is not defined.\n\t * @method resolve\n\t * @param {String|Number} positionOrLabel A numeric position value or label string.\n\t */\n\tresolve (positionOrLabel) {\n\t\tlet pos = Number(positionOrLabel);\n\t\tif (isNaN(pos)) { pos = this._labels && this._labels[positionOrLabel]; }\n\t\treturn pos;\n\t}\n\n\t/**\n\t * Pauses or plays this tween.\n\t * @method setPaused\n\t * @param {Boolean} [value=true] Indicates whether the tween should be paused (`true`) or played (`false`).\n\t * @return {Tween} This tween instance (for chaining calls)\n\t * @chainable\n\t */\n\tsetPaused (value) {\n\t\tTween._register(this, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t * @method toString\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t}\n\n\t/**\n\t * @method clone\n\t * @protected\n\t */\n\tclone () {\n\t\tthrow(\"AbstractTween can not be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * Shared logic that executes at the end of the subclass constructor.\n\t * @method _init\n\t * @protected\n\t */\n\t_init (props) {\n\t\tif (!props || !props.paused) { this.setPaused(false); }\n\t\tif (props && props.position != null) { this.setPosition(props.position); }\n\t}\n\n\t/**\n\t * @method _goto\n\t * @protected\n\t */\n\t_goto (positionOrLabel) {\n\t\tlet pos = this.resolve(positionOrLabel);\n\t\tif (pos != null) { this.setPosition(pos, false, true); }\n\t}\n\n\t/**\n   * Runs actions between startPos & endPos. Separated to support action deferral.\n\t * @method _runActions\n\t * @protected\n\t */\n\t_runActions (startRawPos, endRawPos, jump, includeStart) {\n\t  // console.log(this.passive === false ? \" > Tween\" : \"Timeline\", \"run\", startRawPos, endRawPos, jump, includeStart);\n\t\t// if we don't have any actions, and we're not a Timeline, then return:\n\t\t// TODO: a cleaner way to handle this would be to override this method in Tween, but I'm not sure it's worth the overhead.\n\t\tif (!this._actionHead && !this._tweens) { return; }\n\n\t\tlet d = this.duration, reversed = this.reversed, bounce = this.bounce, loopCount = this.loop;\n\t\tlet loop0, loop1, t0, t1;\n\n\t\tif (d === 0) {\n\t\t\t// deal with 0 length tweens:\n\t\t\tloop0 = loop1 = t0 = t1 = 0;\n\t\t\treversed = bounce = false;\n\t\t} else {\n\t\t\tloop0 = startRawPos / d | 0;\n\t\t\tloop1 = endRawPos / d | 0;\n\t\t\tt0 = startRawPos - loop0 * d;\n\t\t\tt1 = endRawPos - loop1 * d;\n\t\t}\n\n\t\t// catch positions that are past the end:\n\t\tif (loopCount !== -1) {\n\t\t\tif (loop1 > loopCount) { t1 = d; loop1 = loopCount; }\n\t\t\tif (loop0 > loopCount) { t0 = d; loop0 = loopCount; }\n\t\t}\n\n\t\t// special cases:\n\t\tif (jump) { return this._runActionsRange(t1, t1, jump, includeStart); } // jump.\n\t\telse if (loop0 === loop1 && t0 === t1 && !jump) { return; } // no actions if the position is identical.\n\t\telse if (loop0 === -1) { loop0 = t0 = 0; } // correct the -1 value for first advance, important with useTicks.\n\n\t\tlet dir = (startRawPos <= endRawPos), loop = loop0;\n\t\tdo {\n\t\t\tlet rev = !reversed !== !(bounce && loop % 2);\n\n\t\t\tlet start = (loop === loop0) ? t0 : dir ? 0 : d;\n\t\t\tlet end = (loop === loop1) ? t1 : dir ? d : 0;\n\n\t\t\tif (rev) {\n\t\t\t\tstart = d - start;\n\t\t\t\tend = d - end;\n\t\t\t}\n\n\t\t\tif (bounce && loop !== loop0 && start === end) { /* bounced onto the same time/frame, don't re-execute end actions */ }\n\t\t\telse if (this._runActionsRange(start, end, jump, includeStart || (loop !== loop0 && !bounce))) { return true; }\n\n\t\t\tincludeStart = false;\n\t\t} while ((dir && ++loop <= loop1) || (!dir && --loop >= loop1));\n\t}\n\n  /**\n\t * @method _runActionsRange\n   * @abstract\n\t * @protected\n\t */\n\t_runActionsRange (startPos, endPos, jump, includeStart) {\n\t\t// throw(\"_runActionsRange is abstract and must be overridden by a subclass\");\n\t}\n\n  /**\n\t * @method _updatePosition\n   * @abstract\n\t * @protected\n\t */\n\t_updatePosition (jump, end) {\n    // throw(\"_updatePosition is abstract and must be overridden by a subclass\");\n\t}\n\n}\n\n// events:\n/**\n * Dispatched whenever the tween's position changes.\n * @event change\n */\n/**\n * Dispatched when the tween reaches its end and has paused itself. This does not fire until all loops are complete;\n * tweens that loop continuously will never fire a complete event.\n * @event complete\n */\n\n/*\n* Timeline\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The Timeline class synchronizes multiple tweens and allows them to be controlled as a group. Please note that if a\n * timeline is looping, the tweens on it may appear to loop even if the \"loop\" property of the tween is false.\n *\n * NOTE: Timeline currently also accepts a param list in the form: `tweens, labels, props`. This is for backwards\n * compatibility only and will be removed in the future. Include tweens and labels as properties on the props object.\n * @class Timeline\n * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n * Supported props are listed below. These props are set on the corresponding instance properties except where\n * specified.<UL>\n *    <LI> `useTicks`</LI>\n *    <LI> `ignoreGlobalPause`</LI>\n *    <LI> `loop`</LI>\n *    <LI> `reversed`</LI>\n *    <LI> `bounce`</LI>\n *    <LI> `timeScale`</LI>\n *    <LI> `paused`: indicates whether to start the tween paused.</LI>\n *    <LI> `position`: indicates the initial position for this tween.</LI>\n *    <LI> `onChange`: adds the specified function as a listener to the `change` event</LI>\n *    <LI> `onComplete`: adds the specified function as a listener to the `complete` event</LI>\n * </UL>\n * @extends AbstractTween\n * @module TweenJS\n */\nclass Timeline extends AbstractTween {\n\n// constructor\n\t/**\n\t * @constructor\n\t * @param {Object} props\n\t */\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t// private properties:\n\t\t/**\n\t\t * @property _tweens\n\t\t * @type Array[Tween]\n\t\t * @protected\n\t\t */\n\t\tthis._tweens = [];\n\n\t\tif (props.tweens) { this.addTween(...tweens); }\n\t\tthis.labels = props.labels;\n\n\t\tthis._init(props);\n\t}\n\n\n// public methods:\n\t/**\n\t * Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the\n\t * normal ticking system) and managed by this timeline. Adding a tween to multiple timelines will result in\n\t * unexpected behaviour.\n\t * @method addTween\n\t * @param {Tween} ...tween The tween(s) to add. Accepts multiple arguments.\n\t * @return {Tween} The first tween that was passed in.\n\t */\n\taddTween (...args) {\n\t\tlet l = args.length;\n\t\tif (l === 1) {\n\t\t\tlet tween = args[0];\n\t\t\tthis._tweens.push(tween);\n\t\t\ttween._parent = this;\n\t\t\ttween.setPaused(true);\n\t\t\tlet d = tween.duration;\n\t\t\tif (tween.loop > 0) { d *= tween.loop + 1; }\n\t\t\tif (d > this.duration) { this.duration = d; }\n\t\t\tif (this.rawPosition >= 0) { tween.setPosition(this.rawPosition); }\n\t\t\treturn tween;\n\t\t}\n\t\tif (l > 1) {\n\t\t\tfor (let i = 0; i < l; i++) { this.addTween(args[i]); }\n\t\t\treturn args[l - 1];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes one or more tweens from this timeline.\n\t * @method removeTween\n\t * @param {Tween} ...args The tween(s) to remove. Accepts multiple arguments.\n\t * @return Boolean Returns `true` if all of the tweens were successfully removed.\n\t */\n\tremoveTween (...args) {\n\t\tlet l = args.length;\n\t\tif (l === 1) {\n\t\t\tlet tweens = this._tweens;\n\t\t\tlet i = tweens.length;\n\t\t\twhile (i--) {\n\t\t\t\tif (tweens[i] === tween) {\n\t\t\t\t\ttweens.splice(i, 1);\n\t\t\t\t\ttween._parent = null;\n\t\t\t\t\tif (tween.duration >= this.duration) { this.updateDuration(); }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (l > 1) {\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this.removeTween(args[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Recalculates the duration of the timeline. The duration is automatically updated when tweens are added or removed,\n\t * but this method is useful if you modify a tween after it was added to the timeline.\n\t * @method updateDuration\n\t */\n\tupdateDuration () {\n\t\tthis.duration = 0;\n\t\tfor (let i = 0, l = this._tweens.length; i < l; i++) {\n\t\t\tlet tween = this._tweens[i];\n\t\t\tlet d = tween.duration;\n\t\t\tif (tween.loop > 0) { d *= tween.loop + 1; }\n\t\t\tif (d > this.duration) { this.duration = d; }\n\t\t}\n\t}\n\n\t/**\n\t * @method clone\n\t * @protected\n\t */\n\tclone () {\n\t\tthrow(\"Timeline can not be cloned.\")\n\t}\n\n// private methods:\n\t/**\n\t * @method _updatePosition\n\t * @override\n\t */\n\t_updatePosition (jump, end) {\n\t\tlet t = this.position;\n\t\tfor (let i = 0, l = this._tweens.length; i < l; i++) {\n\t\t\tthis._tweens[i].setPosition(t, true, jump); // actions will run after all the tweens update.\n\t\t}\n\t}\n\n\t/**\n\t * @method _runActionsRange\n\t * @override\n\t */\n\t_runActionsRange (startPos, endPos, jump, includeStart) {\n\t\t//console.log(\"\trange\", startPos, endPos, jump, includeStart);\n\t\tlet t = this.position;\n\t\tfor (let i = 0, l = this._tweens.length; i < l; i++) {\n\t\t\tthis._tweens[i]._runActions(startPos, endPos, jump, includeStart);\n\t\t\tif (t !== this.position) { return true; } // an action changed this timeline's position.\n\t\t}\n\t}\n\n}\n\n/*\n* Ease\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The Ease class provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\n * easing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n *\n * Most methods on Ease can be passed directly as easing functions:\n *\n *      Tween.get(target).to({x:100}, 500, Ease.linear);\n *\n * However, methods beginning with \"get\" will return an easing function based on parameter values:\n *\n *      Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n *\n * Please see the <a href=\"http://www.createjs.com/Demos/TweenJS/Tween_SparkTable\">spark table demo</a> for an\n * overview of the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n *\n * <em>Equations derived from work by Robert Penner.</em>\n * @class Ease\n * @static\n * @module TweenJS\n */\nclass Ease {\n\n\tconstructor () {\n\t\tthrow \"Ease is static and cannot be instantiated.\";\n\t}\n\n// static methods:\n\t/**\n\t * @method linear\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic linear (t) {\n\t\treturn t;\n\t}\n\n\t/**\n\t * Mimics the simple -100 to 100 easing in Flash Pro.\n\t * @method get\n\t * @param {Number} amount A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease.\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic get (amount) {\n\t\tif (amount < -1) { amount = -1; }\n\t\telse if (amount > 1) { amount = 1; }\n\t\treturn function (t) {\n\t\t\tif (amount == 0) { return t; }\n\t\t\tif (amount < 0) { return t * (t * -amount + 1 + amount); }\n\t\t\treturn t * ((2 - t) * amount + (1 - amount));\n\t\t};\n\t}\n\n\t/**\n\t * Configurable exponential ease.\n\t * @method getPowIn\n\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getPowIn (pow) {\n\t\treturn function (t) {\n\t\t\treturn Math.pow(t, pow);\n\t\t};\n\t}\n\n\t/**\n\t * Configurable exponential ease.\n\t * @method getPowOut\n\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getPowOut (pow) {\n\t\treturn function (t) {\n\t\t\treturn 1 - Math.pow(1 - t, pow);\n\t\t};\n\t}\n\n\t/**\n\t * Configurable exponential ease.\n\t * @method getPowInOut\n\t * @param {Number} pow The exponent to use (ex. 3 would return a cubic ease).\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getPowInOut (pow) {\n\t\treturn function (t) {\n\t\t\tif ((t *= 2) < 1) return 0.5 * Math.pow(t, pow);\n\t\t\treturn 1 - 0.5 * Math.abs(Math.pow(2 - t, pow));\n\t\t};\n\t}\n\n\t/**\n\t * @method sineIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic sineIn (t) {\n\t\treturn 1 - Math.cos(t * Math.PI / 2);\n\t}\n\n\t/**\n\t * @method sineOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic sineOut (t) {\n\t\treturn Math.sin(t * Math.PI / 2);\n\t}\n\n\t/**\n\t * @method sineInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic sineInOut (t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t}\n\n\t/**\n\t * Configurable \"back in\" ease.\n\t * @method getBackIn\n\t * @param {Number} amount The strength of the ease.\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getBackIn (amount) {\n\t\treturn function (t) {\n\t\t\treturn t * t * ((amount + 1) * t - amount);\n\t\t};\n\t}\n\n\t/**\n\t * Configurable \"back out\" ease.\n\t * @method getBackOut\n\t * @param {Number} amount The strength of the ease.\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getBackOut (amount) {\n\t\treturn function (t) {\n\t\t\treturn (--t * t * ((amount + 1) * t + amount) + 1);\n\t\t};\n\t}\n\n\t/**\n\t * Configurable \"back in out\" ease.\n\t * @method getBackInOut\n\t * @param {Number} amount The strength of the ease.\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getBackInOut (amount) {\n\t\tamount *= 1.525;\n\t\treturn function (t) {\n\t\t\tif ((t *= 2) < 1) return 0.5 * (t * t * ((amount + 1) * t - amount));\n\t\t\treturn 0.5 * ((t -= 2) * t * ((amount + 1) * t + amount) + 2);\n\t\t};\n\t}\n\n\t/**\n\t * @method circIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic circIn (t) {\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t}\n\n\t/**\n\t * @method circOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic circOut (t) {\n\t\treturn Math.sqrt(1 - --t * t);\n\t}\n\n\t/**\n\t * @method circInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic circInOut (t) {\n\t\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t}\n\n\t/**\n\t * @method bounceIn\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic bounceIn (t) {\n\t\treturn 1 - Ease.bounceOut(1 - t);\n\t}\n\n\t/**\n\t * @method bounceOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic bounceOut (t) {\n\t\tif (t < 1 / 2.75) {\n\t\t\treturn 7.5625 * t * t;\n\t\t} else if (t < 2 / 2.75) {\n\t\t\treturn 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n\t\t} else if (t < 2.5 / 2.75) {\n\t\t\treturn 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n\t\t} else {\n\t\t\treturn 7.5625 * ( t-= 2.625 / 2.75) * t + 0.984375;\n\t\t}\n\t}\n\n\t/**\n\t * @method bounceInOut\n\t * @param {Number} t\n\t * @static\n\t * @return {Number}\n\t */\n\tstatic bounceInOut (t) {\n\t\tif (t < 0.5) return Ease.bounceIn(t * 2) * 0.5;\n\t\treturn Ease.bounceOut(t * 2 - 1) * 0.5 + 0.5;\n\t}\n\n\t/**\n\t * Configurable elastic ease.\n\t * @method getElasticIn\n\t * @param {Number} amplitude\n\t * @param {Number} period\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getElasticIn (amplitude, period) {\n\t\tlet pi2 = Math.PI * 2;\n\t\treturn function (t) {\n\t\t\tif (t === 0 || t === 1) return t;\n\t\t\tlet s = period / pi2 * Math.asin(1 / amplitude);\n\t\t\treturn -(amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period));\n\t\t};\n\t}\n\n\t/**\n\t * Configurable elastic ease.\n\t * @method getElasticOut\n\t * @param {Number} amplitude\n\t * @param {Number} period\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getElasticOut (amplitude, period) {\n\t\tlet pi2 = Math.PI * 2;\n\t\treturn function (t) {\n\t\t\tif (t === 0 || t === 1) return t;\n\t\t\tlet s = period / pi2 * Math.asin(1 / amplitude);\n\t\t\treturn amplitude * Math.pow(2, -10 * t) * Math.sin((t - s) * pi2 / period) + 1;\n\t\t};\n\t}\n\n\t/**\n\t * Configurable elastic ease.\n\t * @method getElasticInOut\n\t * @param {Number} amplitude\n\t * @param {Number} period\n\t * @static\n\t * @return {Function}\n\t */\n\tstatic getElasticInOut (amplitude, period) {\n\t\tlet pi2 = Math.PI * 2;\n\t\treturn function (t) {\n\t\t\tlet s = period / pi2 * Math.asin(1 / amplitude);\n\t\t\tif ((t *= 2) < 1) return -0.5 * (amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period));\n\t\t\treturn amplitude * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * pi2 / period) * 0.5 + 1;\n\t\t};\n\t}\n\n}\n\n// static properties\n/**\n * Identical to linear.\n * @method none\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.none = Ease.linear;\n/**\n * @method quadIn\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quadIn = Ease.getPowIn(2);\n/**\n * @method quadOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quadOut = Ease.getPowOut(2);\n/**\n * @method quadInOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quadInOut = Ease.getPowInOut(2);\n/**\n * @method cubicIn\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.cubicIn = Ease.getPowIn(3);\n/**\n * @method cubicOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.cubicOut = Ease.getPowOut(3);\n/**\n * @method cubicInOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.cubicInOut = Ease.getPowInOut(3);\n/**\n * @method quartIn\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quartIn = Ease.getPowIn(4);\n/**\n * @method quartOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quartOut = Ease.getPowOut(4);\n/**\n * @method quartInOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quartInOut = Ease.getPowInOut(4);\n/**\n * @method quintIn\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quintIn = Ease.getPowIn(5);\n/**\n * @method quintOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quintOut = Ease.getPowOut(5);\n/**\n * @method quintInOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.quintInOut = Ease.getPowInOut(5);\n/**\n * @method backIn\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.backIn = Ease.getBackIn(1.7);\n/**\n * @method backOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.backOut = Ease.getBackOut(1.7);\n/**\n * @method backInOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.backInOut = Ease.getBackInOut(1.7);\n/**\n * @method elasticIn\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.elasticIn = Ease.getElasticIn(1, 0.3);\n/**\n * @method elasticOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.elasticOut = Ease.getElasticOut(1, 0.3);\n/**\n * @method elasticInOut\n * @param {Number} t\n * @static\n * @return {Number}\n */\nEase.elasticInOut = Ease.getElasticInOut(1, 0.3 * 1.5);\n\n/*\n* CSSPlugin\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * A TweenJS plugin for working with numeric CSS string properties (ex. top, left). To use simply install after\n * TweenJS has loaded:\n *\n *      createjs.CSSPlugin.install();\n *\n * You can adjust the CSS properties it will work with by modifying the <code>cssSuffixMap</code> property. Currently,\n * the top, left, bottom, right, width, height have a \"px\" suffix appended.\n *\n * Please note that the CSS Plugin is not included in the TweenJS minified file.\n * @class CSSPlugin\n * @module TweenJS\n * @static\n */\nclass CSSPlugin {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"CSSPlugin is static and cannot be instanitated.\";\n\t}\n\n// static methods\n\t/**\n\t * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n\t * @method install\n\t * @static\n\t */\n\tinstall () {\n\t\tTween._installPlugin(CSSPlugin);\n\t}\n\n\t/**\n\t * @method init\n\t * @protected\n\t * @static\n\t */\n\tinit (tween, prop, value) {\n\t\tlet data = tween.pluginData;\n\t\tif (data.CSS_disabled || !(tween.target instanceof HTMLElement)) { return; }\n\n\t\tlet sfx0, sfx1, style, map = CSSPlugin.cssSuffixMap;\n\t\tif ((sfx0 = map[prop]) === undefined || !(style = tween.target.style)) { return value; }\n\t\tif (!data.CSS_installed) {\n\t\t\ttween._addPlugin(CSSPlugin);\n\t\t\tdata.CSS_installed = true;\n\t\t}\n\t\tlet str = style[prop];\n\t\tif (!str) { return 0; } // no style set.\n\t\tlet i = str.length - sfx0.length;\n\t\tif ((sfx1 = str.substr(i)) != sfx0) {\n\t\t\tthrow `CSSPlugin Error: Suffixes do not match. (${sfx0}:${sfx1})`;\n\t\t} else {\n\t\t\treturn parseInt(str);\n\t\t}\n\t}\n\n\t/**\n\t * @method step\n\t * @protected\n\t * @static\n\t */\n\tstep (tween, step, prop, value, injectProps) {\n\t\t// unused\n\t}\n\n\t/**\n\t * @method tween\n\t * @protected\n\t * @static\n\t */\n\ttween (tween, step, prop, value, ratio, end) {\n\t\tlet style, map = CSSPlugin.cssSuffixMap, sfx = map[prop];\n\t\tif (sfx === undefined || !(style = tween.target.style)) { return; }\n\t\tstyle[prop] = (value | 0) + sfx;\n\t\treturn Tween.IGNORE;\n\t}\n\n}\n\n// TODO: update docs.\n\n// static properties\n/**\n * Defines the default suffix map for CSS tweens. This can be overridden on a per tween basis by specifying a\n * cssSuffixMap value for the individual tween. The object maps CSS property names to the suffix to use when\n * reading or setting those properties. For example a map in the form {top:\"px\"} specifies that when tweening\n * the \"top\" CSS property, it should use the \"px\" suffix (ex. target.style.top = \"20.5px\"). This only applies\n * to tweens with the \"css\" config property set to true.\n * @property cssSuffixMap\n * @type Object\n * @static\n */\nCSSPlugin.cssSuffixMap = { top: \"px\", left: \"px\", bottom: \"px\", right: \"px\", width: \"px\", height: \"px\", opacity: \"\"};\n\n/**\n * @property priority\n * @protected\n * @static\n */\nCSSPlugin.priority = -100; // very low priority, should run last\n\n/*\n * MotionGuidePlugin\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2010 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * A TweenJS plugin for working with motion guides.\n *\n * To use, install the plugin after TweenJS has loaded. Next tween the 'guide' property with an object as detailed below.\n *\n *       createjs.MotionGuidePlugin.install();\n *\n * <h4>Example</h4>\n *\n *      // Using a Motion Guide\n *\t    createjs.Tween.get(target).to({guide:{ path:[0,0, 0,200,200,200, 200,0,0,0] }},7000);\n *\t    // Visualizing the line\n *\t    graphics.moveTo(0,0).curveTo(0,200,200,200).curveTo(200,0,0,0);\n *\n * Each path needs pre-computation to ensure there's fast performance. Because of the pre-computation there's no\n * built in support for path changes mid tween. These are the Guide Object's properties:<UL>\n *      <LI> path: Required, Array : The x/y points used to draw the path with a moveTo and 1 to n curveTo calls.</LI>\n *      <LI> start: Optional, 0-1 : Initial position, default 0 except for when continuing along the same path.</LI>\n *      <LI> end: Optional, 0-1 : Final position, default 1 if not specified.</LI>\n *      <LI> orient: Optional, string : \"fixed\"/\"auto\"/\"cw\"/\"ccw\"<UL>\n *\t\t\t\t<LI>\"fixed\" forces the object to face down the path all movement (relative to start rotation),</LI>\n *      \t\t<LI>\"auto\" rotates the object along the path relative to the line.</LI>\n *      \t\t<LI>\"cw\"/\"ccw\" force clockwise or counter clockwise rotations including flash like behaviour</LI>\n * \t\t</UL></LI>\n * </UL>\n * Guide objects should not be shared between tweens even if all properties are identical, the library stores\n * information on these objects in the background and sharing them can cause unexpected behaviour. Values\n * outside 0-1 range of tweens will be a \"best guess\" from the appropriate part of the defined curve.\n *\n * @class MotionGuidePlugin\n * @module TweenJS\n * @static\n */\nclass MotionGuidePlugin {\n\n\tconstructor () {\n\t\tthrow \"MotionGuidePlugin is static and cannot be instantiated.\";\n\t}\n\n// static methods\n\t/**\n\t * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n\t * @method install\n\t * @static\n\t */\n\tstatic install () {\n\t\tTween.installPlugin(MotionGuidePlugin, [\"guide\", \"x\", \"y\", \"rotation\"]);\n\t\treturn Tween.IGNORE;\n\t}\n\n\t/**\n\t * @method init\n\t * @protected\n\t * @static\n\t */\n\tstatic init (tween, prop, value) {\n\t\tlet target = tween.target;\n\t\tif (!target.hasOwnProperty(\"x\")) { target.x = 0; }\n\t\tif (!target.hasOwnProperty(\"y\")) { target.y = 0; }\n\t\tif (!target.hasOwnProperty(\"rotation\")) { target.rotation = 0; }\n\n\t\tif (prop === \"rotation\") { tween.__needsRot = true; }\n\t\treturn prop === \"guide\" ? null : value;\n\t}\n\n\t/**\n\t * @method step\n\t * @protected\n\t * @static\n\t */\n\tstatic step (tween, prop, startValue, endValue, injectProps) {\n\t\t// other props\n\t\tif (prop === \"rotation\") {\n\t\t\ttween.__rotGlobalS = startValue;\n\t\t\ttween.__rotGlobalE = endValue;\n\t\t\tMotionGuidePlugin.testRotData(tween, injectProps);\n\t\t}\n\t\tif (prop !== \"guide\") { return endValue; }\n\n\t\t// guide only information - Start -\n\t\tlet temp, data = endValue;\n\t\tif (!data.hasOwnProperty(\"path\")) { data.path = []; }\n\t\tlet path = data.path;\n\t\tif (!data.hasOwnProperty(\"end\")) { data.end = 1; }\n\t\tif (!data.hasOwnProperty(\"start\")) {\n\t\t\tdata.start = (startValue && startValue.hasOwnProperty(\"end\") && startValue.path === path) ? startValue.end : 0;\n\t\t}\n\n\t\t// Figure out subline information\n\t\tif (data.hasOwnProperty(\"_segments\") && data._length) { return endValue; }\n\t\tlet l = path.length;\n\t\tlet accuracy = 10; // Adjust to improve line following precision but sacrifice performance (# of seg)\n\t\tif (l >= 6 && (l - 2) % 4 == 0) { // Enough points && contains correct number per entry ignoring start\n\t\t\tdata._segments = [];\n\t\t\tdata._length = 0;\n\t\t\tfor (let i = 2; i < l; i += 4) {\n\t\t\t\tlet sx = path[i - 2], sy = path[i - 1];\n\t\t\t\tlet cx = path[i + 0], cy = path[i + 1];\n\t\t\t\tlet ex = path[i + 2], ey = path[i + 3];\n\t\t\t\tlet oldX = sx, oldY = sy;\n\t\t\t\tlet tempX, tempY, total = 0;\n\t\t\t\tlet sublines = [];\n\t\t\t\tfor (let i = 1; i <= accuracy; i++) {\n\t\t\t\t\tlet t = i / accuracy;\n\t\t\t\t\tlet inv = 1 - t;\n\t\t\t\t\ttempX = inv * inv * sx + 2 * inv * t * cx + t * t * ex;\n\t\t\t\t\ttempY = inv * inv * sy + 2 * inv * t * cy + t * t * ey;\n\t\t\t\t\ttotal += sublines[sublines.push(Math.sqrt((temp = tempX - oldX) * temp + (temp = tempY - oldY) * temp)) - 1];\n\t\t\t\t\toldX = tempX;\n\t\t\t\t\toldY = tempY;\n\t\t\t\t}\n\t\t\t\tdata._segments.push(total, sublines);\n\t\t\t\tdata._length += total;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow \"invalid 'path' data, please see documentation for valid paths\";\n\t\t}\n\n\t\t// Setup x/y tweens\n\t\ttemp = data.orient;\n\t\tdata.orient = true;\n\t\tlet o = {};\n\t\tMotionGuidePlugin.calc(data, data.start, o);\n\t\ttween.__rotPathS = Number(o.rotation.toFixed(5));\n\t\tMotionGuidePlugin.calc(data, data.end, o);\n\t\ttween.__rotPathE = Number(o.rotation.toFixed(5));\n\t\tdata.orient = false;\t//here and now we don't know if we need to\n\t\tMotionGuidePlugin.calc(data, data.end, injectProps);\n\t\tdata.orient = temp;\n\n\t\t// Setup rotation properties\n\t\tif (!data.orient) { return endValue; }\n\t\ttween.__guideData = data;\n\t\tMotionGuidePlugin.testRotData(tween, injectProps);\n\t\treturn endValue;\n\t}\n\n\t/**\n\t * @method testRotData\n\t * @protected\n\t * @static\n\t */\n\tstatic testRotData (tween, injectProps) {\n\t\t// no rotation informat? if we need it come back, if we don't use 0 & ensure we have guide data\n\t\tif (tween.__rotGlobalS === undefined || tween.__rotGlobalE === undefined) {\n\t\t\tif (tween.__needsRot) { return; }\n\t\t\tif (tween._curQueueProps.rotation !== undefined) {\n\t\t\t\ttween.__rotGlobalS = tween.__rotGlobalE = tween._curQueueProps.rotation;\n\t\t\t} else {\n\t\t\t\ttween.__rotGlobalS = tween.__rotGlobalE = injectProps.rotation = tween.target.rotation || 0;\n\t\t\t}\n\t\t}\n\t\tif (tween.__guideData === undefined) { return; }\n\n\t\t// Process rotation properties\n\t\tlet data = tween.__guideData;\n\t\tlet rotGlobalD = tween.__rotGlobalE - tween.__rotGlobalS;\n\t\tlet rotPathD = tween.__rotPathE - tween.__rotPathS;\n\t\tlet rot = rotGlobalD - rotPathD;\n\n\t\tswitch (data.orient) {\n\t\t\tcase \"auto\":\n\t\t\t\tif (rot > 180) { rot -= 360; }\n\t\t\t\telse if (rot < -180) { rot += 360; }\n\t\t\t\tbreak;\n\t\t\tcase \"cw\":\n\t\t\t\twhile (rot < 0) { rot += 360; }\n\t\t\t\tif (rot === 0 && rotGlobalD > 0 && rotGlobalD !== 180) { rot += 360; }\n\t\t\t\tbreak;\n\t\t\tcase \"ccw\":\n\t\t\t\trot = rotGlobalD - (rotPathD > 180 ? 360 - rotPathD : rotPathD);\t// sign flipping on path\n\t\t\t\twhile (rot > 0) { rot -= 360; }\n\t\t\t\tif (rot === 0 && rotGlobalD < 0 && rotGlobalD !== -180) { rot -= 360; }\n\t\t\t\tbreak;\n\t\t}\n\n\t\tdata.rotDelta = rot;\n\t\tdata.rotOffS = tween.__rotGlobalS - tween.__rotPathS;\n\n\t\t// reset\n\t\ttween.__rotGlobalS = tween.__rotGlobalE = tween.__guideData = tween.__needsRot = undefined;\n\t};\n\n\t/**\n\t * @method tween\n\t * @protected\n\t * @static\n\t */\n\tstatic tween (tween, prop, value, startValues, endValues, ratio, wait, end) {\n\t\tlet data = endValues.guide;\n\t\tif (data === undefined || data === startValues.guide) { return value; }\n\t\tif (data.lastRatio !== ratio) {\n\t\t\t// first time through so calculate what I need to\n\t\t\tlet t = (data.end - data.start) * (wait ? data.end : ratio) + data.start;\n\t\t\tMotionGuidePlugin.calc(data, t, tween.target);\n\t\t\tswitch (data.orient) {\n\t\t\t\tcase \"cw\": // mix in the original rotation\n\t\t\t\tcase \"ccw\":\n\t\t\t\tcase \"auto\": tween.target.rotation += data.rotOffS + data.rotDelta * ratio; break;\n\t\t\t\tcase \"fixed\":\t// follow fixed behaviour to solve potential issues\n\t\t\t\tdefault: tween.target.rotation += data.rotOffS; break;\n\t\t\t}\n\t\t\tdata.lastRatio = ratio;\n\t\t}\n\t\tif (prop === \"rotation\" && (!data.orient || data.orient === \"false\")) { return value; }\n\t\treturn tween.target[prop];\n\t}\n\n\t/**\n\t * Determine the appropriate x/y/rotation information about a path for a given ratio along the path.\n\t * Assumes a path object with all optional parameters specified.\n\t * @param {Object} data Data object you would pass to the \"guide:\" property in a Tween\n\t * @param {Number} ratio Distance along path, values outside 0-1 are \"best guess\"\n\t * @param {Object} [target=false] to copy the results onto, will use a new object if not supplied.\n\t * @return {Object} The target object or a new object w/ the tweened properties\n\t * @static\n\t */\n\tstatic calc (data, ratio, target = { x: 0, y: 0, rotation: 0 }) {\n\t\tif (data._segments === undefined) { MotionGuidePlugin.validate(data); }\n\t\tlet seg = data._segments;\n\t\tlet path = data.path;\n\n\t\t// find segment\n\t\tlet pos = data._length * ratio;\n\t\tlet cap = seg.length - 2;\n\t\tlet n = 0;\n\t\twhile (pos > seg[n] && n < cap) {\n\t\t\tpos -= seg[n];\n\t\t\tn += 2;\n\t\t}\n\n\t\t// find subline\n\t\tlet sublines = seg[n + 1];\n\t\tlet i = 0;\n\t\tcap = sublines.length - 1;\n\t\twhile (pos > sublines[i] && i < cap) {\n\t\t\tpos -= sublines[i++];\n\t\t}\n\t\tlet t = (i / ++cap) + (pos / (cap * sublines[i]));\n\n\t\t// find x/y\n\t\tn += n + 2;\n\t\tlet inv = 1 - t;\n\t\ttarget.x = inv * inv * path[n - 2] + 2 * inv * t * path[n + 0] + t * t * path[n + 2];\n\t\ttarget.y = inv * inv * path[n - 1] + 2 * inv * t * path[n + 1] + t * t * path[n + 3];\n\n\t\t// orientation\n\t\tif (data.orient) {\n\t\t\ttarget.rotation = 57.2957795 * Math.atan2(\n\t\t\t\t(path[n + 1] - path[n - 1]) * inv + (path[n + 3] - path[n + 1]) * t,\n\t\t\t\t(path[n + 0] - path[n - 2]) * inv + (path[n + 2] - path[n + 0]) * t\n\t\t\t);\n\t\t}\n\n\t\treturn target;\n\t}\n\n}\n\n\n// static properties:\n/**\n * @property priority\n * @protected\n * @static\n */\nMotionGuidePlugin.priority = 0; // high priority, should run sooner\n/**\n * @property _rotOffS\n * @private\n * @static\n */\nMotionGuidePlugin._rotOffS = undefined;\n/**\n * @property _rotOffE\n * @private\n * @static\n */\nMotionGuidePlugin._rotOffE = undefined;\n/**\n * @property _rotNormS\n * @private\n * @static\n */\nMotionGuidePlugin._rotNormS = undefined;\n/**\n * @property _rotNormE\n * @private\n * @static\n */\nMotionGuidePlugin._rotNormE = undefined;\n\n/*\n* RelativePlugin\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The RelativePlugin for TweenJS enables relative numeric values for tweens. Install using:\n *\n * \tRotationPlugin.install();\n *\n * Once installed, you can pass in relative numeric property values as strings beginning with \"+\" or \"-\". For example,\n * the following tween would tween the x position of `foo` from its initial value of `200` to `50` (200-150), then to\n * `125` (50+75).\n *\n * \tfoo.x = 200;\n * \tTween.get(foo).to({x:\"-150\"}, 500).to({x:\"+75\"}, 500);\n *\n * @class RelativePlugin\n * @module TweenJS\n * @static\n */\nclass RelativePlugin {\n\n// constructor:\n  /**\n   * @constructor\n   */\n\tconstructor () {\n\t\tthrow \"RelativePlugin is static and cannot be instantiated.\";\n\t}\n\n// static methods:\n  /**\n   * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n   * @method install\n   * @static\n   */\n  install () {\n    Tween._installPlugin(RelativePlugin);\n  }\n\n  /**\n   * Called by TweenJS when a new property initializes on a tween.\n   * See {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.\n   * @method init\n   * @param {Tween} tween\n   * @param {String} prop\n   * @param {any} value\n   * @return {any}\n   * @static\n   */\n  init (tween, prop, value) {\n    let data = tween.pluginData;\n    if (!data.Relative_installed && !data.Relative_disabled) {\n      tween._addPlugin(s);\n      data.Relative_installed = true;\n    }\n  }\n\n  /**\n   * Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\n   * See {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.\n   * @method init\n   * @param {Tween} tween\n   * @param {TweenStep} step\n   * @param {String} prop\n   * @param {String} value\n   * @return {any}\n   * @static\n   */\n  step (tween, step, prop, value) {\n    if (typeof value !== \"string\") { return; }\n    let prev = step.prev.props[prop], char0 = value[0], val;\n    if (typeof prev !== \"number\" || !(char0 === \"+\" || char0 === \"-\") || isNaN(val = +value)) { return; }\n    return prev + val;\n  }\n\n  /**\n   * Called before a property is updated by the tween.\n   * See {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.\n   * @method tween\n   * @param {Tween} tween\n   * @param {TweenStep} step\n   * @param {String} prop\n   * @param {any} value\n   * @param {Number} ratio\n   * @param {Boolean} end\n   * @return {any}\n   * @static\n   */\n  tween (tween, step, prop, value, ratio, end) {\n    // nothing\n  }\n\n}\n\n/*\n* RotationPlugin\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * The RotationPlugin for TweenJS modifies tweens of rotation properties. These properties can be changed using the\n * `RotationPlugin.props` property. Install using:\n *\n * \tRotationPlugin.install();\n *\n * After installation, by default all rotation tweens will rotate in the shortest direction. For example, if you\n * tween from `rotation=15` to `rotation=330`, it will rotate counter-clockwise. You can modify this behaviour by\n * specifying a `rotationDir` tween value. A value of `-1` will force CCW rotation, `1` will force CW, and `0` will\n * disable the plugin effects for that portion of the tween.\n *\n * Note that the `rotationDir` value will persist until overridden in future `to` calls.\n *\n * \t// this tween will rotate: CCW, then CCW (persisted), then CW.\n * \tmyTween.get(foo).to({rotation:30, rotationDir:-1}).to({rotation:60}).to({rotation:10, rotationDir:1});\n *\n * You can also disable the plugin completely for a tween by setting `tween.pluginData.Rotation_disabled=true`.\n *\n * @class RotationPlugin\n * @module TweenJS\n * @static\n */\nclass RotationPlugin {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"RotationPlugin is static and cannot be instantiated.\";\n\t}\n\n// static methods:\n\t/**\n\t * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n\t * @method install\n\t * @static\n\t */\n\tinstall () {\n\t\tTween._installPlugin(RotationPlugin);\n\t}\n\n\t/**\n\t * Called by TweenJS when a new property initializes on a tween.\n\t * See {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {String} prop\n\t * @param {any} value\n\t * @return {any}\n\t * @static\n\t */\n\tinit (tween, prop, value) {\n\t\tlet data = tween.pluginData;\n\t\tif (s.props[prop] && !data.Rotation_installed && !data.Rotation_disabled) {\n\t\t\ttween._addPlugin(s);\n\t\t\tdata.Rotation_installed = true;\n\t\t}\n\t}\n\n\t/**\n\t * Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\n\t * See {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.\n\t * @method init\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {String} prop\n\t * @param {String} value\n\t * @return {any}\n\t * @static\n\t */\n\tstep (tween, step, prop, value) {\n\t\tif (!s.props[prop]) { return; }\n\t\ttween.pluginData.Rotation_end = value;\n\t\tlet dir = step.props.rotationDir;\n\t\tif (dir === 0) { return; }\n\n\t\tdir = dir || 0;\n\t\tlet start = step.prev.props[prop];\n\t\tlet delta = (value - start) % 360;\n\n\t\tif ((dir === 0 && delta > 180) || (dir === -1 && delta > 0)) { delta -= 360; }\n\t\telse if ((dir === 0 && delta < -180) || (dir === 1 && delta < 0)) { delta += 360; }\n\t\treturn start + delta;\n\t}\n\n\t/**\n\t * Called before a property is updated by the tween.\n\t * See {{#crossLink \"SamplePlugin/init\"}}{{/crossLink}} for more info.\n\t * @method tween\n\t * @param {Tween} tween\n\t * @param {TweenStep} step\n\t * @param {String} prop\n\t * @param {any} value\n\t * @param {Number} ratio\n\t * @param {Boolean} end\n\t * @return {any}\n\t * @static\n\t */\n\ttween (tween, step, prop, value, ratio, end) {\n\t\tif (prop === \"rotationDir\") { return Tween.IGNORE; }\n\t\tif (end && s.props[prop]) { return tween.pluginData.Rotation_end; }\n\t}\n\n}\n\n// static properties:\n/**\n * An object defining the properties this tween acts on. For example, setting `RotationPlugin.props = {angle:true}`\n * will cause the plugin to only act on the `angle` property. By default the properties are `rotation`\n * `rotationX`, `rotationY`, and `rotationZ`.\n * @property props\n * @type {Object}\n * @static\n */\nRotationPlugin.props = { rotation: 1, rotationX: 1, rotationY: 1, rotationZ: 1 };\n\n/*\n* SamplePlugin\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/**\n * A sample TweenJS plugin. This plugin does not actually affect tweens in any way, it's merely intended to document\n * how to build TweenJS plugins. Please look at the code for inline comments.\n *\n * A TweenJS plugin is simply an object that exposes one property (priority), and three methods (init, step, and tween).\n * Generally a plugin will also expose an <code>install</code> method as well, though this is not strictly necessary.\n * @class SamplePlugin\n * @module TweenJS\n * @static\n */\nclass SamplePlugin {\n\n// constructor:\n\t/**\n\t * @constructor\n\t */\n\tconstructor () {\n\t\tthrow \"SamplePlugin is static and cannot be instantiated.\";\n\t}\n\n// static methods:\n\t/**\n\t * Installs this plugin for use with TweenJS. Call this once after TweenJS is loaded to enable this plugin.\n\t * @method install\n\t * @static\n\t */\n\tstatic install () {\n\t\tTween._installPlugin(SamplePlugin);\n\t}\n\n\t/**\n\t * Called by TweenJS when a new property initializes on a tween. Generally, the call\n\t * to `Plugin.init` will be immediately followed by a call to `Plugin.step`.\n\t *\n\t * For example:\n\t *\n\t * \tTween.get(foo)\n\t * \t\t.to({x:10}) // init called with prop = \"x\", value = 0\n\t * \t\t.to({x:20}) // init is NOT called\n\t * \t\t.to({y:200}) // init called with prop = \"y\", value = 100\n\t *\n\t * @method init\n\t * @param {Tween} tween The related tween instance.\n\t * @param {String} prop The name of the property that is being initialized.\n\t * @param {any} value If another plugin has returned a starting value, it will be passed in. Otherwise value will be undefined.\n\t * @return {any} The starting tween value for the property. In most cases, you would simply return the value parameter,\n\t * but some plugins may need to modify the starting value. You can also return `Tween.IGNORE` to prevent this tween\n\t * from being added to the tween.\n\t * @static\n\t */\n\tstatic init (tween, prop, value) {\n\t\tconsole.log(\"init: \", prop, value);\n\n\t\t// its good practice to let users opt out (or in some cases, maybe in) via pluginData:\n\t\tlet data = tween.pluginData;\n\t\tif (data.Sample_disabled) { return value; } // make sure to pass through value.\n\n\t\t// filter which properties you want to work on by using \"prop\":\n\t\tif (prop !== \"x\" && prop !== \"y\") { return value; } // make sure to pass through value.\n\n\t\t// you can then add this plugin to the tween:\n\t\t// Tween._addPlugin will screen for duplicate plugins, but its more efficient to set and check a flag:\n\t\tif (!data.Sample_installed) {\n\t\t\tdata.Sample_installed = true; // don't install again if we init on the same tween twice.\n\n\t\t\t// most plugins can just be a single shared plugin class:\n\t\t\ttween._addPlugin(SamplePlugin);\n\t\t\t// but you can also add an instance, if you wanted to store data on the plugin:\n\t\t\t// tween.addPlugin(new SamplePlugin());\n\t\t}\n\n\t\t// note that it's also possible to create a plugin that doesn't add itself, but hooks into the \"change\" event instead.\n\n\t\t// you can grab the current value on the target using:\n\t\tlet targetValue = tween.target[prop];\n\n\t\t// this would get the current starting value for the property, using value from previous plugins if specified, or the target value if not:\n\t\t// this is a bit of a pain, but it prevents accessing target values that aren't needed, which can be very expensive (ex. width on a HTMLElement, when we actually want to grab it from style)\n\t\tlet defaultValue = (value === undefined) ? targetValue : value;\n\n\t\t// this would round the starting value of \"x\" properties:\n\t\tif (prop === \"x\") { return Math.round(defaultValue); }\n\n\t\t// this would tell the tween to not include the \"y\" property:\n\t\t// if (prop === \"y\") { return Tween.IGNORE }\n\n\t\t// you can also use pluginData to attach arbitrary data to the tween for later use:\n\t\tif (!data) { data = tween.pluginData = {}; } // to reduce GC churn, pluginData is null by default.\n\t\tdata._Sample_value = 200; // namespacing your values will help prevent conflicts\n\n\t\t// if you don't want to make changes, then makes sure to pass other plugins changes through:\n\t\treturn value;\n\t}\n\n\t/**\n\t * Called when a new step is added to a tween (ie. a new \"to\" action is added to a tween).\n\t * For example:\n\t *\n\t * \tTween.get(foo)\n\t * \t\t.to({x:10}) // step called with prop = \"x\"\n\t * \t\t.to({y:100}) // step called with prop = \"y\"\n\t * \t\t.to({x:20, y:200}) // step is called twice\n\t *\n\t * @method init\n\t * @param {Tween} tween The related tween instance.\n\t * @param {TweenStep} step The related tween step. This class is currently undocumented. See the bottom of Tween.js for info.\n\t * @param {String} prop The name of the property being tweened.\n\t * @param {String} value The value of the property for this step.\n\t * @param {Object} injectProps If a previous plugin returned an injectProps object, it will be passed here.\n\t * @return {Object} If you'd like to inject new properties into the tween, you can return a generic object with name value pairs. You should add to the existing injectProps object if it exists.\n\t * @static\n\t */\n\tstatic step (tween, step, prop, value, injectProps) {\n\t\tconsole.log(\"step: \", step, prop, injectProps);\n\n\t\t// filter which properties you want to work on by using \"prop\":\n\t\tif (prop !== \"x\") { return; }\n\n\t\t// you can grab the start value from previous step:\n\t\tlet startValue = step.prev.props[prop];\n\n\t\t// you can modify this step's end value:\n\t\t// step.props[prop] = Math.max(0, Math.min(100, Math.PI));\n\n\t\t// if this was an instance plugin, you could store step specific data using step.index:\n\t\t// this.steps[step.index] = {arbitraryData:foo};\n\n\t\t// or specify other properties that you'd like to include in the tween:\n\t\t// make sure you use the existing injectProps if it exists:\n\t\t// injectProps = injectProps||{}; // preserve other tween's injections\n\t\t// injectProps.foo = 27;\n\t\t// return injectProps;\n\t};\n\n\t/**\n\t * Called before a property is updated by the tween.\n\t * @method tween\n\t * @param {Tween} tween The related tween instance.\n\t * @param {TweenStep} step The related tween step. This class is currently undocumented. See the bottom of Tween.js for info.\n\t * @param {String} prop The name of the property being tweened.\n\t * @param {any} value The current tweened value of the property, as calculated by TweenJS. Previous plugins may have modified this value.\n\t * @param {Number} ratio A value indicating the eased progress through the current step. This\n\t * number is generally between 0 and 1, though some eases will generate values outside\n\t * this range.\n\t * @param {Boolean} end Indicates that the tween has reached the end.\n\t * @return {any} Return the value that should be assigned to the target property.\n\t * @static\n\t */\n\tstatic tween (tween, step, prop, value, ratio, end) {\n\t\t// ratio is the eased ratio\n\t\tconsole.log(\"tween\", step, prop, value, ratio, end);\n\n\t\t// filter which properties you want to work on by using \"prop\":\n\t\tif (prop !== \"x\") { return value; } // make sure you ALWAYS pass through value!\n\n\t\t// you can grab the end value for the step via its props object:\n\t\tlet endValue = step.props[prop];\n\n\t\t// similarly, you can grab the start value from previous step:\n\t\tlet startValue = step.prev.props[prop];\n\n\t\t// you could calculate the unmodified tweened value using the ratio:\n\t\t// this will be the same as \"value\" unless a previous plugin returned a modified value\n\t\tlet unmodifiedValue = startValue + (endValue - startValue) * ratio;\n\t\tif (value !== unmodifiedValue) { /* a previous plugin modified the value */ }\n\n\t\t// check if the tween is currently in a \"wait\" by comparing the props objects of this and the previous step:\n\t\tlet inWait = (step.props === step.prev.props);\n\n\t\t// tell the tween to not set the value on the target:\n\t\t// return Tween.IGNORE;\n\n\t\t// you can return a modified value to be set on the target:\n\t\treturn Math.round(value);\n\n\t\t// or don't return anything to use the default value.\n\t}\n\n}\n\n// static properties:\n/**\n * Used by TweenJS to determine when to call this plugin. Plugins with higher priority have their methods called\n * before plugins with lower priority. The priority value can be any positive or negative number.\n * @property priority\n * @type {Number}\n * @default 0\n * @static\n */\nSamplePlugin.priority = 0;\n\n/**\n * The TweenJS JavaScript library provides a simple but powerful tweening interface. It supports tweening of both\n * numeric object properties & CSS style properties, and allows you to chain tweens and actions together to create\n * complex sequences.\n *\n * <h4>Simple Tween</h4>\n * This tween will tween the target's alpha property from 0 to 1 for 1s then call the <code>handleComplete</code> function.\n *\n *\t    target.alpha = 0;\n *\t    createjs.Tween.get(target).to({alpha:1}, 1000).call(handleComplete);\n *\t    function handleComplete() {\n *\t    \t//Tween complete\n *\t    }\n *\n * <strong>Arguments and Scope</strong>\n * Tween also supports a `call()` with arguments and/or a scope. If no scope is passed, then the function is called\n * anonymously (normal JavaScript behaviour). The scope is useful for maintaining scope when doing object-oriented\n * style development.\n *\n *      createjs.Tween.get(target).to({alpha:0})\n *          .call(handleComplete, [argument1, argument2], this);\n *\n * <h4>Chainable Tween</h4>\n * This tween will wait 0.5s, tween the target's alpha property to 0 over 1s, set it's visible to false, then call the\n * <code>handleComplete</code> function.\n *\n *\t    target.alpha = 1;\n *\t    createjs.Tween.get(target).wait(500).to({alpha:0, visible:false}, 1000).call(handleComplete);\n *\t    function handleComplete() {\n *\t    \t//Tween complete\n *\t    }\n *\n * <h4>Browser Support</h4>\n * TweenJS will work in all browsers.\n *\n * @module TweenJS\n * @main TweenJS\n */\n\n/**\n * README: Export Order\n *\n * Due to some classes having circular import bindings (whether at the top of the import chain or deeper in),\n * some exports here are in reverse order (such as Container being exported before DisplayObject).\n * This is explained here: https://github.com/rollup/rollup/issues/845#issuecomment-240277194\n */\n\n// re-export shared classes\n// TODO: Review this version export.\n// version (templated in gulpfile, pulled from package).\nconst version = \"1.0.0\";\n\nexport { version, EventDispatcher, Event, Ticker, AbstractTween, Tween, Timeline, Ease, CSSPlugin, MotionGuidePlugin, RelativePlugin, RotationPlugin, SamplePlugin };\n"],"file":"tweenjs.es6.js"}