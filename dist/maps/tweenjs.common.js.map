{"version":3,"sources":["../../../../core/src/events/Event.js","../../../../core/src/events/EventDispatcher.js","../../../src/AbstractTween.js","../../../src/Ease.js","../../../../core/src/utils/Ticker.js","../../../src/Tween.js","../../../src/Timeline.js"],"names":["Event","type","bubbles","arguments","length","undefined","cancelable","target","currentTarget","eventPhase","timeStamp","Date","getTime","defaultPrevented","propagationStopped","immediatePropagationStopped","removed","preventDefault","this","stopPropagation","stopImmediatePropagation","remove","clone","event","n","hasOwnProperty","set","props","toString","constructor","name","EventDispatcher","initialize","p","prototype","addEventListener","on","removeEventListener","off","removeAllEventListeners","hasEventListener","dispatchEvent","_dispatchEvent","willTrigger","_listeners","_captureListeners","listener","useCapture","listeners","arr","push","scope","once","data","handleEvent","evt","call","l","i","splice","eventObj","e","parent","top","list","captureListeners","o","slice","AbstractTween","_EventDispatcher","ignoreGlobalPause","loop","useTicks","reversed","bounce","timeScale","duration","position","rawPosition","_paused","_next","_prev","_parent","_labels","_labelList","onChange","_this","onComplete","advance","delta","ignoreActions","setPosition","jump","callback","d","loopCount","prevRawPos","t","end","_updatePosition","paused","_runActions","calculatePosition","addLabel","label","gotoAndPlay","positionOrLabel","_goto","gotoAndStop","resolve","pos","Number","isNaN","_init","startRawPos","endRawPos","includeStart","_actionHead","tweens","loop0","loop1","t0","t1","_runActionsRange","dir","rev","start","startPos","endPos","labels","sort","a","b","_register","linear","get","amount","getPowIn","pow","Math","getPowOut","getPowInOut","abs","sineIn","cos","PI","sineOut","sin","sineInOut","getBackIn","getBackOut","getBackInOut","circIn","sqrt","circOut","circInOut","bounceIn","Ease","bounceOut","bounceInOut","getElasticIn","amplitude","period","pi2","s","asin","getElasticOut","getElasticInOut","none","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","quartIn","quartOut","quartInOut","quintIn","quintOut","quintInOut","backIn","backOut","backInOut","elasticIn","elasticOut","elasticInOut","Ticker","timingMode","TIMEOUT","maxDelta","_inited","_startTime","_pausedTime","_ticks","_pausedTicks","_interval","_lastTime","_times","_tickTimes","_timerId","_raf","init","_getTime","_setupTick","reset","f","window","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","getMeasuredTickTime","ticks","times","min","framerate","reduce","getMeasuredFPS","runTime","getEventTime","getTicks","pauseable","_handleSynch","_tick","_handleRAF","_handleTimeout","mode","RAF","RAF_SYNCHED","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","bind","setTimeout","time","elapsedTime","unshift","pop","now","performance","_instance","interval","Tween","_AbstractTween","pluginData","passive","_stepHead","TweenStep","_stepTail","_stepPosition","_actionTail","_plugins","_pluginIds","_injected","override","removeTweens","tick","tween","_tweenHead","next","tweenjs_count","removeAllTweens","_tweenTail","hasActiveTweens","installPlugin","plugin","install","priority","tail","prev","wait","_addStep","to","ease","step","_appendProps","params","_addAction","_set","play","pause","_addPlugin","ids","id","plugins","stepNext","ratio","_updateTargetProps","v","v0","v1","p0","p1","value","change","IGNORE","proploop","action","ePos","sPos","funct","apply","stepPlugins","initProps","initValue","inject","oldStep","oldProps","stepProps","_cloneProps","cleanProps","ignored","_injectProp","TweenAction","w","c","_tweens","index","Timeline","addTween","Array","_len","_key","removeTween","_len2","_key2","tw","updateDuration","good"],"mappings":"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","file":"../tweenjs.common.js","sourcesContent":["/**\n * @license Event\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Contains properties and methods shared by all events for use with {@link core.EventDispatcher}.\n * Note that Event objects are often reused, so you should never\n * rely on an event object's state outside of the call stack it was received in.\n *\n * @memberof core\n * @example\n * const evt = new Event(\"myEvent\");\n * const dispatcher = new EventDispatcher();\n * dispatcher.on(\"myEvent\", event => console.log(event.type));\n * dispatcher.dispatchEvent(evt); // logs \"myEvent\"\n *\n * @param {string} type The event type.\n * @param {boolean} [bubbles=false] Indicates whether the event will bubble through the display list.\n * @param {boolean} [cancelable=false] Indicates whether the default behaviour of this event can be cancelled.\n */\nclass Event {\n\n\tconstructor (type, bubbles = false, cancelable = false) {\n\t\t/**\n\t\t * The type of event.\n\t\t * @type string\n\t\t */\n\t\tthis.type = type;\n\n\t\t/**\n\t\t * The object that generated an event.\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.target = null;\n\n\t\t/**\n\t\t * The current target that a bubbling event is being dispatched from. For non-bubbling events, this will\n\t\t * always be the same as target. For example, if childObj.parent = parentObj, and a bubbling event\n\t\t * is generated from childObj, then a listener on parentObj would receive the event with\n\t\t * target=childObj (the original target) and currentTarget=parentObj (where the listener was added).\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @readonly\n\t\t */\n\t\tthis.currentTarget = null;\n\n\t\t/**\n\t\t * For bubbling events, this indicates the current event phase:\n\t\t * <OL>\n\t\t * \t<LI> capture phase: starting from the top parent to the target</LI>\n\t\t * \t<LI> at target phase: currently being dispatched from the target</LI>\n\t\t * \t<LI> bubbling phase: from the target to the top parent</LI>\n\t\t * </OL>\n\t\t *\n\t\t * @type number\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.eventPhase = 0;\n\n\t\t/**\n\t\t * Indicates whether the event will bubble through the display list.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.bubbles = bubbles;\n\n\t\t/**\n\t\t * Indicates whether the default behaviour of this event can be cancelled via {@link core.Event#preventDefault}.\n\t\t *\n\t\t * @type boolean\n\t\t * @readonly\n\t\t */\n\t\tthis.cancelable = cancelable;\n\n\t\t/**\n\t\t * The epoch time at which this event was created.\n\t\t *\n\t\t * @type number\n\t\t * @readonly\n\t\t */\n\t\tthis.timeStamp = new Date().getTime();\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#preventDefault} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.defaultPrevented = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopPropagation} or {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.propagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#stopImmediatePropagation} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.immediatePropagationStopped = false;\n\n\t\t/**\n\t\t * Indicates if {@link core.Event#remove} has been called on this event.\n\t\t *\n\t\t * @type boolean\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.removed = false;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#defaultPrevented} to true if the event is cancelable.\n\t * Mirrors the DOM level 2 event standard. In general, cancelable events that have `preventDefault()` called will\n\t * cancel the default behaviour associated with the event.\n\t * @return {core.Event} this, chainable\n\t */\n\tpreventDefault () {\n\t\tthis.defaultPrevented = this.cancelable;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopPropagation () {\n\t\tthis.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets {@link core.Event#propagationStopped} and {@link core.Event#immediatePropagationStopped} to true.\n\t * Mirrors the DOM event standard.\n\t * @return {core.Event} this, chainable\n\t */\n\tstopImmediatePropagation () {\n\t\tthis.immediatePropagationStopped = this.propagationStopped = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Causes the active listener to be removed via removeEventListener();\n\t *\n\t * @example\n\t * myBtn.addEventListener(\"click\", event => {\n\t *   event.remove(); // removes this listener.\n\t * });\n\t *\n\t * @return {core.Event} this, chainable\n\t */\n\tremove () {\n\t\tthis.removed = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a clone of the Event instance.\n\t *\n\t * @return {core.Event} a clone of the Event instance.\n\t */\n\tclone () {\n\t\tconst event = new Event(this.type, this.bubbles, this.cancelable);\n\t\tfor (let n in this) {\n\t\t\tif (this.hasOwnProperty(n)) {\n\t\t\t\tevent[n] = this[n];\n\t\t\t}\n\t\t}\n\t\treturn event;\n\t}\n\n\t/**\n\t * Provides a return {core.Event} this, chainable shortcut method for setting a number of properties on the instance.\n\t *\n\t * @param {Object} props A generic object containing properties to copy to the instance.\n\t * @return {core.Event} this, chainable\n\t */\n\tset (props) {\n\t\tfor (let n in props) { this[n] = props[n]; }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t *\n\t * @return {string} A string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name} (type=${this.type})]`;\n\t}\n\n}\n\nexport default Event;\n","/**\n * @license EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport Event from \"./Event\";\n\n/**\n * EventDispatcher provides methods for managing queues of event listeners and dispatching events.\n *\n * You can either extend EventDispatcher or mix its methods into an existing prototype or instance by using the\n * EventDispatcher {@link core.EventDispatcher.initialize} method.\n *\n * Together with the CreateJS Event class, EventDispatcher provides an extended event model that is based on the\n * DOM Level 2 event model, including addEventListener, removeEventListener, and dispatchEvent. It supports\n * bubbling / capture, preventDefault, stopPropagation, stopImmediatePropagation, and handleEvent.\n *\n * EventDispatcher also exposes a {@link core.EventDispatcher#on} method, which makes it easier\n * to create scoped listeners, listeners that only run once, and listeners with associated arbitrary data. The\n * {@link core.EventDispatcher#off} method is merely an alias to {@link core.EventDispatcher#removeEventListener}.\n *\n * Another addition to the DOM Level 2 model is the {@link core.EventDispatcher#removeAllEventListeners}\n * method, which can be used to listeners for all events, or listeners for a specific event. The Event object also\n * includes a {@link core.Event#remove} method which removes the active listener.\n *\n * @memberof core\n * @example\n * // add EventDispatcher capabilities to the \"MyClass\" class.\n * EventDispatcher.initialize(MyClass.prototype);\n *\n * // Add an event.\n * instance.addEventListener(\"eventName\", event => console.log(event.target + \" was clicked.\"));\n *\n * // scope (\"this\") can be be a challenge with events.\n * // using the {@link core.EventDispatcher#on} method to subscribe to events simplifies this.\n * instance.addEventListener(\"click\", event => console.log(instance === this)); // false, scope is ambiguous.\n * instance.on(\"click\", event => console.log(instance === this)); // true, `on` uses dispatcher scope by default.\n */\nclass EventDispatcher {\n\n\t/**\n\t * Static initializer to mix EventDispatcher methods into a target object or prototype.\n\t *\n\t * @static\n\t * @example\n\t * EventDispatcher.initialize(MyClass.prototype); // add to the prototype of the class\n\t * EventDispatcher.initialize(myInstance); // add to a specific instance\n\t *\n\t * @param {Object} target The target object to inject EventDispatcher methods into.\n\t */\n\tstatic initialize (target) {\n\t\tconst p = EventDispatcher.prototype;\n\t\ttarget.addEventListener = p.addEventListener;\n\t\ttarget.on = p.on;\n\t\ttarget.removeEventListener = target.off = p.removeEventListener;\n\t\ttarget.removeAllEventListeners = p.removeAllEventListeners;\n\t\ttarget.hasEventListener = p.hasEventListener;\n\t\ttarget.dispatchEvent = p.dispatchEvent;\n\t\ttarget._dispatchEvent = p._dispatchEvent;\n\t\ttarget.willTrigger = p.willTrigger;\n\t}\n\n\tconstructor () {\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._listeners = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @default null\n\t\t * @type Object\n\t\t */\n\t\tthis._captureListeners = null;\n\t}\n\n\t/**\n\t * Adds the specified event listener. Note that adding multiple listeners to the same function will result in\n\t * multiple callbacks getting fired.\n\t *\n\t * @example\n\t * displayObject.addEventListener(\"click\", event => console.log('clicked', event));\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function|Object} Returns the listener for chaining or assignment.\n\t */\n\taddEventListener (type, listener, useCapture = false) {\n\t\tlet listeners;\n\t\tif (useCapture) {\n\t\t\tlisteners = this._captureListeners = this._captureListeners || {};\n\t\t} else {\n\t\t\tlisteners = this._listeners = this._listeners || {};\n\t\t}\n\t\tlet arr = listeners[type];\n\t\tif (arr) {\n\t\t\tthis.removeEventListener(type, listener, useCapture);\n\t\t\tarr = listeners[type]; // remove may have deleted the array\n\t\t}\n\t\tif (arr) { arr.push(listener);  }\n\t\telse { listeners[type] = [listener]; }\n\t\treturn listener;\n\t}\n\n\t/**\n\t * A shortcut method for using addEventListener that makes it easier to specify an execution scope, have a listener\n\t * only run once, associate arbitrary data with the listener, and remove the listener.\n\t *\n\t * This method works by creating an anonymous wrapper function and subscribing it with `addEventListener`.\n\t * The wrapper function is returned for use with `removeEventListener` (or `off`).\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener, or use\n\t * {@link core.Event#remove}. Likewise, each time you call `on` a NEW wrapper function is subscribed, so multiple calls\n\t * to `on` with the same params will create multiple listeners.\n\t *\n\t * @example\n\t * const listener = myBtn.on(\"click\", handleClick, null, false, { count: 3 });\n\t * function handleClick (evt, data) {\n\t *   data.count -= 1;\n\t *   console.log(this == myBtn); // true - scope defaults to the dispatcher\n\t *   if (data.count == 0) {\n\t *     alert(\"clicked 3 times!\");\n\t *     myBtn.off(\"click\", listener);\n\t *     // alternately: evt.remove();\n\t *   }\n\t * }\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener An object with a handleEvent method, or a function that will be called when the event is dispatched.\n\t * @param {Object} [scope=null] The scope to execute the listener in. Defaults to the dispatcher/currentTarget for function listeners, and to the listener itself for object listeners (ie. using handleEvent).\n\t * @param {boolean} [once=false] If true, the listener will remove itself after the first time it is triggered.\n\t * @param {*} [data={}] Arbitrary data that will be included as the second parameter when the listener is called.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t * @return {Function} Returns the anonymous function that was created and assigned as the listener. This is needed to remove the listener later using .removeEventListener.\n\t */\n\ton (type, listener, scope = null, once = false, data = {}, useCapture = false) {\n\t\tif (listener.handleEvent) {\n\t\t\tscope = scope || listener;\n\t\t\tlistener = listener.handleEvent;\n\t\t}\n\t\tscope = scope || this;\n\t\treturn this.addEventListener(type, evt => {\n\t\t\tlistener.call(scope, evt, data);\n\t\t\tonce && evt.remove();\n\t\t}, useCapture);\n\t}\n\n\t/**\n\t * Removes the specified event listener.\n\t *\n\t * You must pass the exact function reference used when the event was added. If a proxy\n\t * function, or function closure is used as the callback, the proxy/closure reference must be used - a new proxy or\n\t * closure will not work.\n\t *\n\t * @example\n\t * displayObject.removeEventListener(\"click\", handleClick);\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\tremoveEventListener (type, listener, useCapture = false) {\n\t\tconst listeners = useCapture ? this._captureListeners : this._listeners;\n\t\tif (!listeners) { return; }\n\t\tconst arr = listeners[type];\n\t\tif (!arr) { return; }\n\t\tconst l = arr.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (arr[i] === listener) {\n\t\t\t\tif (l === 1) { delete(listeners[type]); } // allows for faster checks.\n\t\t\t\telse { arr.splice(i, 1); }\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A shortcut to the removeEventListener method, with the same parameters and return value. This is a companion to the\n\t * `on` method.\n\t *\n\t * To remove a listener added with `on`, you must pass in the returned wrapper function as the listener. See\n\t * {@link core.EventDispatcher#on} for an example.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @param {Function|Object} listener The listener function or object.\n\t * @param {boolean} [useCapture=false] For events that bubble, indicates whether to listen for the event in the capture or bubbling/target phase.\n\t */\n\toff (type, listener, useCapture = false) {\n\t\tthis.removeEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Removes all listeners for the specified type, or all listeners of all types.\n\t *\n\t * @example\n\t * // remove all listeners\n\t * displayObject.removeAllEventListeners();\n\t *\n\t * // remove all click listeners\n\t * displayObject.removeAllEventListeners(\"click\");\n\t *\n\t * @param {string} [type=null] The string type of the event. If omitted, all listeners for all types will be removed.\n\t */\n\tremoveAllEventListeners (type = null) {\n\t\tif (type) {\n\t\t\tif (this._listeners) { delete(this._listeners[type]); }\n\t\t\tif (this._captureListeners) { delete(this._captureListeners[type]); }\n\t\t} else {\n\t\t\tthis._listeners = this._captureListeners = null;\n\t\t}\n\t}\n\n\t/**\n\t * Dispatches the specified event to all listeners.\n\t *\n\t * @example\n\t * // use a string event\n\t * this.dispatchEvent(\"complete\")\n\t *\n\t * // use an Event instance\n\t * const event = new createjs.Event(\"progress\");\n\t * this.dispatchEvent(event);\n\t *\n\t * @param {Object|Event|string} eventObj An object with a \"type\" property, or a string type.\n\t * While a generic object will work, it is recommended to use a CreateJS Event instance. If a string is used,\n\t * dispatchEvent will construct an Event instance if necessary with the specified type. This latter approach can\n\t * be used to avoid event object instantiation for non-bubbling events that may not have any listeners.\n\t * @param {boolean} [bubbles=false] Specifies the `bubbles` value when a string was passed to eventObj.\n\t * @param {boolean} [cancelable=false] Specifies the `cancelable` value when a string was passed to eventObj.\n\t * @return {boolean} Returns false if `preventDefault()` was called on a cancelable event, true otherwise.\n\t */\n\tdispatchEvent (eventObj, bubbles = false, cancelable = false) {\n\t\tif (typeof eventObj === \"string\") {\n\t\t\t// skip everything if there's no listeners and it doesn't bubble:\n\t\t\tconst listeners = this._listeners;\n\t\t\tif (!bubbles && (!listeners || !listeners[eventObj])) { return true; }\n\t\t\teventObj = new Event(eventObj, bubbles, cancelable);\n\t\t} else if (eventObj.target && eventObj.clone) {\n\t\t\t// redispatching an active event object, so clone it:\n\t\t\teventObj = eventObj.clone();\n\t\t}\n\n\t\t// TODO: it would be nice to eliminate this. Maybe in favour of evtObj instanceof Event? Or !!evtObj.createEvent\n\t\ttry { eventObj.target = this; } catch (e) {} // try/catch allows redispatching of native events\n\n\t\tif (!eventObj.bubbles || !this.parent) {\n\t\t\tthis._dispatchEvent(eventObj, 2);\n\t\t} else {\n\t\t\tlet top = this;\n\t\t\tconst list = [top];\n\t\t\twhile (top.parent) { list.push(top = top.parent); }\n\t\t\tconst l = list.length;\n\t\t\tlet i;\n\n\t\t\t// capture & atTarget\n\t\t\tfor (i = l - 1; i >= 0 && !eventObj.propagationStopped; i--) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 1+(i==0));\n\t\t\t}\n\t\t\t// bubbling\n\t\t\tfor (i = 1; i < l && !eventObj.propagationStopped; i++) {\n\t\t\t\tlist[i]._dispatchEvent(eventObj, 3);\n\t\t\t}\n\t\t}\n\t\treturn !eventObj.defaultPrevented;\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns true if there is at least one listener for the specified event.\n\t */\n\thasEventListener (type) {\n\t\tconst listeners = this._listeners, captureListeners = this._captureListeners;\n\t\treturn !!((listeners && listeners[type]) || (captureListeners && captureListeners[type]));\n\t}\n\n\t/**\n\t * Indicates whether there is at least one listener for the specified event type on this object or any of its\n\t * ancestors (parent, parent's parent, etc). A return value of true indicates that if a bubbling event of the\n\t * specified type is dispatched from this object, it will trigger at least one listener.\n\t *\n\t * This is similar to {@link core.EventDispatcher#hasEventListener}, but it searches the entire\n\t * event flow for a listener, not just this object.\n\t *\n\t * @param {string} type The string type of the event.\n\t * @return {boolean} Returns `true` if there is at least one listener for the specified event.\n\t */\n\twillTrigger (type) {\n\t\tlet o = this;\n\t\twhile (o) {\n\t\t\tif (o.hasEventListener(type)) { return true; }\n\t\t\to = o.parent;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {String} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name + this.name ? ` ${this.name}` : \"\"}]`;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object|Event|string} eventObj\n\t * @param {Object} eventPhase\n\t */\n\t_dispatchEvent (eventObj, eventPhase) {\n\t\tconst listeners = eventPhase === 1 ? this._captureListeners : this._listeners;\n\t\tif (eventObj && listeners) {\n\t\t\tlet arr = listeners[eventObj.type];\n\t\t\tlet l;\n\t\t\tif (!arr || (l = arr.length) === 0) { return; }\n\t\t\ttry { eventObj.currentTarget = this; } catch (e) {}\n\t\t\ttry { eventObj.eventPhase = eventPhase; } catch (e) {}\n\t\t\teventObj.removed = false;\n\n\t\t\tarr = arr.slice(); // to avoid issues with items being removed or added during the dispatch\n\t\t\tfor (let i = 0; i < l && !eventObj.immediatePropagationStopped; i++) {\n\t\t\t\tlet o = arr[i];\n\t\t\t\tif (o.handleEvent) { o.handleEvent(eventObj); }\n\t\t\t\telse { o(eventObj); }\n\t\t\t\tif (eventObj.removed) {\n\t\t\t\t\tthis.off(eventObj.type, o, eventPhase === 1);\n\t\t\t\t\teventObj.removed = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport default EventDispatcher;\n","/**\n * @license AbstractTween\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"@createjs/core/src/events/EventDispatcher\";\nimport Tween from \"./Tween\";\n\n/**\n * Base class that both {@link tweenjs.Tween} and {@link tweenjs.Timeline} extend. Should not be instantiated directly.\n *\n * @memberof tweenjs\n * @extends EventDispatcher\n *\n * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n * @param {boolean} [props.useTicks=false] See the {@link tweenjs.AbstractTween#useTicks} property for more information.\n * @param {boolean} [props.ignoreGlobalPause=false] See the {@link tweenjs.AbstractTween#ignoreGlobalPause} for more information.\n * @param {number|boolean} [props.loop=0] See the {@link tweenjs.AbstractTween#loop} for more information.\n * @param {boolean} [props.reversed=false] See the {@link tweenjs.AbstractTween#reversed} for more information.\n * @param {boolean} [props.bounce=false] See the {@link tweenjs.AbstractTween#bounce} for more information.\n * @param {number} [props.timeScale=1] See the {@link tweenjs.AbstractTween#timeScale} for more information.\n * @param {Function} [props.onChange] Adds the specified function as a listener to the {@link tweenjs.AbstractTween#event:change} event.\n * @param {Function} [props.onComplete] Adds the specified function as a listener to the {@link tweenjs.AbstractTween#event:complete} event.\n */\nclass AbstractTween extends EventDispatcher {\n\n  constructor (props) {\n    super();\n\n\t\t/**\n\t\t * Causes this tween to continue playing when a global pause is active. For example, if TweenJS is using {@link core.Ticker},\n\t\t * then setting this to false (the default) will cause this tween to be paused when `Ticker.setPaused(true)`\n\t\t * is called. See the {@link tweenjs.Tween#tick} method for more info. Can be set via the `props` parameter.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.ignoreGlobalPause = false;\n\n\t\t/**\n\t\t * Indicates the number of times to loop. If set to -1, the tween will loop continuously.\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.loop = 0;\n\n\t\t/**\n\t\t * Uses ticks for all durations instead of milliseconds. This also changes the behaviour of some actions (such as `call`).\n\t\t * Changing this value on a running tween could have unexpected results.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.useTicks = false;\n\n\t\t/**\n\t\t * Causes the tween to play in reverse.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.reversed = false;\n\n\t\t/**\n\t\t * Causes the tween to reverse direction at the end of each loop.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.bounce = false;\n\n\t\t/**\n\t\t * Changes the rate at which the tween advances. For example, a `timeScale` value of `2` will double the\n\t\t * playback speed, a value of `0.5` would halve it.\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.timeScale = 1;\n\n\t\t/**\n\t\t * Indicates the duration of this tween in milliseconds (or ticks if `useTicks` is true), irrespective of `loops`.\n\t\t * This value is automatically updated as you modify the tween. Changing it directly could result in unexpected\n\t\t * behaviour.\n\t\t * @type {number}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.duration = 0;\n\n\t\t/**\n\t\t * The current normalized position of the tween. This will always be a value between 0 and `duration`.\n\t\t * Changing this property directly will have unexpected results, use {@link tweenjs.Tween#setPosition}.\n\t\t * @type {Object}\n\t\t * @default 0\n\t\t * @readonly\n\t\t */\n\t\tthis.position = 0;\n\n\t\t/**\n\t\t * The raw tween position. This value will be between `0` and `loops * duration` while the tween is active, or -1 before it activates.\n\t\t * @type {number}\n\t\t * @default -1\n\t\t * @readonly\n\t\t */\n\t\tthis.rawPosition = -1;\n\n\t\t/**\n\t\t * @private\n\t\t * @default false\n\t\t */\n\t\tthis._paused = true;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Tween}\n\t\t * @default null\n\t\t */\n\t\tthis._next = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Tween}\n\t\t * @default null\n\t\t */\n\t\tthis._prev = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._parent = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Object}\n\t\t */\n\t\tthis._labels = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Object[]}\n\t\t */\n\t\tthis._labelList = null;\n\n\t\tif (props) {\n\t\t\tthis.useTicks = !!props.useTicks;\n\t\t\tthis.ignoreGlobalPause = !!props.ignoreGlobalPause;\n\t\t\tthis.loop = props.loop === true ? -1 : (props.loop||0);\n\t\t\tthis.reversed = !!props.reversed;\n\t\t\tthis.bounce = !!props.bounce;\n\t\t\tthis.timeScale = props.timeScale||1;\n\t\t\tprops.onChange && this.addEventListener(\"change\", props.onChange);\n\t\t\tprops.onComplete && this.addEventListener(\"complete\", props.onComplete);\n\t\t}\n\n\t\t// while `position` is shared, it needs to happen after ALL props are set, so it's handled in _init()\n  }\n\n\t/**\n\t * Returns a list of the labels defined on this tween sorted by position.\n\t * @type {Object[]}\n\t */\n\tget labels () {\n\t\tlet list = this._labelList;\n\t\tif (!list) {\n\t\t\tlist = this._labelList = [];\n\t\t\tlet labels = this._labels;\n\t\t\tfor (let label in labels) {\n\t\t\t\tlist.push({ label, position: labels[label] });\n\t\t\t}\n\t\t\tlist.sort((a, b) => a.position - b.position);\n\t\t}\n\t\treturn list;\n\t}\n\n\tset labels (labels) {\n\t\tthis._labels = labels;\n\t\tthis._labelList = null;\n\t}\n\n  /**\n   * Returns the name of the label on or immediately before the current position. For example, given a tween with\n   * two labels, \"first\" on frame index 4, and \"second\" on frame 8, currentLabel would return:\n   * <ul>\n   *   <li>null if the current position is 2.</li>\n   *   <li>\"first\" if the current position is 4.</li>\n   *   <li>\"first\" if the current position is 7.</li>\n   *   <li>\"second\" if the current position is 15.</li>\n   * </ul>\n   * @type {string}\n   * @readonly\n   */\n  get currentLabel () {\n    let labels = this.labels;\n    let pos = this.position;\n    for (let i = 0, l = labels.length; i < l; i++) { if (pos < labels[i].position) { break; } }\n    return (i === 0) ? null : labels[i-1].label;\n  }\n\n  /**\n   * Pauses or unpauses the tween. A paused tween is removed from the global registry and is eligible for garbage collection\n   * if no other references to it exist.\n   * @type {boolean}\n\t */\n\tget paused () {\n\t\treturn this._paused;\n\t}\n\n  set paused (paused) {\n    Tween._register(this, paused);\n\t\tthis._paused = paused;\n  }\n\n\t/**\n\t * Advances the tween by a specified amount.\n\t *\n\t * @param {number} delta The amount to advance in milliseconds (or ticks if useTicks is true). Negative values are supported.\n\t * @param {boolean} [ignoreActions=false] If true, actions will not be executed due to this change in position.\n\t */\n\tadvance (delta, ignoreActions = false) {\n\t\tthis.setPosition(this.rawPosition + delta * this.timeScale, ignoreActions);\n\t}\n\n\t/**\n\t * Advances the tween to a specified position.\n\t *\n\t * @emits tweenjs.AbstractTween#event:change\n\t * @emits tweenjs.AbstractTween#event:complete\n\t *\n\t * @param {number} rawPosition The raw position to seek to in milliseconds (or ticks if useTicks is true).\n\t * @param {boolean} [ignoreActions=false] If true, do not run any actions that would be triggered by this operation.\n\t * @param {boolean} [jump=false] If true, only actions at the new position will be run. If false, actions between the old and new position are run.\n\t * @param {Function} [callback] Primarily for use with MovieClip, this callback is called after properties are updated, but before actions are run.\n\t */\n\tsetPosition (rawPosition, ignoreActions = false, jump = false, callback) {\n\t\tconst d = this.duration, loopCount = this.loop, prevRawPos = this.rawPosition;\n    let loop = 0, t = 0, end = false;\n\n\t\t// normalize position:\n\t\tif (rawPosition < 0) { rawPosition = 0; }\n\n\t\tif (d === 0) {\n\t\t\t// deal with 0 length tweens.\n\t\t\tend = true;\n\t\t\tif (prevRawPos !== -1) { return end; } // we can avoid doing anything else if we're already at 0.\n\t\t} else {\n\t\t\tloop = rawPosition / d | 0;\n\t\t\tt = rawPosition - loop * d;\n\n\t\t\tend = (loopCount !== -1 && rawPosition >= loopCount * d + d);\n\t\t\tif (end) { rawPosition = (t = d) * (loop = loopCount) + d; }\n\t\t\tif (rawPosition === prevRawPos) { return end; } // no need to update\n\n\t\t\t// current loop is reversed\n\t\t\tif (!this.reversed !== !(this.bounce && loop % 2)) { t = d - t; }\n\t\t}\n\n\t\t// set this in advance in case an action modifies position:\n\t\tthis.position = t;\n\t\tthis.rawPosition = rawPosition;\n\n\t\tthis._updatePosition(jump, end);\n\t\tif (end) { this.paused = true; }\n\n\t\tcallback && callback(this);\n\n\t\tif (!ignoreActions) { this._runActions(prevRawPos, rawPosition, jump, !jump && prevRawPos === -1); }\n\n\t\tthis.dispatchEvent(\"change\");\n\t\tif (end) { this.dispatchEvent(\"complete\"); }\n\t}\n\n\t/**\n\t * Calculates a normalized position based on a raw position.\n\t *\n\t * @example\n\t * // given a tween with a duration of 3000ms set to loop:\n\t * console.log(myTween.calculatePosition(3700); // 700\n\t *\n\t * @param {number} rawPosition A raw position.\n\t */\n\tcalculatePosition (rawPosition) {\n\t\t// largely duplicated from setPosition, but necessary to avoid having to instantiate generic objects to pass values (end, loop, position) back.\n\t\tconst d = this.duration, loopCount = this.loop;\n    let loop = 0, t = 0;\n\n\t\tif (d === 0) { return 0; }\n\t\tif (loopCount !== -1 && rawPosition >= loopCount * d + d) {\n      t = d;\n      loop = loopCount\n    } else if (rawPosition < 0) {\n      t = 0;\n    } else {\n      loop = rawPosition / d | 0;\n      t = rawPosition - loop * d;\n    }\n\n\t\treturn (!this.reversed !== !(this.bounce && loop % 2)) ? d - t : t;\n\t}\n\n\t/**\n\t * Adds a label that can be used with {@link tweenjs.Timeline#gotoAndPlay}/{@link tweenjs.Timeline#gotoAndStop}.\n\t *\n\t * @param {string} label The label name.\n\t * @param {number} position The position this label represents.\n\t */\n\taddLabel (label, position) {\n\t\tif (!this._labels) { this._labels = {}; }\n\t\tthis._labels[label] = position;\n\t\tconst list = this._labelList;\n\t\tif (list) {\n\t\t\tfor (let i = 0, l = list.length; i < l; i++) { if (position < list[i].position) { break; } }\n\t\t\tlist.splice(i, 0, { label, position });\n\t\t}\n\t}\n\n\t/**\n\t * Unpauses this timeline and jumps to the specified position or label.\n\t *\n\t * @param {string|number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`)\n\t * or label to jump to.\n\t */\n\tgotoAndPlay (positionOrLabel) {\n\t\tthis.paused = false;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * Pauses this timeline and jumps to the specified position or label.\n\t *\n\t * @param {string|number} positionOrLabel The position in milliseconds (or ticks if `useTicks` is `true`) or label\n\t * to jump to.\n\t */\n\tgotoAndStop (positionOrLabel) {\n\t\tthis.paused = true;\n\t\tthis._goto(positionOrLabel);\n\t}\n\n\t/**\n\t * If a numeric position is passed, it is returned unchanged. If a string is passed, the position of the\n\t * corresponding frame label will be returned, or `null` if a matching label is not defined.\n\t *\n\t * @param {string|number} positionOrLabel A numeric position value or label string.\n\t */\n\tresolve (positionOrLabel) {\n\t\tconst pos = Number(positionOrLabel);\n    return isNaN(pos) ? this._labels && this._labels[positionOrLabel] : pos;\n\t}\n\n\t/**\n\t * Returns a string representation of this object.\n\t *\n\t * @return {string} a string representation of the instance.\n\t */\n\ttoString () {\n\t\treturn `[${this.constructor.name}${this.name ? ` (name=${this.name})` : \"\"}]`;\n\t}\n\n\t/**\n\t * @throws AbstractTween cannot be cloned.\n\t */\n\tclone () {\n\t\tthrow \"AbstractTween cannot be cloned.\";\n\t}\n\n\t/**\n\t * Shared logic that executes at the end of the subclass constructor.\n\t *\n\t * @private\n\t *\n\t * @param {Object} [props]\n\t */\n\t_init (props) {\n\t\tif (!props || !props.paused) { this.paused = false; }\n\t\tif (props && props.position != null) { this.setPosition(props.position); }\n\t}\n\n\t/**\n\t * @private\n\t * @param {string|number} positionOrLabel\n\t */\n\t_goto (positionOrLabel) {\n\t\tconst pos = this.resolve(positionOrLabel);\n\t\tif (pos != null) { this.setPosition(pos, false, true); }\n\t}\n\n\t/**\n   * Runs actions between startPos & endPos. Separated to support action deferral.\n   *\n\t * @private\n\t *\n\t * @param {number} startRawPos\n\t * @param {number} endRawPos\n\t * @param {boolean} jump\n\t * @param {boolean} includeStart\n\t */\n\t_runActions (startRawPos, endRawPos, jump, includeStart) {\n\t  // console.log(this.passive === false ? \" > Tween\" : \"Timeline\", \"run\", startRawPos, endRawPos, jump, includeStart);\n\t\t// if we don't have any actions, and we're not a Timeline, then return:\n\t\t// TODO: a cleaner way to handle this would be to override this method in Tween, but I'm not sure it's worth the overhead.\n\t\tif (!this._actionHead && !this.tweens) { return; }\n\n\t\tconst d = this.duration, loopCount = this.loop;\n    let reversed = this.reversed, bounce = this.bounce;\n\t\tlet loop0, loop1, t0, t1;\n\n\t\tif (d === 0) {\n\t\t\t// deal with 0 length tweens:\n\t\t\tloop0 = loop1 = t0 = t1 = 0;\n\t\t\treversed = bounce = false;\n\t\t} else {\n\t\t\tloop0 = startRawPos / d | 0;\n\t\t\tloop1 = endRawPos / d | 0;\n\t\t\tt0 = startRawPos - loop0 * d;\n\t\t\tt1 = endRawPos - loop1 * d;\n\t\t}\n\n\t\t// catch positions that are past the end:\n\t\tif (loopCount !== -1) {\n\t\t\tif (loop1 > loopCount) { t1 = d; loop1 = loopCount; }\n\t\t\tif (loop0 > loopCount) { t0 = d; loop0 = loopCount; }\n\t\t}\n\n\t\t// special cases:\n\t\tif (jump) { return this._runActionsRange(t1, t1, jump, includeStart); } // jump.\n    else if (loop0 === loop1 && t0 === t1 && !jump && !includeStart) { return; } // no actions if the position is identical and we aren't including the start\n\t\telse if (loop0 === -1) { loop0 = t0 = 0; } // correct the -1 value for first advance, important with useTicks.\n\n\t\tconst dir = (startRawPos <= endRawPos);\n    let loop = loop0;\n\t\tdo {\n\t\t\tlet rev = !reversed !== !(bounce && loop % 2);\n\t\t\tlet start = (loop === loop0) ? t0 : dir ? 0 : d;\n\t\t\tlet end = (loop === loop1) ? t1 : dir ? d : 0;\n\n\t\t\tif (rev) {\n\t\t\t\tstart = d - start;\n\t\t\t\tend = d - end;\n\t\t\t}\n\n\t\t\tif (bounce && loop !== loop0 && start === end) { /* bounced onto the same time/frame, don't re-execute end actions */ }\n\t\t\telse if (this._runActionsRange(start, end, jump, includeStart || (loop !== loop0 && !bounce))) { return true; }\n\n\t\t\tincludeStart = false;\n\t\t} while ((dir && ++loop <= loop1) || (!dir && --loop >= loop1));\n\t}\n\n  /**\n   * @private\n   * @abstract\n   * @throws Must be overridden by a subclass.\n\t */\n\t_runActionsRange (startPos, endPos, jump, includeStart) {\n\t\tthrow \"_runActionsRange is abstract and must be overridden by a subclass.\";\n\t}\n\n  /**\n\t * @private\n   * @abstract\n   * @throws Must be overridden by a subclass.\n\t */\n\t_updatePosition (jump, end) {\n    throw \"_updatePosition is abstract and must be overridden by a subclass.\";\n\t}\n\n}\n\n/**\n * Dispatched whenever the tween's position changes. It occurs after all tweened properties are updated and actions\n * are executed.\n * @event tweenjs.AbstractTween#change\n */\n/**\n * Dispatched when the tween reaches its end and has paused itself. This does not fire until all loops are complete;\n * tweens that loop continuously will never fire a complete event.\n * @event tweenjs.AbstractTween#complete\n */\n\nexport default AbstractTween;\n","/**\n * @license Ease\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * The Ease class provides a collection of easing functions for use with TweenJS. It does not use the standard 4 param\n * easing signature. Instead it uses a single param which indicates the current linear ratio (0 to 1) of the tween.\n *\n * Most methods on Ease can be passed directly as easing functions:\n *\n *      Tween.get(target).to({x:100}, 500, Ease.linear);\n *\n * However, methods beginning with \"get\" will return an easing function based on parameter values:\n *\n *      Tween.get(target).to({y:200}, 500, Ease.getPowIn(2.2));\n *\n * Please see the <a href=\"http://www.createjs.com/Demos/TweenJS/Tween_SparkTable\">spark table demo</a> for an\n * overview of the different ease types on <a href=\"http://tweenjs.com\">TweenJS.com</a>.\n *\n * <em>Equations derived from work by Robert Penner.</em>\n *\n * @memberof tweenjs\n * @module tweenjs/Ease\n */\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction linear (t) {\n\treturn t;\n}\n\n/**\n * Mimics the simple -100 to 100 easing in Flash Pro.\n * @param {number} amount A value from -1 (ease in) to 1 (ease out) indicating the strength and direction of the ease.\n * @return {Function}\n */\nfunction get (amount) {\n\tif (amount < -1) { amount = -1; } else if (amount > 1) { amount = 1; }\n\treturn function (t) {\n\t\tif (amount == 0) { return t; }\n\t\tif (amount < 0) { return t * (t * -amount + 1 + amount); }\n\t\treturn t * ((2 - t) * amount + (1 - amount));\n\t};\n}\n\n/**\n * Configurable exponential ease.\n * @param {number} pow The exponent to use (ex. 3 would return a cubic ease).\n * @return {Function}\n */\nfunction getPowIn (pow) {\n\treturn function (t) {\n\t\treturn Math.pow(t, pow);\n\t};\n}\n\n/**\n * Configurable exponential ease.\n * @param {number} pow The exponent to use (ex. 3 would return a cubic ease).\n * @return {Function}\n */\nfunction getPowOut (pow) {\n\treturn function (t) {\n\t\treturn 1 - Math.pow(1 - t, pow);\n\t};\n}\n\n/**\n * Configurable exponential ease.\n * @param {number} pow The exponent to use (ex. 3 would return a cubic ease).\n * @return {Function}\n */\nfunction getPowInOut (pow) {\n\treturn function (t) {\n\t\tif ((t *= 2) < 1) return 0.5 * Math.pow(t, pow);\n\t\treturn 1 - 0.5 * Math.abs(Math.pow(2 - t, pow));\n\t};\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction sineIn (t) {\n\treturn 1 - Math.cos(t * Math.PI / 2);\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction sineOut (t) {\n\treturn Math.sin(t * Math.PI / 2);\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction sineInOut (t) {\n\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n\n/**\n * Configurable \"back in\" ease.\n * @param {number} amount The strength of the ease.\n * @return {Function}\n */\nfunction getBackIn (amount) {\n\treturn function (t) {\n\t\treturn t * t * ((amount + 1) * t - amount);\n\t};\n}\n\n/**\n * Configurable \"back out\" ease.\n * @param {number} amount The strength of the ease.\n * @return {Function}\n */\nfunction getBackOut (amount) {\n\treturn function (t) {\n\t\treturn (--t * t * ((amount + 1) * t + amount) + 1);\n\t};\n}\n\n/**\n * Configurable \"back in out\" ease.\n * @param {number} amount The strength of the ease.\n * @return {Function}\n */\nfunction getBackInOut (amount) {\n\tamount *= 1.525;\n\treturn function (t) {\n\t\tif ((t *= 2) < 1) return 0.5 * (t * t * ((amount + 1) * t - amount));\n\t\treturn 0.5 * ((t -= 2) * t * ((amount + 1) * t + amount) + 2);\n\t};\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction circIn (t) {\n\treturn -(Math.sqrt(1 - t * t) - 1);\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction circOut (t) {\n\treturn Math.sqrt(1 - --t * t);\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction circInOut (t) {\n\tif ((t *= 2) < 1) return -0.5 * (Math.sqrt(1 - t * t) - 1);\n\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction bounceIn (t) {\n\treturn 1 - Ease.bounceOut(1 - t);\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction bounceOut (t) {\n\tif (t < 1 / 2.75) {\n\t\treturn 7.5625 * t * t;\n\t} else if (t < 2 / 2.75) {\n\t\treturn 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n\t} else if (t < 2.5 / 2.75) {\n\t\treturn 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n\t} else {\n\t\treturn 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n\t}\n}\n\n/**\n * @param {number} t\n * @return {number}\n */\nfunction bounceInOut (t) {\n\tif (t < 0.5) return Ease.bounceIn(t * 2) * 0.5;\n\treturn Ease.bounceOut(t * 2 - 1) * 0.5 + 0.5;\n}\n\n/**\n * Configurable elastic ease.\n * @param {number} amplitude\n * @param {number} period\n * @return {Function}\n */\nfunction getElasticIn (amplitude, period) {\n\tlet pi2 = Math.PI * 2;\n\treturn function (t) {\n\t\tif (t === 0 || t === 1) return t;\n\t\tlet s = period / pi2 * Math.asin(1 / amplitude);\n\t\treturn -(amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period));\n\t};\n}\n\n/**\n * Configurable elastic ease.\n * @param {number} amplitude\n * @param {number} period\n * @return {Function}\n */\nfunction getElasticOut (amplitude, period) {\n\tlet pi2 = Math.PI * 2;\n\treturn function (t) {\n\t\tif (t === 0 || t === 1) return t;\n\t\tlet s = period / pi2 * Math.asin(1 / amplitude);\n\t\treturn amplitude * Math.pow(2, -10 * t) * Math.sin((t - s) * pi2 / period) + 1;\n\t};\n}\n\n/**\n * Configurable elastic ease.\n * @param {number} amplitude\n * @param {number} period\n * @return {Function}\n */\nfunction getElasticInOut (amplitude, period) {\n\tlet pi2 = Math.PI * 2;\n\treturn function (t) {\n\t\tlet s = period / pi2 * Math.asin(1 / amplitude);\n\t\tif ((t *= 2) < 1) return -0.5 * (amplitude * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * pi2 / period));\n\t\treturn amplitude * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * pi2 / period) * 0.5 + 1;\n\t};\n}\n\n/**\n * Identical to linear.\n * @param {number} t\n * @return {number}\n */\nconst none = linear;\n/**\n * @param {number} t\n * @return {number}\n */\nconst quadIn = getPowIn(2);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quadOut = getPowOut(2);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quadInOut = getPowInOut(2);\n/**\n * @param {number} t\n * @return {number}\n */\nconst cubicIn = getPowIn(3);\n/**\n * @param {number} t\n * @return {number}\n */\nconst cubicOut = getPowOut(3);\n/**\n * @param {number} t\n * @return {number}\n */\nconst cubicInOut = getPowInOut(3);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quartIn = getPowIn(4);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quartOut = getPowOut(4);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quartInOut = getPowInOut(4);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quintIn = getPowIn(5);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quintOut = getPowOut(5);\n/**\n * @param {number} t\n * @return {number}\n */\nconst quintInOut = getPowInOut(5);\n/**\n * @param {number} t\n * @return {number}\n */\nconst backIn = getBackIn(1.7);\n/**\n * @param {number} t\n * @return {number}\n */\nconst backOut = getBackOut(1.7);\n/**\n * @param {number} t\n * @return {number}\n */\nconst backInOut = getBackInOut(1.7);\n/**\n * @param {number} t\n * @return {number}\n */\nconst elasticIn = getElasticIn(1, 0.3);\n/**\n * @param {number} t\n * @return {number}\n */\nconst elasticOut = getElasticOut(1, 0.3);\n/**\n * @param {number} t\n * @return {number}\n */\nconst elasticInOut = getElasticInOut(1, 0.3 * 1.5);\n\nexport {\n\tlinear,\n\tget,\n\tgetPowIn,\n\tgetPowOut,\n\tgetPowInOut,\n\tsineIn,\n\tsineOut,\n\tsineInOut,\n\tgetBackIn,\n\tgetBackOut,\n\tgetBackInOut,\n\tcircIn,\n\tcircOut,\n\tcircInOut,\n\tbounceIn,\n\tbounceOut,\n\tbounceInOut,\n\tgetElasticIn,\n\tgetElasticOut,\n\tgetElasticInOut,\n\n\tnone,\n\tquadIn,\n\tquadOut,\n\tquadInOut,\n\tcubicIn,\n\tcubicOut,\n\tcubicInOut,\n\tquartIn,\n\tquartOut,\n\tquartInOut,\n\tquintIn,\n\tquintOut,\n\tquintInOut,\n\tbackIn,\n\tbackOut,\n\tbackInOut,\n\telasticIn,\n\telasticOut,\n\telasticInOut\n};\n","/**\n * @license Ticker\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport Event from \"../events/Event\";\n\n/**\n * The Ticker provides a centralized tick or heartbeat broadcast at a set interval. Listeners can subscribe to the tick\n * event to be notified when a set time interval has elapsed.\n *\n * Note that the interval that the tick event is called is a target interval, and may be broadcast at a slower interval\n * when under high CPU load. The Ticker class uses a static interface (ex. `Ticker.framerate = 30;`) and\n * can not be instantiated.\n *\n * @todo Pass timingMode, maxDelta, paused values as instantiation arguments?\n *\n * @memberof core\n * @example\n * Ticker.addEventListener(\"tick\", event => {\n *   // Actions carried out each tick (aka frame)\n *   if (!event.paused) {\n *     // Actions carried out when the Ticker is not paused.\n *   }\n * });\n * @example\n * // Ticker export explanation\n * import Ticker, { Ticker as TickerClass, getTicker } from \"@createjs/core\";\n * Ticker.name, Ticker.RAF // -> createjs.global, undefined\n * TickerClass.RAF // -> raf\n * Ticker === getTicker(\"createjs.global\") // -> true\n *\n * @extends core.EventDispatcher\n * @param {string} name The name assigned to this instance.\n */\nclass Ticker extends EventDispatcher {\n\n\t/**\n\t * In this mode, Ticker uses the requestAnimationFrame API, but attempts to synch the ticks to target framerate. It\n\t * uses a simple heuristic that compares the time of the RAF return to the target time for the current frame and\n\t * dispatches the tick when the time is within a certain threshold.\n\t *\n\t * This mode has a higher variance for time between frames than {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}},\n\t * but does not require that content be time based as with {{#crossLink \"Ticker/RAF:property\"}}{{/crossLink}} while\n\t * gaining the benefits of that API (screen synch, background throttling).\n\t *\n\t * Variance is usually lowest for framerates that are a divisor of the RAF frequency. This is usually 60, so\n\t * framerates of 10, 12, 15, 20, and 30 work well.\n\t *\n\t * Falls back to {{#crossLink \"Ticker/TIMEOUT:property\"}}{{/crossLink}} if the requestAnimationFrame API is not\n\t * supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"synched\"\n\t * @readonly\n\t */\n\tstatic get RAF_SYNCHED () { return \"synched\"; }\n\n\t/**\n\t * In this mode, Ticker passes through the requestAnimationFrame heartbeat, ignoring the target framerate completely.\n\t * Because requestAnimationFrame frequency is not deterministic, any content using this mode should be time based.\n\t * You can leverage {@link core.Ticker#getTime} and the {@link core.Ticker#event:tick}\n\t * event object's \"delta\" properties to make this easier.\n\t *\n\t * Falls back on {@link core.Ticker.TIMEOUT} if the requestAnimationFrame API is not supported.\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"raf\"\n\t * @readonly\n\t */\n\tstatic get RAF () { return \"raf\"; }\n\n\t/**\n\t * In this mode, Ticker uses the setTimeout API. This provides predictable, adaptive frame timing, but does not\n\t * provide the benefits of requestAnimationFrame (screen synch, background throttling).\n\t *\n\t * @static\n\t * @type {string}\n\t * @default \"timeout\"\n\t * @readonly\n\t */\n\tstatic get TIMEOUT () { return \"timeout\"; }\n\n\tconstructor (name) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The name of this instance.\n\t\t * @type {string}\n\t\t */\n\t\tthis.name = name;\n\n\t\t/**\n\t\t * Specifies the timing api (setTimeout or requestAnimationFrame) and mode to use.\n\t\t *\n\t\t * @see {@link core.Ticker.TIMEOUT}\n\t\t * @see {@link core.Ticker.RAF}\n\t\t * @see {@link core.Ticker.RAF_SYNCHED}\n\t\t *\n\t\t * @type {string}\n\t\t * @default Ticker.TIMEOUT\n\t\t */\n\t\tthis.timingMode = Ticker.TIMEOUT;\n\n\t\t/**\n\t\t * Specifies a maximum value for the delta property in the tick event object. This is useful when building time\n\t\t * based animations and systems to prevent issues caused by large time gaps caused by background tabs, system sleep,\n\t\t * alert dialogs, or other blocking routines. Double the expected frame duration is often an effective value\n\t\t * (ex. maxDelta=50 when running at 40fps).\n\t\t *\n\t\t * This does not impact any other values (ex. time, runTime, etc), so you may experience issues if you enable maxDelta\n\t\t * when using both delta and other values.\n\t\t *\n\t\t * If 0, there is no maximum.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.maxDelta = 0;\n\n\t\t/**\n\t\t * When the ticker is paused, all listeners will still receive a tick event, but the `paused` property\n\t\t * of the event will be `true`. Also, while paused the `runTime` will not increase.\n\t\t *\n\t\t * @example\n\t\t * Ticker.addEventListener(\"tick\", event => console.log(event.paused, Ticker.getTime(false), Ticker.getTime(true)));\n\t\t * Ticker.paused = true;\n\t\t *\n\t\t * @see {@link core.Ticker#event:tick}\n\t\t * @see {@link core.Ticker#getTime}\n\t\t * @see {@link core.Ticker#getEventTime}\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.paused = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis._inited = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._startTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._pausedTime = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._ticks = 0;\n\n\t\t/**\n\t\t * The number of ticks that have passed while Ticker has been paused.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._pausedTicks = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._interval = 50;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default\n\t\t */\n\t\tthis._lastTime = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._times = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {Array}\n\t\t * @default null\n\t\t */\n\t\tthis._tickTimes = null;\n\n\t\t/**\n\t\t * Stores the timeout or requestAnimationFrame id.\n\t\t *\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default null\n\t\t */\n\t\tthis._timerId = null;\n\n\t\t/**\n\t\t * True if currently using requestAnimationFrame, false if using setTimeout. This may be different than timingMode\n\t\t * if that property changed and a tick hasn't fired.\n\t\t *\n\t\t * @private\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis._raf = true;\n\t}\n\n\t/**\n\t * Indicates the target time (in milliseconds) between ticks. Default is 50 (20 FPS).\n\t * Note that actual time between ticks may be more than specified depending on CPU load.\n\t * This property is ignored if the ticker is using the `RAF` timing mode.\n\t *\n\t * @type {number}\n\t */\n\tget interval () { return this._interval; }\n\tset interval (interval) {\n\t\tthis._interval = interval;\n\t\tif (!this._inited) { return; }\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Indicates the target frame rate in frames per second (FPS). Effectively just a shortcut to `interval`, where\n\t * `framerate == 1000/interval`.\n\t *\n\t * @type {number}\n\t */\n\tget framerate () { return 1000 / this._interval; }\n\tset framerate (framerate) { this.interval = 1000 / framerate; }\n\n\t/**\n\t * Starts the tick. This is called automatically when the first listener is added.\n\t */\n\tinit () {\n\t\tif (this._inited) { return; }\n\t\tthis._inited = true;\n\t\tthis._times = [];\n\t\tthis._tickTimes = [];\n\t\tthis._startTime = this._getTime();\n\t\tthis._times.push(this._lastTime = 0);\n\t\tthis._setupTick();\n\t}\n\n\t/**\n\t * Stops the Ticker and removes all listeners. Use init() to restart the Ticker.\n\t */\n\treset () {\n\t\tif (this._raf) {\n\t\t\tlet f = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCancelAnimationFrame;\n\t\t\tf && f(this._timerId);\n\t\t} else {\n\t\t\tclearTimeout(this._timerId);\n\t\t}\n\t\tthis.removeAllEventListeners(\"tick\");\n\t\tthis._timerId = this._times = this._tickTimes = null;\n\t\tthis._startTime = this._lastTime = this._ticks = 0;\n\t\tthis._inited = false;\n\t}\n\n\t/**\n\t * Init the Ticker instance if it hasn't been already.\n\t */\n\taddEventListener (type, listener, useCapture) {\n\t\t!this._inited && this.init();\n\t\treturn super.addEventListener(type, listener, useCapture);\n\t}\n\n\t/**\n\t * Returns the average time spent within a tick. This can vary significantly from the value provided by getMeasuredFPS\n\t * because it only measures the time spent within the tick execution stack.\n\t *\n\t * Example 1: With a target FPS of 20, getMeasuredFPS() returns 20fps, which indicates an average of 50ms between\n\t * the end of one tick and the end of the next. However, getMeasuredTickTime() returns 15ms. This indicates that\n\t * there may be up to 35ms of \"idle\" time between the end of one tick and the start of the next.\n\t *\n\t * Example 2: With a target FPS of 30, getFPS() returns 10fps, which indicates an average of 100ms between the end of\n\t * one tick and the end of the next. However, getMeasuredTickTime() returns 20ms. This would indicate that something\n\t * other than the tick is using ~80ms (another script, DOM rendering, etc).\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the average time spent in a tick.\n\t * Defaults to the number of ticks per second. To get only the last tick's time, pass in 1.\n\t * @return {number} The average time spent in a tick in milliseconds.\n\t */\n\tgetMeasuredTickTime (ticks = null) {\n\t\tconst times = this._tickTimes;\n\t\tif (!times || times.length < 1) { return -1; }\n\t\t// by default, calculate average for the past ~1 second:\n\t\tticks = Math.min(times.length, ticks || (this.framerate | 0));\n\t\treturn times.reduce((a, b) => a + b, 0) / ticks;\n\t}\n\n\t/**\n\t * Returns the actual frames / ticks per second.\n\t *\n\t * @param {number} [ticks=null] The number of previous ticks over which to measure the actual frames / ticks per second.\n\t * Defaults to the number of ticks per second.\n\t * @return {number} The actual frames / ticks per second. Depending on performance, this may differ\n\t * from the target frames per second.\n\t */\n\tgetMeasuredFPS (ticks = null) {\n\t\tconst times = this._times;\n\t\tif (!times || times.length < 2) { return -1; }\n\t\t// by default, calculate fps for the past ~1 second:\n\t\tticks = Math.min(times.length - 1, ticks || (this.framerate | 0));\n\t\treturn 1000 / ((times[0] - times[ticks]) / ticks);\n\t}\n\n\t/**\n\t * Returns the number of milliseconds that have elapsed since Ticker was initialized via {@link core.Ticker#init}.\n\t * Returns -1 if Ticker has not been initialized. For example, you could use\n\t * this in a time synchronized animation to determine the exact amount of time that has elapsed.\n\t *\n\t * @param {boolean} [runTime=false] If true only time elapsed while Ticker was not paused will be returned.\n\t * If false, the value returned will be total time elapsed since the first tick event listener was added.\n\t * @return {number} Number of milliseconds that have elapsed since Ticker was initialized or -1.\n\t */\n\tgetTime (runTime = false) {\n\t\treturn this._startTime ? this._getTime() - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Similar to {@link core.Ticker#getTime}, but returns the time on the most recent {@link core.Ticker#event:tick}\n\t * event object.\n\t *\n\t * @param {boolean} [runTime=false] If true, the runTime property will be returned instead of time.\n\t * @returns {number} The time or runTime property from the most recent tick event or -1.\n\t */\n\tgetEventTime (runTime = false) {\n\t\treturn this._startTime ? (this._lastTime || this._startTime) - (runTime ? this._pausedTime : 0) : -1;\n\t}\n\n\t/**\n\t * Returns the number of ticks that have been broadcast by Ticker.\n\t *\n\t * @param {boolean} [pauseable=false] Indicates whether to include ticks that would have been broadcast\n\t * while Ticker was paused. If true only tick events broadcast while Ticker is not paused will be returned.\n\t * If false, tick events that would have been broadcast while Ticker was paused will be included in the return\n\t * value.\n\t * @return {number} of ticks that have been broadcast.\n\t */\n\tgetTicks (pauseable = false) {\n\t\treturn this._ticks - (pauseable ? this._pausedTicks : 0);\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleSynch () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\n\t\t// run if enough time has elapsed, with a little bit of flexibility to be early:\n\t\tif (this._getTime() - this._lastTime >= (this._interval - 1) * 0.97) {\n\t\t\tthis._tick();\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleRAF () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_handleTimeout () {\n\t\tthis._timerId = null;\n\t\tthis._setupTick();\n\t\tthis._tick();\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_setupTick () {\n\t\tif (this._timerId != null) { return; } // avoid duplicates\n\t\tconst mode = this.timingMode || (this._raf && Ticker.RAF);\n\t\tif (mode === Ticker.RAF_SYNCHED || mode === Ticker.RAF) {\n\t\t\tconst f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame;\n\t\t\tif (f) {\n\t\t\t\tthis._timerId = f(mode === Ticker.RAF ? this._handleRAF.bind(this) : this._handleSynch.bind(this));\n\t\t\t\tthis._raf = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis._raf = false;\n\t\tthis._timerId = setTimeout(this._handleTimeout.bind(this), this._interval);\n\t}\n\n\t/**\n\t * @private\n\t * @emits core.Ticker#event:tick\n\t */\n\t_tick () {\n\t\tconst paused = this.paused, time = this._getTime(), elapsedTime = time - this._lastTime;\n\t\tthis._lastTime = time;\n\t\tthis._ticks++;\n\n\t\tif (paused) {\n\t\t\tthis._pausedTicks++;\n\t\t\tthis._pausedTime += elapsedTime;\n\t\t}\n\n\t\tif (this.hasEventListener(\"tick\")) {\n\t\t\tconst event = new Event(\"tick\");\n\t\t\tconst maxDelta = this.maxDelta;\n\t\t\tevent.delta = (maxDelta && elapsedTime > maxDelta) ? maxDelta : elapsedTime;\n\t\t\tevent.paused = paused;\n\t\t\tevent.time = time;\n\t\t\tevent.runTime = time - this._pausedTime;\n\t\t\tthis.dispatchEvent(event);\n\t\t}\n\n\t\tthis._tickTimes.unshift(this._getTime() - time);\n\t\twhile (this._tickTimes.length > 100) { this._tickTimes.pop(); }\n\n\t\tthis._times.unshift(time);\n\t\twhile (this._times.length > 100) { this._times.pop(); }\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_getTime () {\n\t\tconst now = window.performance && window.performance.now;\n\t\treturn ((now && now.call(performance)) || (new Date().getTime())) - this._startTime;\n\t}\n\n\tstatic on (type, listener, scope, once, data, useCapture) { return _instance.on(type, listener, scope, once, data, useCapture); }\n\tstatic removeEventListener (type, listener, useCapture) { _instance.removeEventListener(type, listener, useCapture); }\n\tstatic off (type, listener, useCapture) { _instance.off(type, listener, useCapture); }\n\tstatic removeAllEventListeners (type) { _instance.removeAllEventListeners(type); }\n\tstatic dispatchEvent (eventObj, bubbles, cancelable) { return _instance.dispatchEvent(eventObj, bubbles, cancelable); }\n\tstatic hasEventListener (type) { return _instance.hasEventListener(type); }\n\tstatic willTrigger (type) { return _instance.willTrigger(type); }\n\tstatic toString () { return _instance.toString(); }\n\tstatic _dispatchEvent (eventObj, eventPhase) {}\n\tstatic get interval () { return _instance.interval; }\n\tstatic set interval (interval) { _instance.interval = interval; }\n\tstatic get framerate () { return _instance.framerate; }\n\tstatic set framerate (framerate) { _instance.framerate = framerate; }\n\tstatic init () { _instance.init(); }\n\tstatic reset () { _instance.reset(); }\n\tstatic addEventListener (type, listener, useCapture) { _instance.addEventListener(type, listener, useCapture); }\n\tstatic getMeasuredTickTime (ticks) { return _instance.getMeasuredTickTime(ticks); }\n\tstatic getMeasuredFPS (ticks) { return _instance.getMeasuredFPS(ticks); }\n\tstatic getTime (runTime) { return _instance.getTime(runTime); }\n\tstatic getEventTime (runTime) { return _instance.getEventTime(runTime); }\n\tstatic getTicks (pauseable) { return _instance.getTicks(pauseable); }\n\tstatic _handleSynch () { _instance._handleSynch(); }\n\tstatic _handleRAF () { _instance._handleRAF(); }\n\tstatic _handleTimeout () { _instance._handleTimeout(); }\n\tstatic _setupTick () { _instance._setupTick(); }\n\tstatic _tick () { _instance._tick(); }\n\tstatic _getTime () { return _instance._getTime(); }\n\n}\n\n/**\n * Dispatched each tick. The event will be dispatched to each listener even when the Ticker has been paused.\n *\n * @example\n * Ticker.addEventListener(\"tick\", event => console.log(\"Paused:\", event.paused, event.delta));\n *\n * @event core.Ticker#tick\n * @type {Object}\n * @property {Object} target The object that dispatched the event.\n * @property {string} type The event type.\n * @property {boolean} paused Indicates whether the ticker is currently paused.\n * @property {number} delta The time elapsed in ms since the last tick.\n * @property {number} time The total time in ms since Ticker was initialized.\n * @property {number} runTime The total time in ms that Ticker was not paused since it was initialized. For example,\n * you could determine the amount of time that the Ticker has been paused since initialization with `time-runTime`.\n * @since 0.6.0\n */\n\nexport default Ticker;\n\n// the default Ticker instance\nconst _instance = new Ticker(\"createjs.global\");\n","/**\n * @license Tween\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AbstractTween from \"./AbstractTween\";\nimport { linear } from \"./Ease\";\nimport Ticker from \"@createjs/core/src/utils/Ticker\";\n\n/**\n * Tweens properties for a single target. Methods can be chained to create complex animation sequences:\n *\n * @example\n * Tween.get(target)\n *   .wait(500)\n *   .to({ alpha: 0, visible: false }, 1000)\n *   .call(handleComplete);\n *\n * Multiple tweens can share a target, however if they affect the same properties there could be unexpected\n * behaviour. To stop all tweens on an object, use {@link tweenjs.Tween#removeTweens} or pass `override:true`\n * in the props argument.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100});\n *\n * Subscribe to the {@link tweenjs.Tween#event:change} event to be notified when the tween position changes.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n * \tfunction handleChange(event) {\n * \t\t// The tween changed.\n * \t}\n *\n * @see tweenjs.Tween.get\n *\n * @memberof tweenjs\n * @extends AbstractTween\n *\n * @param {Object} target The target object that will have its properties tweened.\n * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n * @param {boolean} [props.useTicks]\n * @param {boolean} [props.ignoreGlobalPause]\n * @param {number|boolean} [props.loop]\n * @param {boolean} [props.reversed]\n * @param {boolean} [props.bounce]\n * @param {number} [props.timeScale]\n * @param {Object} [props.pluginData]\n * @param {boolean} [props.paused]\n * @param {*} [props.position] indicates the initial position for this tween\n * @param {*} [props.onChange] adds the specified function as a listener to the `change` event\n * @param {*} [props.onComplete] adds the specified function as a listener to the `complete` event\n * @param {*} [props.override] if true, removes all existing tweens for the target\n */\nclass Tween extends AbstractTween {\n\n\tconstructor (target, props) {\n\t\tsuper(props);\n\n\t\t/**\n\t\t * Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\n\t\t * you specify data by assigning it to a property of `pluginData` with the same name as the plugin.\n\t\t * Note that in many cases, this data is used as soon as the plugin initializes itself for the tween.\n\t\t * As such, this data should be set before the first `to` call in most cases.\n\t\t *\n\t\t * Some plugins also store working data in this object, usually in a property named `_PluginClassName`.\n\t\t * See the documentation for individual plugins for more details.\n\t\t *\n\t\t * @example\n\t\t * myTween.pluginData.SmartRotation = data;\n\t\t * myTween.pluginData.SmartRotation_disabled = true;\n\t\t *\n\t\t *\n\t\t * @default null\n\t\t * @type {Object}\n\t\t */\n\t\tthis.pluginData = null;\n\n\t\t/**\n\t\t * The target of this tween. This is the object on which the tweened properties will be changed.\n\t\t * @type {Object}\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * Indicates the tween's current position is within a passive wait.\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.passive = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenStep}\n\t\t */\n\t\tthis._stepHead = new TweenStep(null, 0, 0, {}, null, true);\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenStep}\n\t\t */\n\t\tthis._stepTail = this._stepHead;\n\n\t\t/**\n\t\t * The position within the current step. Used by MovieClip.\n\t\t * @private\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis._stepPosition = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenAction}\n\t\t * @default null\n\t\t */\n\t\tthis._actionHead = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenAction}\n\t\t * @default null\n\t\t */\n\t\tthis._actionTail = null;\n\n\t\t/**\n\t\t * Plugins added to this tween instance.\n\t\t * @private\n\t\t * @type {Object[]}\n\t\t * @default null\n\t\t */\n\t\tthis._plugins = null;\n\n\t\t/**\n\t\t * Hash for quickly looking up added plugins. Null until a plugin is added.\n\t\t * @private\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._pluginIds = null;\n\n\n\t\t/**\n\t\t * Used by plugins to inject new properties.\n\t\t * @private\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._injected = null;\n\n\t\tif (props) {\n\t\t\tthis.pluginData = props.pluginData;\n\t\t\tif (props.override) { Tween.removeTweens(target); }\n\t\t}\n\t\tif (!this.pluginData) { this.pluginData = {}; }\n\n\t\tthis._init(props);\n\t}\n\n\t/**\n\t * Returns a new tween instance. This is functionally identical to using `new Tween(...)`, but may look cleaner\n\t * with the chained syntax of TweenJS.\n\t *\n\t * @static\n\t * @example\n\t * let tween = Tween.get(target).to({ x: 100 }, 500);\n\t * // equivalent to:\n\t * let tween = new Tween(target).to({ x: 100 }, 500);\n\t *\n\t * @param {Object} target The target object that will have its properties tweened.\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n\t * @param {boolean} [props.useTicks]\n\t * @param {boolean} [props.ignoreGlobalPause]\n\t * @param {number|boolean} [props.loop]\n\t * @param {boolean} [props.reversed]\n\t * @param {boolean} [props.bounce]\n\t * @param {number} [props.timeScale]\n\t * @param {Object} [props.pluginData]\n\t * @param {boolean} [props.paused]\n\t * @param {*} [props.position] indicates the initial position for this tween\n\t * @param {*} [props.onChange] adds the specified function as a listener to the `change` event\n\t * @param {*} [props.onComplete] adds the specified function as a listener to the `complete` event\n\t * @param {*} [props.override] if true, removes all existing tweens for the target\n\t * @return {Tween} A reference to the created tween.\n\t */\n\tstatic get (target, props) {\n\t\treturn new Tween(target, props);\n\t}\n\n\t/**\n\t * Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\n\t * manually if you prefer to use your own \"heartbeat\" implementation.\n\t *\n\t * @static\n\t *\n\t * @param {number} delta The change in time in milliseconds since the last tick. Required unless all tweens have\n\t * `useTicks` set to true.\n\t * @param {boolean} paused Indicates whether a global pause is in effect. Tweens with {@link tweenjs.Tween#ignoreGlobalPause}\n\t * will ignore this, but all others will pause if this is `true`.\n\t */\n\tstatic tick (delta, paused) {\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next; // in case it completes and wipes its _next property\n\t\t\tif ((paused && !tween.ignoreGlobalPause) || tween._paused) { /* paused */ }\n\t\t\telse { tween.advance(tween.useTicks ? 1: delta); }\n\t\t\ttween = next;\n\t\t}\n\t}\n\n\t/**\n\t * Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n\t * {@link tweenjs.Ticker#event:tick} events from the {@link tweenjs.Ticker}.\n\t * No other events are handled in Tween.\n\t *\n\t * @static\n\t * @since 0.4.2\n\t *\n\t * @param {Object} event An event object passed in by the {@link core.EventDispatcher}. Will\n\t * usually be of type \"tick\".\n\t */\n\tstatic handleEvent (event) {\n\t\tif (event.type === \"tick\") {\n\t\t\tthis.tick(event.delta, event.paused);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\n\t * property is `true`.\n\t *\n\t * @static\n\t *\n\t * @param {Object} target The target object to remove existing tweens from.=\n\t */\n\tstatic removeTweens (target) {\n\t\tif (!target.tweenjs_count) { return; }\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next;\n\t\t\tif (tween.target === target) { tween.paused = true; }\n\t\t\ttween = next;\n\t\t}\n\t\ttarget.tweenjs_count = 0;\n\t}\n\n\t/**\n\t * Stop and remove all existing tweens.\n\t *\n\t * @static\n\t * @since 0.4.1\n\t */\n\tstatic removeAllTweens () {\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next;\n\t\t\ttween._paused = true;\n\t\t\ttween.target && (tween.target.tweenjs_count = 0);\n\t\t\ttween._next = tween._prev = null;\n\t\t\ttween = next;\n\t\t}\n\t\tTween._tweenHead = Tween._tweenTail = null;\n\t}\n\n\t/**\n\t * Indicates whether there are any active tweens on the target object (if specified) or in general.\n\t *\n\t * @static\n\t *\n\t * @param {Object} [target] The target to check for active tweens. If not specified, the return value will indicate\n\t * if there are any active tweens on any target.\n\t * @return {boolean} Indicates if there are active tweens.\n\t */\n\tstatic hasActiveTweens (target) {\n\t\tif (target) { return !!target.tweenjs_count; }\n\t\treturn !!Tween._tweenHead;\n\t}\n\n\t/**\n\t * Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}\n\t * for an example of how to write TweenJS plugins. Plugins should generally be installed via their own `install` method, in order to provide\n\t * the plugin with an opportunity to configure itself.\n\t *\n\t * @static\n\t *\n\t * @param {Object} plugin The plugin to install\n\t * @param {Object} props The props to pass to the plugin\n\t */\n\tstatic installPlugin (plugin, props) {\n\t\tplugin.install(props);\n\t\tconst priority = (plugin.priority = plugin.priority || 0), arr = (Tween._plugins = Tween._plugins || []);\n\t\tfor (let i = 0, l = arr.length; i < l; i++) {\n\t\t\tif (priority < arr[i].priority) { break; }\n\t\t}\n\t\tarr.splice(i, 0, plugin);\n\t}\n\n\t/**\n\t * Registers or unregisters a tween with the ticking system.\n\t *\n\t * @private\n\t * @static\n\t *\n\t * @param {Tween} tween The tween instance to register or unregister.\n\t * @param {boolean} paused If `false`, the tween is registered. If `true` the tween is unregistered.\n\t */\n\tstatic _register (tween, paused) {\n\t\tconst target = tween.target;\n\t\tif (!paused && tween._paused) {\n\t\t\t// TODO: this approach might fail if a dev is using sealed objects\n\t\t\tif (target) { target.tweenjs_count = target.tweenjs_count ? target.tweenjs_count + 1 : 1; }\n\t\t\tlet tail = Tween._tweenTail;\n\t\t\tif (!tail) { Tween._tweenHead = Tween._tweenTail = tween; }\n\t\t\telse {\n\t\t\t\tTween._tweenTail = tail._next = tween;\n\t\t\t\ttween._prev = tail;\n\t\t\t}\n\t\t\tif (!Tween._inited) { Ticker.addEventListener(\"tick\", Tween); Tween._inited = true; }\n\t\t} else if (paused && !tween._paused) {\n\t\t\tif (target) { target.tweenjs_count--; }\n\t\t\tlet next = tween._next, prev = tween._prev;\n\n\t\t\tif (next) { next._prev = prev; }\n\t\t\telse { Tween._tweenTail = prev; } // was tail\n\t\t\tif (prev) { prev._next = next; }\n\t\t\telse { Tween._tweenHead = next; } // was head.\n\n\t\t\ttween._next = tween._prev = null;\n\t\t}\n\t}\n\n\t/**\n\t * Adds a wait (essentially an empty tween).\n\t *\n\t * @example\n\t * // This tween will wait 1s before alpha is faded to 0.\n\t * Tween.get(target)\n\t *   .wait(1000)\n\t *   .to({ alpha: 0 }, 1000);\n\t *\n\t * @param {number} duration The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {boolean} [passive=false] Tween properties will not be updated during a passive wait. This\n\t * is mostly useful for use with {@link tweenjs.Timeline} instances that contain multiple tweens\n\t * affecting the same target at different times.\n\t * @chainable\n\t */\n\twait (duration, passive = false) {\n\t\tif (duration > 0) { this._addStep(+duration, this._stepTail.props, null, passive); }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a tween from the current values to the specified properties. Set duration to 0 to jump to these value.\n\t * Numeric properties will be tweened from their current value in the tween to the target value. Non-numeric\n\t * properties will be set at the end of the specified duration.\n\t *\n\t * @example\n\t * Tween.get(target)\n\t *   .to({ alpha: 0, visible: false }, 1000);\n\t *\n\t * @param {Object} props An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\n\t * property of the target to 300).\n\t * @param {number} [duration=0] The duration of the tween in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {Function} [ease=Ease.linear] The easing function to use for this tween. See the {@link tweenjs.Ease}\n\t * class for a list of built-in ease functions.\n\t * @chainable\n\t */\n\tto (props, duration = 0, ease = linear) {\n\t\tif (duration < 0) { duration = 0; }\n\t\tconst step = this._addStep(+duration, null, ease);\n\t\tthis._appendProps(props, step);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a label that can be used with {@link tweenjs.Tween#gotoAndPlay}/{@link tweenjs.Tween#gotoAndStop}\n\t * at the current point in the tween.\n\t *\n\t * @example\n\t * let tween = Tween.get(foo)\n\t *   .to({ x: 100 }, 1000)\n\t *   .label(\"myLabel\")\n\t *   .to({ x: 200 }, 1000);\n\t * // ...\n\t * tween.gotoAndPlay(\"myLabel\"); // would play from 1000ms in.\n\t *\n\t * @param {string} label The label name.\n\t * @chainable\n\t */\n\tlabel (name) {\n\t\tthis.addLabel(name, this.duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an action to call the specified function.\n\t *\n\t * @example\n\t * // would call myFunction() after 1 second.\n\t * Tween.get()\n\t *   .wait(1000)\n\t *   .call(myFunction);\n\t *\n\t * @param {Function} callback The function to call.\n\t * @param {Array} [params]. The parameters to call the function with. If this is omitted, then the function\n\t * will be called with a single param pointing to this tween.\n\t * @param {Object} [scope]. The scope to call the function in. If omitted, it will be called in the target's scope.\n\t * @chainable\n\t */\n\tcall (callback, params, scope) {\n\t\treturn this._addAction(scope || this.target, callback, params || [this]);\n\t}\n\n\t/**\n\t * Adds an action to set the specified props on the specified target. If `target` is null, it will use this tween's\n\t * target. Note that for properties on the target object, you should consider using a zero duration {@link tweenjs.Tween#to}\n\t * operation instead so the values are registered as tweened props.\n\t *\n\t * @example\n\t * tween.wait(1000)\n\t *   .set({ visible: false }, foo);\n\t *\n\t * @param {Object} props The properties to set (ex. `{ visible: false }`).\n\t * @param {Object} [target] The target to set the properties on. If omitted, they will be set on the tween's target.\n\t * @chainable\n\t */\n\tset (props, target) {\n\t\treturn this._addAction(target || this.target, this._set, [ props ]);\n\t}\n\n\t/**\n\t * Adds an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n\t *\n\t * @example\n\t * tween.to({ x: 100 }, 500)\n\t *   .play(otherTween);\n\t *\n\t * @param {Tween} [tween] The tween to play. Defaults to this tween.\n\t * @chainable\n\t */\n\tplay (tween) {\n    return this._addAction(tween || this, this._set, [{ paused: false }]);\n\t}\n\n\t/**\n\t * Adds an action to pause the specified tween.\n\t * At 60fps the tween will advance by ~16ms per tick, if the tween above was at 999ms prior to the current tick, it\n   * will advance to 1015ms (15ms into the second \"step\") and then pause.\n\t *\n\t * @example\n\t * tween.pause(otherTween)\n\t *   .to({ alpha: 1 }, 1000)\n\t *   .play(otherTween);\n\t *\n\t * // Note that this executes at the end of a tween update,\n\t * // so the tween may advance beyond the time the pause action was inserted at.\n   *\n   * tween.to({ foo: 0 }, 1000)\n   *   .pause()\n   *   .to({ foo: 1 }, 1000);\n\t *\n\t * @param {Tween} [tween] The tween to pause. Defaults to this tween.\n\t * @chainable\n\t */\n\tpause (tween) {\n\t\treturn this._addAction(tween || this, this._set, [{ paused: false }]);\n\t}\n\n\t/**\n\t * @throws Tween cannot be cloned.\n\t */\n\tclone () {\n\t\tthrow \"Tween can not be cloned.\";\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} plugin\n\t */\n\t_addPlugin (plugin) {\n\t\tlet ids = this._pluginIds || (this._pluginIds = {}), id = plugin.id;\n\t\tif (!id || ids[id]) { return; } // already added\n\n\t\tids[id] = true;\n\t\tlet plugins = this._plugins || (this._plugins = []), priority = plugin.priority || 0;\n\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\tif (priority < plugins[i].priority) {\n\t\t\t\tplugins.splice(i, 0, plugin);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tplugins.push(plugin);\n\t}\n\n\t/**\n\t * @private\n\t * @param {} jump\n\t * @param {boolean} end\n   */\n\t_updatePosition (jump, end) {\n\t\tlet step = this._stepHead.next, t = this.position, d = this.duration;\n\t\tif (this.target && step) {\n\t\t\t// find our new step index:\n\t\t\tlet stepNext = step.next;\n\t\t\twhile (stepNext && stepNext.t <= t) { step = step.next; stepNext = step.next; }\n\t\t\tlet ratio = end ? d === 0 ? 1 : t/d : (t-step.t)/step.d; // TODO: revisit this.\n\t\t\tthis._updateTargetProps(step, ratio, end);\n\t\t}\n\t\tthis._stepPosition = step ? t - step.t : 0;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} step\n\t * @param {Number} ratio\n\t * @param {boolean} end Indicates to plugins that the full tween has ended.\n\t */\n\t_updateTargetProps (step, ratio, end) {\n\t\tif (this.passive = !!step.passive) { return; } // don't update props.\n\n\t\tlet v, v0, v1, ease;\n\t\tlet p0 = step.prev.props;\n\t\tlet p1 = step.props;\n\t\tif (ease = step.ease) { ratio = ease(ratio, 0, 1, 1); }\n\n\t\tlet plugins = this._plugins;\n\t\tproploop : for (let n in p0) {\n\t\t\tv0 = p0[n];\n\t\t\tv1 = p1[n];\n\n\t\t\t// values are different & it is numeric then interpolate:\n\t\t\tif (v0 !== v1 && (typeof(v0) === \"number\")) {\n\t\t\t\tv = v0 + (v1 - v0) * ratio;\n\t\t\t} else {\n\t\t\t\tv = ratio >= 1 ? v1 : v0;\n\t\t\t}\n\n\t\t\tif (plugins) {\n\t\t\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\t\t\tlet value = plugins[i].change(this, step, n, v, ratio, end);\n\t\t\t\t\tif (value === Tween.IGNORE) { continue proploop; }\n\t\t\t\t\tif (value !== undefined) { v = value; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.target[n] = v;\n\t\t}\n\n\t}\n\n\t/**\n\t * @private\n\t * @param {number} startPos\n\t * @param {number} endPos\n\t * @param {boolean} includeStart\n\t */\n\t_runActionsRange (startPos, endPos, jump, includeStart) {\n\t\tlet rev = startPos > endPos;\n\t\tlet action = rev ? this._actionTail : this._actionHead;\n\t\tlet ePos = endPos, sPos = startPos;\n\t\tif (rev) { ePos = startPos; sPos = endPos; }\n\t\tlet t = this.position;\n\t\twhile (action) {\n\t\t\tlet pos = action.t;\n\t\t\tif (pos === endPos || (pos > sPos && pos < ePos) || (includeStart && pos === startPos)) {\n\t\t\t\taction.funct.apply(action.scope, action.params);\n\t\t\t\tif (t !== this.position) { return true; }\n\t\t\t}\n\t\t\taction = rev ? action.prev : action.next;\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} props\n\t */\n\t_appendProps (props, step, stepPlugins) {\n\t\tlet initProps = this._stepHead.props, target = this.target, plugins = Tween._plugins;\n\t\tlet n, i, l, value, initValue, inject;\n\n\t\tlet oldStep = step.prev, oldProps = oldStep.props;\n\t\tlet stepProps = step.props || (step.props = this._cloneProps(oldProps));\n\t\tlet cleanProps = {};\n\n\t\tfor (n in props) {\n\t\t\tif (!props.hasOwnProperty(n)) { continue; }\n\t\t\tcleanProps[n] = stepProps[n] = props[n];\n\n\t\t\tif (initProps[n] !== undefined) { continue; }\n\n\t\t\tinitValue = undefined; // accessing missing properties on DOMElements when using CSSPlugin is INSANELY expensive, so we let the plugin take a first swing at it.\n\t\t\tif (plugins) {\n        for (i = plugins.length - 1; i >= 0; i--) {\n\t\t\t\t\tvalue = plugins[i].init(this, n, initValue);\n\t\t\t\t\tif (value !== undefined) { initValue = value; }\n\t\t\t\t\tif (initValue === Tween.IGNORE) {\n\t\t\t\t\t\t(ignored = ignored || {})[n] = true;\n\t\t\t\t\t\tdelete(stepProps[n]);\n\t\t\t\t\t\tdelete(cleanProps[n]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (initValue !== Tween.IGNORE) {\n\t\t\t\tif (initValue === undefined) { initValue = target[n]; }\n\t\t\t\toldProps[n] = (initValue === undefined) ? null : initValue;\n\t\t\t}\n\t\t}\n\n\t\tfor (n in cleanProps) {\n\t\t\tvalue = props[n];\n\n\t\t\t// propagate old value to previous steps:\n\t\t\tlet o, prev = oldStep;\n\t\t\twhile ((o = prev) && (prev = o.prev)) {\n\t\t\t\tif (prev.props === o.props) { continue; } // wait step\n\t\t\t\tif (prev.props[n] !== undefined) { break; } // already has a value, we're done.\n\t\t\t\tprev.props[n] = oldProps[n];\n\t\t\t}\n\t\t}\n\n\t\tif (stepPlugins && (plugins = this._plugins)) {\n      for (i = plugins.length - 1; i >= 0; i--) {\n\t\t\t\tplugins[i].step(this, step, cleanProps);\n\t\t\t}\n\t\t}\n\n\t\tif (inject = this._injected) {\n\t\t\tthis._injected = null;\n\t\t\tthis._appendProps(inject, step, false);\n\t\t}\n\t}\n\n\t/**\n\t * Used by plugins to inject properties onto the current step. Called from within `Plugin.step` calls.\n\t * For example, a plugin dealing with color, could read a hex color, and inject red, green, and blue props into the tween.\n\t * See the SamplePlugin for more info.\n\t * @see tweenjs.SamplePlugin\n\t * @private\n\t * @param {string} name\n\t * @param {Object} value\n\t */\n\t_injectProp (name, value) {\n\t\tlet o = this._injected || (this._injected = {});\n\t\to[name] = value;\n\t}\n\n\t/**\n\t * @private\n\t * @param {number} duration\n\t * @param {Object} props\n\t * @param {Function} ease\n\t * @param {boolean} [passive=false]\n\t */\n\t_addStep (duration, props, ease, passive = false) {\n\t\tlet step = new TweenStep(this._stepTail, this.duration, duration, props, ease, passive);\n\t\tthis.duration += duration;\n\t\treturn this._stepTail = (this._stepTail.next = step);\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} scope\n\t * @param {Function} funct\n\t * @param {Array} params\n\t */\n\t_addAction (scope, funct, params) {\n\t\tlet action = new TweenAction(this._actionTail, this.duration, scope, funct, params);\n\t\tif (this._actionTail) { this._actionTail.next = action; }\n\t\telse { this._actionHead = action; }\n\t\tthis._actionTail = action;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} props\n\t */\n\t_set (props) {\n\t\tfor (let n in props) {\n\t\t\tthis[n] = props[n];\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} props\n\t */\n\t_cloneProps (props) {\n\t\tlet o = {};\n\t\tfor (let n in props) { o[n] = props[n]; }\n\t\treturn o;\n\t}\n\n}\n\n// tiny api (primarily for tool output):\n{\n\tlet p = Tween.prototype;\n\tp.w = p.wait;\n\tp.t = p.to;\n\tp.c = p.call;\n\tp.s = p.set;\n}\n\n// static properties\n/**\n * Constant returned by plugins to tell the tween not to use default assignment.\n * @property IGNORE\n * @type {Object}\n * @static\n */\nTween.IGNORE = {};\n\n/**\n * @property _listeners\n * @type {Tween[]}\n * @static\n * @private\n */\nTween._tweens = [];\n\n/**\n * @property _plugins\n * @type {Object}\n * @static\n * @private\n */\nTween._plugins = null;\n\n/**\n * @property _tweenHead\n * @type {Tween}\n * @static\n * @private\n */\nTween._tweenHead = null;\n\n/**\n * @property _tweenTail\n * @type {Tween}\n * @static\n * @private\n */\nTween._tweenTail = null;\n\n// helpers:\n\n/**\n * @private\n * @param {*} prev\n * @param {*} t\n * @param {*} d\n * @param {*} props\n * @param {*} ease\n * @param {*} passive\n */\nclass TweenStep {\n\n\tconstructor (prev, t, d, props, ease, passive) {\n\t\tthis.next = null;\n\t\tthis.prev = prev;\n\t\tthis.t = t;\n\t\tthis.d = d;\n\t\tthis.props = props;\n\t\tthis.ease = ease;\n\t\tthis.passive = passive;\n\t\tthis.index = prev ? prev.index + 1 : 0;\n\t}\n\n}\n\n/**\n * @private\n * @param {*} prev\n * @param {*} t\n * @param {*} scope\n * @param {*} funct\n * @param {*} params\n */\nclass TweenAction {\n\n\tconstructor (prev, t, scope, funct, params) {\n\t\tthis.next = null;\n\t\tthis.d = 0;\n\t\tthis.prev = prev;\n\t\tthis.t = t;\n\t\tthis.scope = scope;\n\t\tthis.funct = funct;\n\t\tthis.params = params;\n\t}\n\n}\n\nexport default Tween;\n","/*\n* Timeline\n* Visit http://createjs.com/ for documentation, updates and examples.\n*\n* Copyright (c) 2010 gskinner.com, inc.\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport AbstractTween from \"./AbstractTween\";\n\n/**\n * The Timeline class synchronizes multiple tweens and allows them to be controlled as a group. Please note that if a\n * timeline is looping, the tweens on it may appear to loop even if the \"loop\" property of the tween is false.\n *\n * NOTE: Timeline currently also accepts a param list in the form: `tweens, labels, props`. This is for backwards\n * compatibility only and will be removed in the future. Include tweens and labels as properties on the props object.\n *\n * @memberof tweenjs\n * @extends AbstractTween\n *\n * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n * @param {boolean} [props.useTicks=false] See the {@link tweenjs.AbstractTween#useTicks} property for more information.\n * @param {boolean} [props.ignoreGlobalPause=false] See the {@link tweenjs.AbstractTween#ignoreGlobalPause} for more information.\n * @param {number|boolean} [props.loop=0] See the {@link tweenjs.AbstractTween#loop} for more information.\n * @param {boolean} [props.reversed=false] See the {@link tweenjs.AbstractTween#reversed} for more information.\n * @param {boolean} [props.bounce=false] See the {@link tweenjs.AbstractTween#bounce} for more information.\n * @param {number} [props.timeScale=1] See the {@link tweenjs.AbstractTween#timeScale} for more information.\n * @param {boolean} [props.paused=false] See the {@link tweenjs.AbstractTween#paused} for more information.\n * @param {number} [props.position] See the {@link tweenjs.AbstractTween#position} for more information.\n * @param {boolean} [props.tweens]\n * @param {number} [props.labels]\n * @param {Function} [props.onChange] Adds the specified function as a listener to the {@link tweenjs.AbstractTween#event:change} event.\n * @param {Function} [props.onComplete] Adds the specified function as a listener to the {@link tweenjs.AbstractTween#event:complete} event.\n * Supported props are listed below. These props are set on the corresponding instance properties except where\n * specified.<UL>\n *    <LI> `useTicks`</LI>\n *    <LI> `ignoreGlobalPause`</LI>\n *    <LI> `loop`</LI>\n *    <LI> `reversed`</LI>\n *    <LI> `bounce`</LI>\n *    <LI> `timeScale`</LI>\n *    <LI> `paused`</LI>\n *    <LI> `position`: indicates the initial position for this tween.</LI>\n *    <LI> `onChange`: adds the specified function as a listener to the `change` event</LI>\n *    <LI> `onComplete`: adds the specified function as a listener to the `complete` event</LI>\n * </UL>\n */\nclass Timeline extends AbstractTween {\n\n\tconstructor (props = {}) {\n\t\tsuper(props);\n\n\t\t/**\n\t\t * The array of tweens in the timeline. It is *strongly* recommended that you use\n\t\t * {@link tweenjs.Tween#addTween} and {@link tweenjs.Tween#removeTween},\n\t\t * rather than accessing this directly, but it is included for advanced uses.\n\t\t * @type {Tween[]}\n\t\t */\n\t\tthis.tweens = [];\n\n\t\tif (props.tweens) { this.addTween(...props.tweens); }\n\t\tif (props.labels) { this.labels = props.labels; }\n\n\t\tthis._init(props);\n\t}\n\n\t/**\n\t * Adds one or more tweens (or timelines) to this timeline. The tweens will be paused (to remove them from the\n\t * normal ticking system) and managed by this timeline. Adding a tween to multiple timelines will result in\n\t * unexpected behaviour.\n\t *\n\t * @param {Tween} ...tweens The tween(s) to add. Accepts multiple arguments.\n\t * @return {Tween} The first tween that was passed in.\n\t */\n\taddTween (...tweens) {\n\t\tconst l = tweens.length;\n\t\tif (l === 1) {\n\t\t\tconst tween = tweens[0];\n\t\t\tthis.tweens.push(tween);\n\t\t\ttween._parent = this;\n\t\t\ttween.paused = true;\n\t\t\tlet d = tween.duration;\n\t\t\tif (tween.loop > 0) { d *= tween.loop + 1; }\n\t\t\tif (d > this.duration) { this.duration = d; }\n\t\t\tif (this.rawPosition >= 0) { tween.setPosition(this.rawPosition); }\n\t\t\treturn tween;\n\t\t}\n\t\tif (l > 1) {\n\t\t\tfor (let i = 0; i < l; i++) { this.addTween(tweens[i]); }\n\t\t\treturn tweens[l - 1];\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Removes one or more tweens from this timeline.\n\t *\n\t * @param {Tween} ...tweens The tween(s) to remove. Accepts multiple arguments.\n\t * @return {boolean} Returns `true` if all of the tweens were successfully removed.\n\t */\n\tremoveTween (...tweens) {\n\t\tconst l = tweens.length;\n\t\tif (l === 1) {\n\t\t\tconst tw = this.tweens;\n\t\t\tconst tween = tweens[0];\n\t\t\tlet i = tw.length;\n\t\t\twhile (i--) {\n\t\t\t\tif (tw[i] === tween) {\n\t\t\t\t\ttw.splice(i, 1);\n\t\t\t\t\ttween._parent = null;\n\t\t\t\t\tif (tween.duration >= this.duration) { this.updateDuration(); }\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\tif (l > 1) {\n\t\t\tlet good = true;\n\t\t\tfor (let i = 0; i < l; i++) { good = good && this.removeTween(tweens[i]); }\n\t\t\treturn good;\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Recalculates the duration of the timeline. The duration is automatically updated when tweens are added or removed,\n\t * but this method is useful if you modify a tween after it was added to the timeline.\n\t */\n\tupdateDuration () {\n\t\tthis.duration = 0;\n\t\tfor (let i = 0, l = this.tweens.length; i < l; i++) {\n\t\t\tlet tween = this.tweens[i];\n\t\t\tlet d = tween.duration;\n\t\t\tif (tween.loop > 0) { d *= tween.loop + 1; }\n\t\t\tif (d > this.duration) { this.duration = d; }\n\t\t}\n\t}\n\n\t/**\n\t * @throws Timeline cannot be cloned.\n\t */\n\tclone () {\n\t\tthrow \"Timeline can not be cloned.\";\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_updatePosition (jump, end) {\n\t\tconst t = this.position;\n\t\tfor (let i = 0, l = this.tweens.length; i < l; i++) {\n\t\t\tthis.tweens[i].setPosition(t, true, jump); // actions will run after all the tweens update.\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\t_runActionsRange (startPos, endPos, jump, includeStart) {\n\t\t//console.log(\"\trange\", startPos, endPos, jump, includeStart);\n\t\tconst t = this.position;\n\t\tfor (let i = 0, l = this.tweens.length; i < l; i++) {\n\t\t\tthis.tweens[i]._runActions(startPos, endPos, jump, includeStart);\n\t\t\tif (t !== this.position) { return true; } // an action changed this timeline's position.\n\t\t}\n\t}\n\n}\n\nexport default Timeline;\n"]}